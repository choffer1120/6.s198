{"dependencies":[{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/package.json","includedInParent":true,"mtime":1534047879038},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/.babelrc","includedInParent":true,"mtime":1528828036274},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/node_modules/vega-lite/build/src/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../channel","loc":{"line":3,"column":24}},{"name":"../../log","loc":{"line":4,"column":18}},{"name":"../../scale","loc":{"line":5,"column":22}},{"name":"../../util","loc":{"line":7,"column":19}},{"name":"../model","loc":{"line":8,"column":22}},{"name":"../split","loc":{"line":9,"column":22}},{"name":"./range","loc":{"line":10,"column":22}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_1 = require(\"../../channel\");\nvar log = require(\"../../log\");\nvar scale_1 = require(\"../../scale\");\nvar util_1 = require(\"../../util\");\nvar util = require(\"../../util\");\nvar model_1 = require(\"../model\");\nvar split_1 = require(\"../split\");\nvar range_1 = require(\"./range\");\nfunction parseScaleProperty(model, property) {\n    if (model_1.isUnitModel(model)) {\n        parseUnitScaleProperty(model, property);\n    }\n    else {\n        parseNonUnitScaleProperty(model, property);\n    }\n}\nexports.parseScaleProperty = parseScaleProperty;\nfunction parseUnitScaleProperty(model, property) {\n    var localScaleComponents = model.component.scales;\n    util_1.keys(localScaleComponents).forEach(function (channel) {\n        var specifiedScale = model.specifiedScales[channel];\n        var localScaleCmpt = localScaleComponents[channel];\n        var mergedScaleCmpt = model.getScaleComponent(channel);\n        var fieldDef = model.fieldDef(channel);\n        var config = model.config;\n        var specifiedValue = specifiedScale[property];\n        var sType = mergedScaleCmpt.get('type');\n        var supportedByScaleType = scale_1.scaleTypeSupportProperty(sType, property);\n        var channelIncompatability = scale_1.channelScalePropertyIncompatability(channel, property);\n        if (specifiedValue !== undefined) {\n            // If there is a specified value, check if it is compatible with scale type and channel\n            if (!supportedByScaleType) {\n                log.warn(log.message.scalePropertyNotWorkWithScaleType(sType, property, channel));\n            }\n            else if (channelIncompatability) { // channel\n                log.warn(channelIncompatability);\n            }\n        }\n        if (supportedByScaleType && channelIncompatability === undefined) {\n            if (specifiedValue !== undefined) {\n                // copyKeyFromObject ensure type safety\n                localScaleCmpt.copyKeyFromObject(property, specifiedScale);\n            }\n            else {\n                var value = getDefaultValue(property, channel, fieldDef, mergedScaleCmpt.get('type'), mergedScaleCmpt.get('padding'), mergedScaleCmpt.get('paddingInner'), specifiedScale.domain, model.markDef, config);\n                if (value !== undefined) {\n                    localScaleCmpt.set(property, value, false);\n                }\n            }\n        }\n    });\n}\n// Note: This method is used in Voyager.\nfunction getDefaultValue(property, channel, fieldDef, scaleType, scalePadding, scalePaddingInner, specifiedDomain, markDef, config) {\n    var scaleConfig = config.scale;\n    // If we have default rule-base, determine default value first\n    switch (property) {\n        case 'nice':\n            return nice(scaleType, channel, fieldDef);\n        case 'padding':\n            return padding(channel, scaleType, scaleConfig, fieldDef, markDef, config.bar);\n        case 'paddingInner':\n            return paddingInner(scalePadding, channel, scaleConfig);\n        case 'paddingOuter':\n            return paddingOuter(scalePadding, channel, scaleType, scalePaddingInner, scaleConfig);\n        case 'reverse':\n            return reverse(scaleType, fieldDef.sort);\n        case 'zero':\n            return zero(channel, fieldDef, specifiedDomain, markDef);\n    }\n    // Otherwise, use scale config\n    return scaleConfig[property];\n}\nexports.getDefaultValue = getDefaultValue;\nfunction parseNonUnitScaleProperty(model, property) {\n    var localScaleComponents = model.component.scales;\n    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        if (property === 'range') {\n            range_1.parseScaleRange(child);\n        }\n        else {\n            parseScaleProperty(child, property);\n        }\n    }\n    util_1.keys(localScaleComponents).forEach(function (channel) {\n        var valueWithExplicit;\n        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childComponent = child.component.scales[channel];\n            if (childComponent) {\n                var childValueWithExplicit = childComponent.getWithExplicit(property);\n                valueWithExplicit = split_1.mergeValuesWithExplicit(valueWithExplicit, childValueWithExplicit, property, 'scale', split_1.tieBreakByComparing(function (v1, v2) {\n                    switch (property) {\n                        case 'range':\n                            // For range step, prefer larger step\n                            if (v1.step && v2.step) {\n                                return v1.step - v2.step;\n                            }\n                            return 0;\n                        // TODO: precedence rule for other properties\n                    }\n                    return 0;\n                }));\n            }\n        }\n        localScaleComponents[channel].setWithExplicit(property, valueWithExplicit);\n    });\n}\nexports.parseNonUnitScaleProperty = parseNonUnitScaleProperty;\nfunction nice(scaleType, channel, fieldDef) {\n    if (fieldDef.bin || util.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scaleType)) {\n        return undefined;\n    }\n    return util.contains([channel_1.X, channel_1.Y], channel); // return true for quantitative X/Y unless binned\n}\nexports.nice = nice;\nfunction padding(channel, scaleType, scaleConfig, fieldDef, markDef, barConfig) {\n    if (util.contains([channel_1.X, channel_1.Y], channel)) {\n        if (scale_1.isContinuousToContinuous(scaleType)) {\n            if (scaleConfig.continuousPadding !== undefined) {\n                return scaleConfig.continuousPadding;\n            }\n            var type = markDef.type, orient = markDef.orient;\n            if (type === 'bar' && !fieldDef.bin) {\n                if ((orient === 'vertical' && channel === 'x') ||\n                    (orient === 'horizontal' && channel === 'y')) {\n                    return barConfig.continuousBandSize;\n                }\n            }\n        }\n        if (scaleType === scale_1.ScaleType.POINT) {\n            return scaleConfig.pointPadding;\n        }\n    }\n    return undefined;\n}\nexports.padding = padding;\nfunction paddingInner(paddingValue, channel, scaleConfig) {\n    if (paddingValue !== undefined) {\n        // If user has already manually specified \"padding\", no need to add default paddingInner.\n        return undefined;\n    }\n    if (util.contains([channel_1.X, channel_1.Y], channel)) {\n        // Padding is only set for X and Y by default.\n        // Basically it doesn't make sense to add padding for color and size.\n        // paddingOuter would only be called if it's a band scale, just return the default for bandScale.\n        return scaleConfig.bandPaddingInner;\n    }\n    return undefined;\n}\nexports.paddingInner = paddingInner;\nfunction paddingOuter(paddingValue, channel, scaleType, paddingInnerValue, scaleConfig) {\n    if (paddingValue !== undefined) {\n        // If user has already manually specified \"padding\", no need to add default paddingOuter.\n        return undefined;\n    }\n    if (util.contains([channel_1.X, channel_1.Y], channel)) {\n        // Padding is only set for X and Y by default.\n        // Basically it doesn't make sense to add padding for color and size.\n        if (scaleType === scale_1.ScaleType.BAND) {\n            if (scaleConfig.bandPaddingOuter !== undefined) {\n                return scaleConfig.bandPaddingOuter;\n            }\n            /* By default, paddingOuter is paddingInner / 2. The reason is that\n                size (width/height) = step * (cardinality - paddingInner + 2 * paddingOuter).\n                and we want the width/height to be integer by default.\n                Note that step (by default) and cardinality are integers.) */\n            return paddingInnerValue / 2;\n        }\n    }\n    return undefined;\n}\nexports.paddingOuter = paddingOuter;\nfunction reverse(scaleType, sort) {\n    if (scale_1.hasContinuousDomain(scaleType) && sort === 'descending') {\n        // For continuous domain scales, Vega does not support domain sort.\n        // Thus, we reverse range instead if sort is descending\n        return true;\n    }\n    return undefined;\n}\nexports.reverse = reverse;\nfunction zero(channel, fieldDef, specifiedScale, markDef) {\n    // If users explicitly provide a domain range, we should not augment zero as that will be unexpected.\n    var hasCustomDomain = !!specifiedScale && specifiedScale !== 'unaggregated';\n    if (hasCustomDomain) {\n        return false;\n    }\n    // If there is no custom domain, return true only for the following cases:\n    // 1) using quantitative field with size\n    // While this can be either ratio or interval fields, our assumption is that\n    // ratio are more common.\n    if (channel === 'size' && fieldDef.type === 'quantitative') {\n        return true;\n    }\n    // 2) non-binned, quantitative x-scale or y-scale\n    // (For binning, we should not include zero by default because binning are calculated without zero.)\n    if (!fieldDef.bin && util.contains([channel_1.X, channel_1.Y], channel)) {\n        var orient = markDef.orient, type = markDef.type;\n        if (util_1.contains(['bar', 'area', 'line', 'trail'], type)) {\n            if ((orient === 'horizontal' && channel === 'y') ||\n                (orient === 'vertical' && channel === 'x')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexports.zero = zero;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/properties.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}}],"sources":{"node_modules/vega-lite/build/src/compile/scale/properties.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_1 = require(\"../../channel\");\nvar log = require(\"../../log\");\nvar scale_1 = require(\"../../scale\");\nvar util_1 = require(\"../../util\");\nvar util = require(\"../../util\");\nvar model_1 = require(\"../model\");\nvar split_1 = require(\"../split\");\nvar range_1 = require(\"./range\");\nfunction parseScaleProperty(model, property) {\n    if (model_1.isUnitModel(model)) {\n        parseUnitScaleProperty(model, property);\n    }\n    else {\n        parseNonUnitScaleProperty(model, property);\n    }\n}\nexports.parseScaleProperty = parseScaleProperty;\nfunction parseUnitScaleProperty(model, property) {\n    var localScaleComponents = model.component.scales;\n    util_1.keys(localScaleComponents).forEach(function (channel) {\n        var specifiedScale = model.specifiedScales[channel];\n        var localScaleCmpt = localScaleComponents[channel];\n        var mergedScaleCmpt = model.getScaleComponent(channel);\n        var fieldDef = model.fieldDef(channel);\n        var config = model.config;\n        var specifiedValue = specifiedScale[property];\n        var sType = mergedScaleCmpt.get('type');\n        var supportedByScaleType = scale_1.scaleTypeSupportProperty(sType, property);\n        var channelIncompatability = scale_1.channelScalePropertyIncompatability(channel, property);\n        if (specifiedValue !== undefined) {\n            // If there is a specified value, check if it is compatible with scale type and channel\n            if (!supportedByScaleType) {\n                log.warn(log.message.scalePropertyNotWorkWithScaleType(sType, property, channel));\n            }\n            else if (channelIncompatability) { // channel\n                log.warn(channelIncompatability);\n            }\n        }\n        if (supportedByScaleType && channelIncompatability === undefined) {\n            if (specifiedValue !== undefined) {\n                // copyKeyFromObject ensure type safety\n                localScaleCmpt.copyKeyFromObject(property, specifiedScale);\n            }\n            else {\n                var value = getDefaultValue(property, channel, fieldDef, mergedScaleCmpt.get('type'), mergedScaleCmpt.get('padding'), mergedScaleCmpt.get('paddingInner'), specifiedScale.domain, model.markDef, config);\n                if (value !== undefined) {\n                    localScaleCmpt.set(property, value, false);\n                }\n            }\n        }\n    });\n}\n// Note: This method is used in Voyager.\nfunction getDefaultValue(property, channel, fieldDef, scaleType, scalePadding, scalePaddingInner, specifiedDomain, markDef, config) {\n    var scaleConfig = config.scale;\n    // If we have default rule-base, determine default value first\n    switch (property) {\n        case 'nice':\n            return nice(scaleType, channel, fieldDef);\n        case 'padding':\n            return padding(channel, scaleType, scaleConfig, fieldDef, markDef, config.bar);\n        case 'paddingInner':\n            return paddingInner(scalePadding, channel, scaleConfig);\n        case 'paddingOuter':\n            return paddingOuter(scalePadding, channel, scaleType, scalePaddingInner, scaleConfig);\n        case 'reverse':\n            return reverse(scaleType, fieldDef.sort);\n        case 'zero':\n            return zero(channel, fieldDef, specifiedDomain, markDef);\n    }\n    // Otherwise, use scale config\n    return scaleConfig[property];\n}\nexports.getDefaultValue = getDefaultValue;\nfunction parseNonUnitScaleProperty(model, property) {\n    var localScaleComponents = model.component.scales;\n    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        if (property === 'range') {\n            range_1.parseScaleRange(child);\n        }\n        else {\n            parseScaleProperty(child, property);\n        }\n    }\n    util_1.keys(localScaleComponents).forEach(function (channel) {\n        var valueWithExplicit;\n        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childComponent = child.component.scales[channel];\n            if (childComponent) {\n                var childValueWithExplicit = childComponent.getWithExplicit(property);\n                valueWithExplicit = split_1.mergeValuesWithExplicit(valueWithExplicit, childValueWithExplicit, property, 'scale', split_1.tieBreakByComparing(function (v1, v2) {\n                    switch (property) {\n                        case 'range':\n                            // For range step, prefer larger step\n                            if (v1.step && v2.step) {\n                                return v1.step - v2.step;\n                            }\n                            return 0;\n                        // TODO: precedence rule for other properties\n                    }\n                    return 0;\n                }));\n            }\n        }\n        localScaleComponents[channel].setWithExplicit(property, valueWithExplicit);\n    });\n}\nexports.parseNonUnitScaleProperty = parseNonUnitScaleProperty;\nfunction nice(scaleType, channel, fieldDef) {\n    if (fieldDef.bin || util.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scaleType)) {\n        return undefined;\n    }\n    return util.contains([channel_1.X, channel_1.Y], channel); // return true for quantitative X/Y unless binned\n}\nexports.nice = nice;\nfunction padding(channel, scaleType, scaleConfig, fieldDef, markDef, barConfig) {\n    if (util.contains([channel_1.X, channel_1.Y], channel)) {\n        if (scale_1.isContinuousToContinuous(scaleType)) {\n            if (scaleConfig.continuousPadding !== undefined) {\n                return scaleConfig.continuousPadding;\n            }\n            var type = markDef.type, orient = markDef.orient;\n            if (type === 'bar' && !fieldDef.bin) {\n                if ((orient === 'vertical' && channel === 'x') ||\n                    (orient === 'horizontal' && channel === 'y')) {\n                    return barConfig.continuousBandSize;\n                }\n            }\n        }\n        if (scaleType === scale_1.ScaleType.POINT) {\n            return scaleConfig.pointPadding;\n        }\n    }\n    return undefined;\n}\nexports.padding = padding;\nfunction paddingInner(paddingValue, channel, scaleConfig) {\n    if (paddingValue !== undefined) {\n        // If user has already manually specified \"padding\", no need to add default paddingInner.\n        return undefined;\n    }\n    if (util.contains([channel_1.X, channel_1.Y], channel)) {\n        // Padding is only set for X and Y by default.\n        // Basically it doesn't make sense to add padding for color and size.\n        // paddingOuter would only be called if it's a band scale, just return the default for bandScale.\n        return scaleConfig.bandPaddingInner;\n    }\n    return undefined;\n}\nexports.paddingInner = paddingInner;\nfunction paddingOuter(paddingValue, channel, scaleType, paddingInnerValue, scaleConfig) {\n    if (paddingValue !== undefined) {\n        // If user has already manually specified \"padding\", no need to add default paddingOuter.\n        return undefined;\n    }\n    if (util.contains([channel_1.X, channel_1.Y], channel)) {\n        // Padding is only set for X and Y by default.\n        // Basically it doesn't make sense to add padding for color and size.\n        if (scaleType === scale_1.ScaleType.BAND) {\n            if (scaleConfig.bandPaddingOuter !== undefined) {\n                return scaleConfig.bandPaddingOuter;\n            }\n            /* By default, paddingOuter is paddingInner / 2. The reason is that\n                size (width/height) = step * (cardinality - paddingInner + 2 * paddingOuter).\n                and we want the width/height to be integer by default.\n                Note that step (by default) and cardinality are integers.) */\n            return paddingInnerValue / 2;\n        }\n    }\n    return undefined;\n}\nexports.paddingOuter = paddingOuter;\nfunction reverse(scaleType, sort) {\n    if (scale_1.hasContinuousDomain(scaleType) && sort === 'descending') {\n        // For continuous domain scales, Vega does not support domain sort.\n        // Thus, we reverse range instead if sort is descending\n        return true;\n    }\n    return undefined;\n}\nexports.reverse = reverse;\nfunction zero(channel, fieldDef, specifiedScale, markDef) {\n    // If users explicitly provide a domain range, we should not augment zero as that will be unexpected.\n    var hasCustomDomain = !!specifiedScale && specifiedScale !== 'unaggregated';\n    if (hasCustomDomain) {\n        return false;\n    }\n    // If there is no custom domain, return true only for the following cases:\n    // 1) using quantitative field with size\n    // While this can be either ratio or interval fields, our assumption is that\n    // ratio are more common.\n    if (channel === 'size' && fieldDef.type === 'quantitative') {\n        return true;\n    }\n    // 2) non-binned, quantitative x-scale or y-scale\n    // (For binning, we should not include zero by default because binning are calculated without zero.)\n    if (!fieldDef.bin && util.contains([channel_1.X, channel_1.Y], channel)) {\n        var orient = markDef.orient, type = markDef.type;\n        if (util_1.contains(['bar', 'area', 'line', 'trail'], type)) {\n            if ((orient === 'horizontal' && channel === 'y') ||\n                (orient === 'vertical' && channel === 'x')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexports.zero = zero;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":214}},"hash":"ca460b2cfb872d17f87e26014fef7603","cacheData":{"env":{}}}