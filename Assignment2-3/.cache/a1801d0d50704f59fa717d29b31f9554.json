{"dependencies":[{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\package.json","includedInParent":true,"mtime":1537759548368},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\.babelrc","includedInParent":true,"mtime":1536780611616},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\node_modules\\vega-lite\\build\\src\\package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22}},{"name":"../../bin","loc":{"line":4,"column":20}},{"name":"../../fielddef","loc":{"line":5,"column":25}},{"name":"../../util","loc":{"line":6,"column":21}},{"name":"../common","loc":{"line":7,"column":23}},{"name":"../model","loc":{"line":8,"column":22}},{"name":"./dataflow","loc":{"line":9,"column":25}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar bin_1 = require(\"../../bin\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar util_1 = require(\"../../util\");\nvar common_1 = require(\"../common\");\nvar model_1 = require(\"../model\");\nvar dataflow_1 = require(\"./dataflow\");\nfunction rangeFormula(model, fieldDef, channel, config) {\n    if (common_1.binRequiresRange(fieldDef, channel)) {\n        // read format from axis or legend, if there is no format then use config.numberFormat\n        var guide = model_1.isUnitModel(model) ? (model.axis(channel) || model.legend(channel) || {}) : {};\n        var startField = fielddef_1.vgField(fieldDef, { expr: 'datum', });\n        var endField = fielddef_1.vgField(fieldDef, { expr: 'datum', binSuffix: 'end' });\n        return {\n            formulaAs: fielddef_1.vgField(fieldDef, { binSuffix: 'range' }),\n            formula: common_1.binFormatExpression(startField, endField, guide.format, config)\n        };\n    }\n    return {};\n}\nfunction binKey(bin, field) {\n    return bin_1.binToString(bin) + \"_\" + field;\n}\nfunction getSignalsFromModel(model, key) {\n    return {\n        signal: model.getName(key + \"_bins\"),\n        extentSignal: model.getName(key + \"_extent\")\n    };\n}\nfunction isBinTransform(t) {\n    return 'as' in t;\n}\nfunction createBinComponent(t, model) {\n    var as;\n    if (isBinTransform(t)) {\n        as = [t.as, t.as + \"_end\"];\n    }\n    else {\n        as = [fielddef_1.vgField(t, {}), fielddef_1.vgField(t, { binSuffix: 'end' })];\n    }\n    var bin = fielddef_1.normalizeBin(t.bin, undefined) || {};\n    var key = binKey(bin, t.field);\n    var _a = getSignalsFromModel(model, key), signal = _a.signal, extentSignal = _a.extentSignal;\n    var binComponent = tslib_1.__assign({ bin: bin, field: t.field, as: as }, signal ? { signal: signal } : {}, extentSignal ? { extentSignal: extentSignal } : {});\n    return { key: key, binComponent: binComponent };\n}\nvar BinNode = /** @class */ (function (_super) {\n    tslib_1.__extends(BinNode, _super);\n    function BinNode(parent, bins) {\n        var _this = _super.call(this, parent) || this;\n        _this.bins = bins;\n        return _this;\n    }\n    BinNode.prototype.clone = function () {\n        return new BinNode(null, util_1.duplicate(this.bins));\n    };\n    BinNode.makeFromEncoding = function (parent, model) {\n        var bins = model.reduceFieldDef(function (binComponentIndex, fieldDef, channel) {\n            if (fieldDef.bin) {\n                var _a = createBinComponent(fieldDef, model), key = _a.key, binComponent = _a.binComponent;\n                binComponentIndex[key] = tslib_1.__assign({}, binComponent, binComponentIndex[key], rangeFormula(model, fieldDef, channel, model.config));\n            }\n            return binComponentIndex;\n        }, {});\n        if (util_1.keys(bins).length === 0) {\n            return null;\n        }\n        return new BinNode(parent, bins);\n    };\n    /**\n     * Creates a bin node from BinTransform.\n     * The optional parameter should provide\n     */\n    BinNode.makeFromTransform = function (parent, t, model) {\n        var _a = createBinComponent(t, model), key = _a.key, binComponent = _a.binComponent;\n        return new BinNode(parent, (_b = {},\n            _b[key] = binComponent,\n            _b));\n        var _b;\n    };\n    BinNode.prototype.merge = function (other) {\n        this.bins = tslib_1.__assign({}, this.bins, other.bins);\n        other.remove();\n    };\n    BinNode.prototype.producedFields = function () {\n        var out = {};\n        util_1.vals(this.bins).forEach(function (c) {\n            c.as.forEach(function (f) { return out[f] = true; });\n        });\n        return out;\n    };\n    BinNode.prototype.dependentFields = function () {\n        var out = {};\n        util_1.vals(this.bins).forEach(function (c) {\n            out[c.field] = true;\n        });\n        return out;\n    };\n    BinNode.prototype.assemble = function () {\n        return util_1.flatten(util_1.vals(this.bins).map(function (bin) {\n            var transform = [];\n            var binTrans = tslib_1.__assign({ type: 'bin', field: bin.field, as: bin.as, signal: bin.signal }, bin.bin);\n            if (!bin.bin.extent && bin.extentSignal) {\n                transform.push({\n                    type: 'extent',\n                    field: bin.field,\n                    signal: bin.extentSignal\n                });\n                binTrans.extent = { signal: bin.extentSignal };\n            }\n            transform.push(binTrans);\n            if (bin.formula) {\n                transform.push({\n                    type: 'formula',\n                    expr: bin.formula,\n                    as: bin.formulaAs\n                });\n            }\n            return transform;\n        }));\n    };\n    return BinNode;\n}(dataflow_1.DataFlowNode));\nexports.BinNode = BinNode;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}}],"sources":{"node_modules\\vega-lite\\build\\src\\compile\\data\\bin.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar bin_1 = require(\"../../bin\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar util_1 = require(\"../../util\");\nvar common_1 = require(\"../common\");\nvar model_1 = require(\"../model\");\nvar dataflow_1 = require(\"./dataflow\");\nfunction rangeFormula(model, fieldDef, channel, config) {\n    if (common_1.binRequiresRange(fieldDef, channel)) {\n        // read format from axis or legend, if there is no format then use config.numberFormat\n        var guide = model_1.isUnitModel(model) ? (model.axis(channel) || model.legend(channel) || {}) : {};\n        var startField = fielddef_1.vgField(fieldDef, { expr: 'datum', });\n        var endField = fielddef_1.vgField(fieldDef, { expr: 'datum', binSuffix: 'end' });\n        return {\n            formulaAs: fielddef_1.vgField(fieldDef, { binSuffix: 'range' }),\n            formula: common_1.binFormatExpression(startField, endField, guide.format, config)\n        };\n    }\n    return {};\n}\nfunction binKey(bin, field) {\n    return bin_1.binToString(bin) + \"_\" + field;\n}\nfunction getSignalsFromModel(model, key) {\n    return {\n        signal: model.getName(key + \"_bins\"),\n        extentSignal: model.getName(key + \"_extent\")\n    };\n}\nfunction isBinTransform(t) {\n    return 'as' in t;\n}\nfunction createBinComponent(t, model) {\n    var as;\n    if (isBinTransform(t)) {\n        as = [t.as, t.as + \"_end\"];\n    }\n    else {\n        as = [fielddef_1.vgField(t, {}), fielddef_1.vgField(t, { binSuffix: 'end' })];\n    }\n    var bin = fielddef_1.normalizeBin(t.bin, undefined) || {};\n    var key = binKey(bin, t.field);\n    var _a = getSignalsFromModel(model, key), signal = _a.signal, extentSignal = _a.extentSignal;\n    var binComponent = tslib_1.__assign({ bin: bin, field: t.field, as: as }, signal ? { signal: signal } : {}, extentSignal ? { extentSignal: extentSignal } : {});\n    return { key: key, binComponent: binComponent };\n}\nvar BinNode = /** @class */ (function (_super) {\n    tslib_1.__extends(BinNode, _super);\n    function BinNode(parent, bins) {\n        var _this = _super.call(this, parent) || this;\n        _this.bins = bins;\n        return _this;\n    }\n    BinNode.prototype.clone = function () {\n        return new BinNode(null, util_1.duplicate(this.bins));\n    };\n    BinNode.makeFromEncoding = function (parent, model) {\n        var bins = model.reduceFieldDef(function (binComponentIndex, fieldDef, channel) {\n            if (fieldDef.bin) {\n                var _a = createBinComponent(fieldDef, model), key = _a.key, binComponent = _a.binComponent;\n                binComponentIndex[key] = tslib_1.__assign({}, binComponent, binComponentIndex[key], rangeFormula(model, fieldDef, channel, model.config));\n            }\n            return binComponentIndex;\n        }, {});\n        if (util_1.keys(bins).length === 0) {\n            return null;\n        }\n        return new BinNode(parent, bins);\n    };\n    /**\n     * Creates a bin node from BinTransform.\n     * The optional parameter should provide\n     */\n    BinNode.makeFromTransform = function (parent, t, model) {\n        var _a = createBinComponent(t, model), key = _a.key, binComponent = _a.binComponent;\n        return new BinNode(parent, (_b = {},\n            _b[key] = binComponent,\n            _b));\n        var _b;\n    };\n    BinNode.prototype.merge = function (other) {\n        this.bins = tslib_1.__assign({}, this.bins, other.bins);\n        other.remove();\n    };\n    BinNode.prototype.producedFields = function () {\n        var out = {};\n        util_1.vals(this.bins).forEach(function (c) {\n            c.as.forEach(function (f) { return out[f] = true; });\n        });\n        return out;\n    };\n    BinNode.prototype.dependentFields = function () {\n        var out = {};\n        util_1.vals(this.bins).forEach(function (c) {\n            out[c.field] = true;\n        });\n        return out;\n    };\n    BinNode.prototype.assemble = function () {\n        return util_1.flatten(util_1.vals(this.bins).map(function (bin) {\n            var transform = [];\n            var binTrans = tslib_1.__assign({ type: 'bin', field: bin.field, as: bin.as, signal: bin.signal }, bin.bin);\n            if (!bin.bin.extent && bin.extentSignal) {\n                transform.push({\n                    type: 'extent',\n                    field: bin.field,\n                    signal: bin.extentSignal\n                });\n                binTrans.extent = { signal: bin.extentSignal };\n            }\n            transform.push(binTrans);\n            if (bin.formula) {\n                transform.push({\n                    type: 'formula',\n                    expr: bin.formula,\n                    as: bin.formulaAs\n                });\n            }\n            return transform;\n        }));\n    };\n    return BinNode;\n}(dataflow_1.DataFlowNode));\nexports.BinNode = BinNode;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":127}},"hash":"799e5c7d2d5ac389b05b527350f06a30","cacheData":{"env":{}}}