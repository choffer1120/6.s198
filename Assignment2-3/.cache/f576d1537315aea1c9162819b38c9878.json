{"dependencies":[{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\assignment2\\Assignment2-3\\package.json","includedInParent":true,"mtime":1536780765907},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\assignment2\\Assignment2-3\\.babelrc","includedInParent":true,"mtime":1536780611616},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\assignment2\\Assignment2-3\\node_modules\\vega-lite\\build\\src\\package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22}},{"name":"../../channel","loc":{"line":4,"column":24}},{"name":"../../fielddef","loc":{"line":5,"column":25}},{"name":"../../log","loc":{"line":6,"column":18}},{"name":"../../util","loc":{"line":7,"column":21}},{"name":"../common","loc":{"line":8,"column":23}},{"name":"./dataflow","loc":{"line":9,"column":25}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar channel_1 = require(\"../../channel\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar log = require(\"../../log\");\nvar util_1 = require(\"../../util\");\nvar common_1 = require(\"../common\");\nvar dataflow_1 = require(\"./dataflow\");\nfunction addDimension(dims, channel, fieldDef) {\n    if (fieldDef.bin) {\n        dims[fielddef_1.vgField(fieldDef, {})] = true;\n        dims[fielddef_1.vgField(fieldDef, { binSuffix: 'end' })] = true;\n        if (common_1.binRequiresRange(fieldDef, channel)) {\n            dims[fielddef_1.vgField(fieldDef, { binSuffix: 'range' })] = true;\n        }\n    }\n    else {\n        dims[fielddef_1.vgField(fieldDef)] = true;\n    }\n    return dims;\n}\nfunction mergeMeasures(parentMeasures, childMeasures) {\n    for (var f in childMeasures) {\n        if (childMeasures.hasOwnProperty(f)) {\n            // when we merge a measure, we either have to add an aggregation operator or even a new field\n            var ops = childMeasures[f];\n            for (var op in ops) {\n                if (ops.hasOwnProperty(op)) {\n                    if (f in parentMeasures) {\n                        // add operator to existing measure field\n                        parentMeasures[f][op] = ops[op];\n                    }\n                    else {\n                        parentMeasures[f] = { op: ops[op] };\n                    }\n                }\n            }\n        }\n    }\n}\nvar AggregateNode = /** @class */ (function (_super) {\n    tslib_1.__extends(AggregateNode, _super);\n    /**\n     * @param dimensions string set for dimensions\n     * @param measures dictionary mapping field name => dict of aggregation functions and names to use\n     */\n    function AggregateNode(parent, dimensions, measures) {\n        var _this = _super.call(this, parent) || this;\n        _this.dimensions = dimensions;\n        _this.measures = measures;\n        return _this;\n    }\n    AggregateNode.prototype.clone = function () {\n        return new AggregateNode(null, tslib_1.__assign({}, this.dimensions), util_1.duplicate(this.measures));\n    };\n    AggregateNode.makeFromEncoding = function (parent, model) {\n        var isAggregate = false;\n        model.forEachFieldDef(function (fd) {\n            if (fd.aggregate) {\n                isAggregate = true;\n            }\n        });\n        var meas = {};\n        var dims = {};\n        if (!isAggregate) {\n            // no need to create this node if the model has no aggregation\n            return null;\n        }\n        model.forEachFieldDef(function (fieldDef, channel) {\n            var aggregate = fieldDef.aggregate, field = fieldDef.field;\n            if (aggregate) {\n                if (aggregate === 'count') {\n                    meas['*'] = meas['*'] || {};\n                    meas['*']['count'] = fielddef_1.vgField(fieldDef);\n                }\n                else {\n                    meas[field] = meas[field] || {};\n                    meas[field][aggregate] = fielddef_1.vgField(fieldDef);\n                    // For scale channel with domain === 'unaggregated', add min/max so we can use their union as unaggregated domain\n                    if (channel_1.isScaleChannel(channel) && model.scaleDomain(channel) === 'unaggregated') {\n                        meas[field]['min'] = fielddef_1.vgField({ field: field, aggregate: 'min' });\n                        meas[field]['max'] = fielddef_1.vgField({ field: field, aggregate: 'max' });\n                    }\n                }\n            }\n            else {\n                addDimension(dims, channel, fieldDef);\n            }\n        });\n        if ((util_1.keys(dims).length + util_1.keys(meas).length) === 0) {\n            return null;\n        }\n        return new AggregateNode(parent, dims, meas);\n    };\n    AggregateNode.makeFromTransform = function (parent, t) {\n        var dims = {};\n        var meas = {};\n        for (var _i = 0, _a = t.aggregate; _i < _a.length; _i++) {\n            var s = _a[_i];\n            var op = s.op, field = s.field, as = s.as;\n            if (op) {\n                if (op === 'count') {\n                    meas['*'] = meas['*'] || {};\n                    meas['*']['count'] = as || fielddef_1.vgField(s);\n                }\n                else {\n                    meas[field] = meas[field] || {};\n                    meas[field][op] = as || fielddef_1.vgField(s);\n                }\n            }\n        }\n        for (var _b = 0, _c = t.groupby || []; _b < _c.length; _b++) {\n            var s = _c[_b];\n            dims[s] = true;\n        }\n        if ((util_1.keys(dims).length + util_1.keys(meas).length) === 0) {\n            return null;\n        }\n        return new AggregateNode(parent, dims, meas);\n    };\n    AggregateNode.prototype.merge = function (other) {\n        if (!util_1.differ(this.dimensions, other.dimensions)) {\n            mergeMeasures(this.measures, other.measures);\n            other.remove();\n        }\n        else {\n            log.debug('different dimensions, cannot merge');\n        }\n    };\n    AggregateNode.prototype.addDimensions = function (fields) {\n        var _this = this;\n        fields.forEach(function (f) { return _this.dimensions[f] = true; });\n    };\n    AggregateNode.prototype.dependentFields = function () {\n        var out = {};\n        util_1.keys(this.dimensions).forEach(function (f) { return out[f] = true; });\n        util_1.keys(this.measures).forEach(function (m) { return out[m] = true; });\n        return out;\n    };\n    AggregateNode.prototype.producedFields = function () {\n        var _this = this;\n        var out = {};\n        util_1.keys(this.measures).forEach(function (field) {\n            util_1.keys(_this.measures[field]).forEach(function (op) {\n                out[op + \"_\" + field] = true;\n            });\n        });\n        return out;\n    };\n    AggregateNode.prototype.assemble = function () {\n        var ops = [];\n        var fields = [];\n        var as = [];\n        for (var _i = 0, _a = util_1.keys(this.measures); _i < _a.length; _i++) {\n            var field = _a[_i];\n            for (var _b = 0, _c = util_1.keys(this.measures[field]); _b < _c.length; _b++) {\n                var op = _c[_b];\n                as.push(this.measures[field][op]);\n                ops.push(op);\n                fields.push(field);\n            }\n        }\n        var result = {\n            type: 'aggregate',\n            groupby: util_1.keys(this.dimensions),\n            ops: ops,\n            fields: fields,\n            as: as\n        };\n        return result;\n    };\n    return AggregateNode;\n}(dataflow_1.DataFlowNode));\nexports.AggregateNode = AggregateNode;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}}],"sources":{"node_modules\\vega-lite\\build\\src\\compile\\data\\aggregate.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar channel_1 = require(\"../../channel\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar log = require(\"../../log\");\nvar util_1 = require(\"../../util\");\nvar common_1 = require(\"../common\");\nvar dataflow_1 = require(\"./dataflow\");\nfunction addDimension(dims, channel, fieldDef) {\n    if (fieldDef.bin) {\n        dims[fielddef_1.vgField(fieldDef, {})] = true;\n        dims[fielddef_1.vgField(fieldDef, { binSuffix: 'end' })] = true;\n        if (common_1.binRequiresRange(fieldDef, channel)) {\n            dims[fielddef_1.vgField(fieldDef, { binSuffix: 'range' })] = true;\n        }\n    }\n    else {\n        dims[fielddef_1.vgField(fieldDef)] = true;\n    }\n    return dims;\n}\nfunction mergeMeasures(parentMeasures, childMeasures) {\n    for (var f in childMeasures) {\n        if (childMeasures.hasOwnProperty(f)) {\n            // when we merge a measure, we either have to add an aggregation operator or even a new field\n            var ops = childMeasures[f];\n            for (var op in ops) {\n                if (ops.hasOwnProperty(op)) {\n                    if (f in parentMeasures) {\n                        // add operator to existing measure field\n                        parentMeasures[f][op] = ops[op];\n                    }\n                    else {\n                        parentMeasures[f] = { op: ops[op] };\n                    }\n                }\n            }\n        }\n    }\n}\nvar AggregateNode = /** @class */ (function (_super) {\n    tslib_1.__extends(AggregateNode, _super);\n    /**\n     * @param dimensions string set for dimensions\n     * @param measures dictionary mapping field name => dict of aggregation functions and names to use\n     */\n    function AggregateNode(parent, dimensions, measures) {\n        var _this = _super.call(this, parent) || this;\n        _this.dimensions = dimensions;\n        _this.measures = measures;\n        return _this;\n    }\n    AggregateNode.prototype.clone = function () {\n        return new AggregateNode(null, tslib_1.__assign({}, this.dimensions), util_1.duplicate(this.measures));\n    };\n    AggregateNode.makeFromEncoding = function (parent, model) {\n        var isAggregate = false;\n        model.forEachFieldDef(function (fd) {\n            if (fd.aggregate) {\n                isAggregate = true;\n            }\n        });\n        var meas = {};\n        var dims = {};\n        if (!isAggregate) {\n            // no need to create this node if the model has no aggregation\n            return null;\n        }\n        model.forEachFieldDef(function (fieldDef, channel) {\n            var aggregate = fieldDef.aggregate, field = fieldDef.field;\n            if (aggregate) {\n                if (aggregate === 'count') {\n                    meas['*'] = meas['*'] || {};\n                    meas['*']['count'] = fielddef_1.vgField(fieldDef);\n                }\n                else {\n                    meas[field] = meas[field] || {};\n                    meas[field][aggregate] = fielddef_1.vgField(fieldDef);\n                    // For scale channel with domain === 'unaggregated', add min/max so we can use their union as unaggregated domain\n                    if (channel_1.isScaleChannel(channel) && model.scaleDomain(channel) === 'unaggregated') {\n                        meas[field]['min'] = fielddef_1.vgField({ field: field, aggregate: 'min' });\n                        meas[field]['max'] = fielddef_1.vgField({ field: field, aggregate: 'max' });\n                    }\n                }\n            }\n            else {\n                addDimension(dims, channel, fieldDef);\n            }\n        });\n        if ((util_1.keys(dims).length + util_1.keys(meas).length) === 0) {\n            return null;\n        }\n        return new AggregateNode(parent, dims, meas);\n    };\n    AggregateNode.makeFromTransform = function (parent, t) {\n        var dims = {};\n        var meas = {};\n        for (var _i = 0, _a = t.aggregate; _i < _a.length; _i++) {\n            var s = _a[_i];\n            var op = s.op, field = s.field, as = s.as;\n            if (op) {\n                if (op === 'count') {\n                    meas['*'] = meas['*'] || {};\n                    meas['*']['count'] = as || fielddef_1.vgField(s);\n                }\n                else {\n                    meas[field] = meas[field] || {};\n                    meas[field][op] = as || fielddef_1.vgField(s);\n                }\n            }\n        }\n        for (var _b = 0, _c = t.groupby || []; _b < _c.length; _b++) {\n            var s = _c[_b];\n            dims[s] = true;\n        }\n        if ((util_1.keys(dims).length + util_1.keys(meas).length) === 0) {\n            return null;\n        }\n        return new AggregateNode(parent, dims, meas);\n    };\n    AggregateNode.prototype.merge = function (other) {\n        if (!util_1.differ(this.dimensions, other.dimensions)) {\n            mergeMeasures(this.measures, other.measures);\n            other.remove();\n        }\n        else {\n            log.debug('different dimensions, cannot merge');\n        }\n    };\n    AggregateNode.prototype.addDimensions = function (fields) {\n        var _this = this;\n        fields.forEach(function (f) { return _this.dimensions[f] = true; });\n    };\n    AggregateNode.prototype.dependentFields = function () {\n        var out = {};\n        util_1.keys(this.dimensions).forEach(function (f) { return out[f] = true; });\n        util_1.keys(this.measures).forEach(function (m) { return out[m] = true; });\n        return out;\n    };\n    AggregateNode.prototype.producedFields = function () {\n        var _this = this;\n        var out = {};\n        util_1.keys(this.measures).forEach(function (field) {\n            util_1.keys(_this.measures[field]).forEach(function (op) {\n                out[op + \"_\" + field] = true;\n            });\n        });\n        return out;\n    };\n    AggregateNode.prototype.assemble = function () {\n        var ops = [];\n        var fields = [];\n        var as = [];\n        for (var _i = 0, _a = util_1.keys(this.measures); _i < _a.length; _i++) {\n            var field = _a[_i];\n            for (var _b = 0, _c = util_1.keys(this.measures[field]); _b < _c.length; _b++) {\n                var op = _c[_b];\n                as.push(this.measures[field][op]);\n                ops.push(op);\n                fields.push(field);\n            }\n        }\n        var result = {\n            type: 'aggregate',\n            groupby: util_1.keys(this.dimensions),\n            ops: ops,\n            fields: fields,\n            as: as\n        };\n        return result;\n    };\n    return AggregateNode;\n}(dataflow_1.DataFlowNode));\nexports.AggregateNode = AggregateNode;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":176}},"hash":"1fb0da961a5073c70f8418e4b8c7cc79","cacheData":{"env":{}}}