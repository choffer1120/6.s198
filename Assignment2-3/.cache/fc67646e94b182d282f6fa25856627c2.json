{"dependencies":[{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\package.json","includedInParent":true,"mtime":1537759548368},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\.babelrc","includedInParent":true,"mtime":1536780611616},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\node_modules\\vega-lite\\build\\src\\package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22}},{"name":"vega-util","loc":{"line":4,"column":26}},{"name":"../encoding","loc":{"line":5,"column":25}},{"name":"./../encoding","loc":{"line":6,"column":25}},{"name":"./../fielddef","loc":{"line":7,"column":25}},{"name":"./../log","loc":{"line":8,"column":18}},{"name":"./common","loc":{"line":9,"column":23}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar vega_util_1 = require(\"vega-util\");\nvar encoding_1 = require(\"../encoding\");\nvar encoding_2 = require(\"./../encoding\");\nvar fielddef_1 = require(\"./../fielddef\");\nvar log = require(\"./../log\");\nvar common_1 = require(\"./common\");\nexports.BOXPLOT = 'box-plot';\nfunction isBoxPlotDef(mark) {\n    return !!mark['type'];\n}\nexports.isBoxPlotDef = isBoxPlotDef;\nexports.BOXPLOT_STYLES = ['boxWhisker', 'box', 'boxMid'];\nexports.VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX = {\n    box: ['size', 'color', 'extent'],\n    boxWhisker: ['color'],\n    boxMid: ['color']\n};\nvar supportedChannels = ['x', 'y', 'color', 'detail', 'opacity', 'size'];\nfunction filterUnsupportedChannels(spec) {\n    return tslib_1.__assign({}, spec, { encoding: encoding_1.reduce(spec.encoding, function (newEncoding, fieldDef, channel) {\n            if (supportedChannels.indexOf(channel) > -1) {\n                newEncoding[channel] = fieldDef;\n            }\n            else {\n                log.warn(log.message.incompatibleChannel(channel, exports.BOXPLOT));\n            }\n            return newEncoding;\n        }, {}) });\n}\nexports.filterUnsupportedChannels = filterUnsupportedChannels;\nfunction normalizeBoxPlot(spec, config) {\n    spec = filterUnsupportedChannels(spec);\n    // TODO: use selection\n    var mark = spec.mark, encoding = spec.encoding, selection = spec.selection, _p = spec.projection, outerSpec = tslib_1.__rest(spec, [\"mark\", \"encoding\", \"selection\", \"projection\"]);\n    var kIQRScalar = undefined;\n    if (vega_util_1.isNumber(config.box.extent)) {\n        kIQRScalar = config.box.extent;\n    }\n    if (isBoxPlotDef(mark)) {\n        if (mark.extent) {\n            if (mark.extent === 'min-max') {\n                kIQRScalar = undefined;\n            }\n        }\n    }\n    var orient = boxOrient(spec);\n    var _a = boxParams(spec, orient, kIQRScalar), transform = _a.transform, continuousAxisChannelDef = _a.continuousAxisChannelDef, continuousAxis = _a.continuousAxis, encodingWithoutContinuousAxis = _a.encodingWithoutContinuousAxis;\n    var color = encodingWithoutContinuousAxis.color, size = encodingWithoutContinuousAxis.size, encodingWithoutSizeColorAndContinuousAxis = tslib_1.__rest(encodingWithoutContinuousAxis, [\"color\", \"size\"]);\n    // Size encoding or the default config.box.size is applied to box and boxMid\n    var sizeMixins = size ? { size: size } : common_1.getMarkSpecificConfigMixins(config.box, 'size');\n    var continuousAxisScaleAndAxis = {};\n    if (continuousAxisChannelDef.scale) {\n        continuousAxisScaleAndAxis['scale'] = continuousAxisChannelDef.scale;\n    }\n    if (continuousAxisChannelDef.axis) {\n        continuousAxisScaleAndAxis['axis'] = continuousAxisChannelDef.axis;\n    }\n    return tslib_1.__assign({}, outerSpec, { transform: transform, layer: [\n            {\n                mark: {\n                    type: 'rule',\n                    style: 'boxWhisker'\n                },\n                encoding: tslib_1.__assign((_b = {}, _b[continuousAxis] = tslib_1.__assign({ field: 'lower_whisker_' + continuousAxisChannelDef.field, type: continuousAxisChannelDef.type }, continuousAxisScaleAndAxis), _b[continuousAxis + '2'] = {\n                    field: 'lower_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _b), encodingWithoutSizeColorAndContinuousAxis, common_1.getMarkSpecificConfigMixins(config.boxWhisker, 'color'))\n            }, {\n                mark: {\n                    type: 'rule',\n                    style: 'boxWhisker'\n                },\n                encoding: tslib_1.__assign((_c = {}, _c[continuousAxis] = {\n                    field: 'upper_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _c[continuousAxis + '2'] = {\n                    field: 'upper_whisker_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _c), encodingWithoutSizeColorAndContinuousAxis, common_1.getMarkSpecificConfigMixins(config.boxWhisker, 'color'))\n            },\n            tslib_1.__assign({}, (selection ? { selection: selection } : {}), { mark: {\n                    type: 'bar',\n                    style: 'box'\n                }, encoding: tslib_1.__assign((_d = {}, _d[continuousAxis] = {\n                    field: 'lower_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _d[continuousAxis + '2'] = {\n                    field: 'upper_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _d), encodingWithoutContinuousAxis, (encodingWithoutContinuousAxis.color ? {} : common_1.getMarkSpecificConfigMixins(config.box, 'color')), sizeMixins) }),\n            {\n                mark: {\n                    type: 'tick',\n                    style: 'boxMid'\n                },\n                encoding: tslib_1.__assign((_e = {}, _e[continuousAxis] = {\n                    field: 'mid_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _e), encodingWithoutSizeColorAndContinuousAxis, common_1.getMarkSpecificConfigMixins(config.boxMid, 'color'), sizeMixins)\n            }\n        ] });\n    var _b, _c, _d, _e;\n}\nexports.normalizeBoxPlot = normalizeBoxPlot;\nfunction boxOrient(spec) {\n    var mark = spec.mark, encoding = spec.encoding, _p = spec.projection, _outerSpec = tslib_1.__rest(spec, [\"mark\", \"encoding\", \"projection\"]);\n    if (fielddef_1.isFieldDef(encoding.x) && fielddef_1.isContinuous(encoding.x)) {\n        // x is continuous\n        if (fielddef_1.isFieldDef(encoding.y) && fielddef_1.isContinuous(encoding.y)) {\n            // both x and y are continuous\n            if (encoding.x.aggregate === undefined && encoding.y.aggregate === exports.BOXPLOT) {\n                return 'vertical';\n            }\n            else if (encoding.y.aggregate === undefined && encoding.x.aggregate === exports.BOXPLOT) {\n                return 'horizontal';\n            }\n            else if (encoding.x.aggregate === exports.BOXPLOT && encoding.y.aggregate === exports.BOXPLOT) {\n                throw new Error('Both x and y cannot have aggregate');\n            }\n            else {\n                if (isBoxPlotDef(mark) && mark.orient) {\n                    return mark.orient;\n                }\n                // default orientation = vertical\n                return 'vertical';\n            }\n        }\n        // x is continuous but y is not\n        return 'horizontal';\n    }\n    else if (fielddef_1.isFieldDef(encoding.y) && fielddef_1.isContinuous(encoding.y)) {\n        // y is continuous but x is not\n        return 'vertical';\n    }\n    else {\n        // Neither x nor y is continuous.\n        throw new Error('Need a valid continuous axis for boxplots');\n    }\n}\nfunction boxContinousAxis(spec, orient) {\n    var mark = spec.mark, encoding = spec.encoding, _p = spec.projection, _outerSpec = tslib_1.__rest(spec, [\"mark\", \"encoding\", \"projection\"]);\n    var continuousAxisChannelDef;\n    var continuousAxis;\n    if (orient === 'vertical') {\n        continuousAxis = 'y';\n        continuousAxisChannelDef = encoding.y; // Safe to cast because if y is not continuous fielddef, the orient would not be vertical.\n    }\n    else {\n        continuousAxis = 'x';\n        continuousAxisChannelDef = encoding.x; // Safe to cast because if x is not continuous fielddef, the orient would not be horizontal.\n    }\n    if (continuousAxisChannelDef && continuousAxisChannelDef.aggregate) {\n        var aggregate = continuousAxisChannelDef.aggregate, continuousAxisWithoutAggregate = tslib_1.__rest(continuousAxisChannelDef, [\"aggregate\"]);\n        if (aggregate !== exports.BOXPLOT) {\n            log.warn(\"Continuous axis should not have customized aggregation function \" + aggregate);\n        }\n        continuousAxisChannelDef = continuousAxisWithoutAggregate;\n    }\n    return {\n        continuousAxisChannelDef: continuousAxisChannelDef,\n        continuousAxis: continuousAxis\n    };\n}\nfunction boxParams(spec, orient, kIQRScalar) {\n    var _a = boxContinousAxis(spec, orient), continuousAxisChannelDef = _a.continuousAxisChannelDef, continuousAxis = _a.continuousAxis;\n    var encoding = spec.encoding;\n    var isMinMax = kIQRScalar === undefined;\n    var aggregate = [\n        {\n            op: 'q1',\n            field: continuousAxisChannelDef.field,\n            as: 'lower_box_' + continuousAxisChannelDef.field\n        },\n        {\n            op: 'q3',\n            field: continuousAxisChannelDef.field,\n            as: 'upper_box_' + continuousAxisChannelDef.field\n        },\n        {\n            op: 'median',\n            field: continuousAxisChannelDef.field,\n            as: 'mid_box_' + continuousAxisChannelDef.field\n        }\n    ];\n    var postAggregateCalculates = [];\n    aggregate.push({\n        op: 'min',\n        field: continuousAxisChannelDef.field,\n        as: (isMinMax ? 'lower_whisker_' : 'min_') + continuousAxisChannelDef.field\n    });\n    aggregate.push({\n        op: 'max',\n        field: continuousAxisChannelDef.field,\n        as: (isMinMax ? 'upper_whisker_' : 'max_') + continuousAxisChannelDef.field\n    });\n    if (!isMinMax) {\n        postAggregateCalculates = [\n            {\n                calculate: \"datum.upper_box_\" + continuousAxisChannelDef.field + \" - datum.lower_box_\" + continuousAxisChannelDef.field,\n                as: 'iqr_' + continuousAxisChannelDef.field\n            },\n            {\n                calculate: \"min(datum.upper_box_\" + continuousAxisChannelDef.field + \" + datum.iqr_\" + continuousAxisChannelDef.field + \" * \" + kIQRScalar + \", datum.max_\" + continuousAxisChannelDef.field + \")\",\n                as: 'upper_whisker_' + continuousAxisChannelDef.field\n            },\n            {\n                calculate: \"max(datum.lower_box_\" + continuousAxisChannelDef.field + \" - datum.iqr_\" + continuousAxisChannelDef.field + \" * \" + kIQRScalar + \", datum.min_\" + continuousAxisChannelDef.field + \")\",\n                as: 'lower_whisker_' + continuousAxisChannelDef.field\n            }\n        ];\n    }\n    var groupby = [];\n    var bins = [];\n    var timeUnits = [];\n    var encodingWithoutContinuousAxis = {};\n    encoding_2.forEach(encoding, function (channelDef, channel) {\n        if (channel === continuousAxis) {\n            // Skip continuous axis as we already handle it separately\n            return;\n        }\n        if (fielddef_1.isFieldDef(channelDef)) {\n            if (channelDef.aggregate && channelDef.aggregate !== exports.BOXPLOT) {\n                aggregate.push({\n                    op: channelDef.aggregate,\n                    field: channelDef.field,\n                    as: fielddef_1.vgField(channelDef)\n                });\n            }\n            else if (channelDef.aggregate === undefined) {\n                var transformedField = fielddef_1.vgField(channelDef);\n                // Add bin or timeUnit transform if applicable\n                var bin = channelDef.bin;\n                if (bin) {\n                    var field = channelDef.field;\n                    bins.push({ bin: bin, field: field, as: transformedField });\n                }\n                else if (channelDef.timeUnit) {\n                    var timeUnit = channelDef.timeUnit, field = channelDef.field;\n                    timeUnits.push({ timeUnit: timeUnit, field: field, as: transformedField });\n                }\n                groupby.push(transformedField);\n            }\n            // now the field should refer to post-transformed field instead\n            encodingWithoutContinuousAxis[channel] = {\n                field: fielddef_1.vgField(channelDef),\n                type: channelDef.type\n            };\n        }\n        else {\n            // For value def, just copy\n            encodingWithoutContinuousAxis[channel] = encoding[channel];\n        }\n    });\n    return {\n        transform: [].concat(bins, timeUnits, [{ aggregate: aggregate, groupby: groupby }], postAggregateCalculates),\n        continuousAxisChannelDef: continuousAxisChannelDef,\n        continuousAxis: continuousAxis,\n        encodingWithoutContinuousAxis: encodingWithoutContinuousAxis\n    };\n}\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}}],"sources":{"node_modules\\vega-lite\\build\\src\\compositemark\\boxplot.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar vega_util_1 = require(\"vega-util\");\nvar encoding_1 = require(\"../encoding\");\nvar encoding_2 = require(\"./../encoding\");\nvar fielddef_1 = require(\"./../fielddef\");\nvar log = require(\"./../log\");\nvar common_1 = require(\"./common\");\nexports.BOXPLOT = 'box-plot';\nfunction isBoxPlotDef(mark) {\n    return !!mark['type'];\n}\nexports.isBoxPlotDef = isBoxPlotDef;\nexports.BOXPLOT_STYLES = ['boxWhisker', 'box', 'boxMid'];\nexports.VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX = {\n    box: ['size', 'color', 'extent'],\n    boxWhisker: ['color'],\n    boxMid: ['color']\n};\nvar supportedChannels = ['x', 'y', 'color', 'detail', 'opacity', 'size'];\nfunction filterUnsupportedChannels(spec) {\n    return tslib_1.__assign({}, spec, { encoding: encoding_1.reduce(spec.encoding, function (newEncoding, fieldDef, channel) {\n            if (supportedChannels.indexOf(channel) > -1) {\n                newEncoding[channel] = fieldDef;\n            }\n            else {\n                log.warn(log.message.incompatibleChannel(channel, exports.BOXPLOT));\n            }\n            return newEncoding;\n        }, {}) });\n}\nexports.filterUnsupportedChannels = filterUnsupportedChannels;\nfunction normalizeBoxPlot(spec, config) {\n    spec = filterUnsupportedChannels(spec);\n    // TODO: use selection\n    var mark = spec.mark, encoding = spec.encoding, selection = spec.selection, _p = spec.projection, outerSpec = tslib_1.__rest(spec, [\"mark\", \"encoding\", \"selection\", \"projection\"]);\n    var kIQRScalar = undefined;\n    if (vega_util_1.isNumber(config.box.extent)) {\n        kIQRScalar = config.box.extent;\n    }\n    if (isBoxPlotDef(mark)) {\n        if (mark.extent) {\n            if (mark.extent === 'min-max') {\n                kIQRScalar = undefined;\n            }\n        }\n    }\n    var orient = boxOrient(spec);\n    var _a = boxParams(spec, orient, kIQRScalar), transform = _a.transform, continuousAxisChannelDef = _a.continuousAxisChannelDef, continuousAxis = _a.continuousAxis, encodingWithoutContinuousAxis = _a.encodingWithoutContinuousAxis;\n    var color = encodingWithoutContinuousAxis.color, size = encodingWithoutContinuousAxis.size, encodingWithoutSizeColorAndContinuousAxis = tslib_1.__rest(encodingWithoutContinuousAxis, [\"color\", \"size\"]);\n    // Size encoding or the default config.box.size is applied to box and boxMid\n    var sizeMixins = size ? { size: size } : common_1.getMarkSpecificConfigMixins(config.box, 'size');\n    var continuousAxisScaleAndAxis = {};\n    if (continuousAxisChannelDef.scale) {\n        continuousAxisScaleAndAxis['scale'] = continuousAxisChannelDef.scale;\n    }\n    if (continuousAxisChannelDef.axis) {\n        continuousAxisScaleAndAxis['axis'] = continuousAxisChannelDef.axis;\n    }\n    return tslib_1.__assign({}, outerSpec, { transform: transform, layer: [\n            {\n                mark: {\n                    type: 'rule',\n                    style: 'boxWhisker'\n                },\n                encoding: tslib_1.__assign((_b = {}, _b[continuousAxis] = tslib_1.__assign({ field: 'lower_whisker_' + continuousAxisChannelDef.field, type: continuousAxisChannelDef.type }, continuousAxisScaleAndAxis), _b[continuousAxis + '2'] = {\n                    field: 'lower_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _b), encodingWithoutSizeColorAndContinuousAxis, common_1.getMarkSpecificConfigMixins(config.boxWhisker, 'color'))\n            }, {\n                mark: {\n                    type: 'rule',\n                    style: 'boxWhisker'\n                },\n                encoding: tslib_1.__assign((_c = {}, _c[continuousAxis] = {\n                    field: 'upper_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _c[continuousAxis + '2'] = {\n                    field: 'upper_whisker_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _c), encodingWithoutSizeColorAndContinuousAxis, common_1.getMarkSpecificConfigMixins(config.boxWhisker, 'color'))\n            },\n            tslib_1.__assign({}, (selection ? { selection: selection } : {}), { mark: {\n                    type: 'bar',\n                    style: 'box'\n                }, encoding: tslib_1.__assign((_d = {}, _d[continuousAxis] = {\n                    field: 'lower_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _d[continuousAxis + '2'] = {\n                    field: 'upper_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _d), encodingWithoutContinuousAxis, (encodingWithoutContinuousAxis.color ? {} : common_1.getMarkSpecificConfigMixins(config.box, 'color')), sizeMixins) }),\n            {\n                mark: {\n                    type: 'tick',\n                    style: 'boxMid'\n                },\n                encoding: tslib_1.__assign((_e = {}, _e[continuousAxis] = {\n                    field: 'mid_box_' + continuousAxisChannelDef.field,\n                    type: continuousAxisChannelDef.type\n                }, _e), encodingWithoutSizeColorAndContinuousAxis, common_1.getMarkSpecificConfigMixins(config.boxMid, 'color'), sizeMixins)\n            }\n        ] });\n    var _b, _c, _d, _e;\n}\nexports.normalizeBoxPlot = normalizeBoxPlot;\nfunction boxOrient(spec) {\n    var mark = spec.mark, encoding = spec.encoding, _p = spec.projection, _outerSpec = tslib_1.__rest(spec, [\"mark\", \"encoding\", \"projection\"]);\n    if (fielddef_1.isFieldDef(encoding.x) && fielddef_1.isContinuous(encoding.x)) {\n        // x is continuous\n        if (fielddef_1.isFieldDef(encoding.y) && fielddef_1.isContinuous(encoding.y)) {\n            // both x and y are continuous\n            if (encoding.x.aggregate === undefined && encoding.y.aggregate === exports.BOXPLOT) {\n                return 'vertical';\n            }\n            else if (encoding.y.aggregate === undefined && encoding.x.aggregate === exports.BOXPLOT) {\n                return 'horizontal';\n            }\n            else if (encoding.x.aggregate === exports.BOXPLOT && encoding.y.aggregate === exports.BOXPLOT) {\n                throw new Error('Both x and y cannot have aggregate');\n            }\n            else {\n                if (isBoxPlotDef(mark) && mark.orient) {\n                    return mark.orient;\n                }\n                // default orientation = vertical\n                return 'vertical';\n            }\n        }\n        // x is continuous but y is not\n        return 'horizontal';\n    }\n    else if (fielddef_1.isFieldDef(encoding.y) && fielddef_1.isContinuous(encoding.y)) {\n        // y is continuous but x is not\n        return 'vertical';\n    }\n    else {\n        // Neither x nor y is continuous.\n        throw new Error('Need a valid continuous axis for boxplots');\n    }\n}\nfunction boxContinousAxis(spec, orient) {\n    var mark = spec.mark, encoding = spec.encoding, _p = spec.projection, _outerSpec = tslib_1.__rest(spec, [\"mark\", \"encoding\", \"projection\"]);\n    var continuousAxisChannelDef;\n    var continuousAxis;\n    if (orient === 'vertical') {\n        continuousAxis = 'y';\n        continuousAxisChannelDef = encoding.y; // Safe to cast because if y is not continuous fielddef, the orient would not be vertical.\n    }\n    else {\n        continuousAxis = 'x';\n        continuousAxisChannelDef = encoding.x; // Safe to cast because if x is not continuous fielddef, the orient would not be horizontal.\n    }\n    if (continuousAxisChannelDef && continuousAxisChannelDef.aggregate) {\n        var aggregate = continuousAxisChannelDef.aggregate, continuousAxisWithoutAggregate = tslib_1.__rest(continuousAxisChannelDef, [\"aggregate\"]);\n        if (aggregate !== exports.BOXPLOT) {\n            log.warn(\"Continuous axis should not have customized aggregation function \" + aggregate);\n        }\n        continuousAxisChannelDef = continuousAxisWithoutAggregate;\n    }\n    return {\n        continuousAxisChannelDef: continuousAxisChannelDef,\n        continuousAxis: continuousAxis\n    };\n}\nfunction boxParams(spec, orient, kIQRScalar) {\n    var _a = boxContinousAxis(spec, orient), continuousAxisChannelDef = _a.continuousAxisChannelDef, continuousAxis = _a.continuousAxis;\n    var encoding = spec.encoding;\n    var isMinMax = kIQRScalar === undefined;\n    var aggregate = [\n        {\n            op: 'q1',\n            field: continuousAxisChannelDef.field,\n            as: 'lower_box_' + continuousAxisChannelDef.field\n        },\n        {\n            op: 'q3',\n            field: continuousAxisChannelDef.field,\n            as: 'upper_box_' + continuousAxisChannelDef.field\n        },\n        {\n            op: 'median',\n            field: continuousAxisChannelDef.field,\n            as: 'mid_box_' + continuousAxisChannelDef.field\n        }\n    ];\n    var postAggregateCalculates = [];\n    aggregate.push({\n        op: 'min',\n        field: continuousAxisChannelDef.field,\n        as: (isMinMax ? 'lower_whisker_' : 'min_') + continuousAxisChannelDef.field\n    });\n    aggregate.push({\n        op: 'max',\n        field: continuousAxisChannelDef.field,\n        as: (isMinMax ? 'upper_whisker_' : 'max_') + continuousAxisChannelDef.field\n    });\n    if (!isMinMax) {\n        postAggregateCalculates = [\n            {\n                calculate: \"datum.upper_box_\" + continuousAxisChannelDef.field + \" - datum.lower_box_\" + continuousAxisChannelDef.field,\n                as: 'iqr_' + continuousAxisChannelDef.field\n            },\n            {\n                calculate: \"min(datum.upper_box_\" + continuousAxisChannelDef.field + \" + datum.iqr_\" + continuousAxisChannelDef.field + \" * \" + kIQRScalar + \", datum.max_\" + continuousAxisChannelDef.field + \")\",\n                as: 'upper_whisker_' + continuousAxisChannelDef.field\n            },\n            {\n                calculate: \"max(datum.lower_box_\" + continuousAxisChannelDef.field + \" - datum.iqr_\" + continuousAxisChannelDef.field + \" * \" + kIQRScalar + \", datum.min_\" + continuousAxisChannelDef.field + \")\",\n                as: 'lower_whisker_' + continuousAxisChannelDef.field\n            }\n        ];\n    }\n    var groupby = [];\n    var bins = [];\n    var timeUnits = [];\n    var encodingWithoutContinuousAxis = {};\n    encoding_2.forEach(encoding, function (channelDef, channel) {\n        if (channel === continuousAxis) {\n            // Skip continuous axis as we already handle it separately\n            return;\n        }\n        if (fielddef_1.isFieldDef(channelDef)) {\n            if (channelDef.aggregate && channelDef.aggregate !== exports.BOXPLOT) {\n                aggregate.push({\n                    op: channelDef.aggregate,\n                    field: channelDef.field,\n                    as: fielddef_1.vgField(channelDef)\n                });\n            }\n            else if (channelDef.aggregate === undefined) {\n                var transformedField = fielddef_1.vgField(channelDef);\n                // Add bin or timeUnit transform if applicable\n                var bin = channelDef.bin;\n                if (bin) {\n                    var field = channelDef.field;\n                    bins.push({ bin: bin, field: field, as: transformedField });\n                }\n                else if (channelDef.timeUnit) {\n                    var timeUnit = channelDef.timeUnit, field = channelDef.field;\n                    timeUnits.push({ timeUnit: timeUnit, field: field, as: transformedField });\n                }\n                groupby.push(transformedField);\n            }\n            // now the field should refer to post-transformed field instead\n            encodingWithoutContinuousAxis[channel] = {\n                field: fielddef_1.vgField(channelDef),\n                type: channelDef.type\n            };\n        }\n        else {\n            // For value def, just copy\n            encodingWithoutContinuousAxis[channel] = encoding[channel];\n        }\n    });\n    return {\n        transform: [].concat(bins, timeUnits, [{ aggregate: aggregate, groupby: groupby }], postAggregateCalculates),\n        continuousAxisChannelDef: continuousAxisChannelDef,\n        continuousAxis: continuousAxis,\n        encodingWithoutContinuousAxis: encodingWithoutContinuousAxis\n    };\n}\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":264}},"hash":"65c83f4bb9ceb5129d58e939d3ee6e0b","cacheData":{"env":{}}}