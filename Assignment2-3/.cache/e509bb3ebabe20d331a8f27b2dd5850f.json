{"dependencies":[{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/package.json","includedInParent":true,"mtime":1534047879038},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/.babelrc","includedInParent":true,"mtime":1528828036274},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/node_modules/vega-lite/build/src/package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22}},{"name":"vega-util","loc":{"line":4,"column":26}},{"name":"../../fielddef","loc":{"line":5,"column":25}},{"name":"../../util","loc":{"line":6,"column":21}},{"name":"../common","loc":{"line":7,"column":23}},{"name":"./dataflow","loc":{"line":8,"column":25}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar vega_util_1 = require(\"vega-util\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar util_1 = require(\"../../util\");\nvar common_1 = require(\"../common\");\nvar dataflow_1 = require(\"./dataflow\");\nfunction getStackByFields(model) {\n    return model.stack.stackBy.reduce(function (fields, by) {\n        var fieldDef = by.fieldDef;\n        var _field = fielddef_1.vgField(fieldDef);\n        if (_field) {\n            fields.push(_field);\n        }\n        return fields;\n    }, []);\n}\nfunction isValidAsArray(as) {\n    return vega_util_1.isArray(as) && as.every(function (s) { return vega_util_1.isString(s); }) && as.length > 1;\n}\nvar StackNode = /** @class */ (function (_super) {\n    tslib_1.__extends(StackNode, _super);\n    function StackNode(parent, stack) {\n        var _this = _super.call(this, parent) || this;\n        _this._stack = stack;\n        return _this;\n    }\n    StackNode.prototype.clone = function () {\n        return new StackNode(null, util_1.duplicate(this._stack));\n    };\n    StackNode.makeFromTransform = function (parent, stackTransform) {\n        var stack = stackTransform.stack, groupby = stackTransform.groupby, as = stackTransform.as, _a = stackTransform.offset, offset = _a === void 0 ? 'zero' : _a;\n        var sortFields = [];\n        var sortOrder = [];\n        if (stackTransform.sort !== undefined) {\n            for (var _i = 0, _b = stackTransform.sort; _i < _b.length; _i++) {\n                var sortField = _b[_i];\n                sortFields.push(sortField.field);\n                sortOrder.push(sortField.order === undefined ? 'ascending' : sortField.order);\n            }\n        }\n        var sort = {\n            field: sortFields,\n            order: sortOrder,\n        };\n        var normalizedAs;\n        if (isValidAsArray(as)) {\n            normalizedAs = as;\n        }\n        else if (vega_util_1.isString(as)) {\n            normalizedAs = [as, as + '_end'];\n        }\n        else {\n            normalizedAs = [stackTransform.stack + '_start', stackTransform.stack + '_end'];\n        }\n        return new StackNode(parent, {\n            stackField: stack,\n            groupby: groupby,\n            offset: offset,\n            sort: sort,\n            facetby: [],\n            as: normalizedAs\n        });\n    };\n    StackNode.makeFromEncoding = function (parent, model) {\n        var stackProperties = model.stack;\n        if (!stackProperties) {\n            return null;\n        }\n        var dimensionFieldDef;\n        if (stackProperties.groupbyChannel) {\n            dimensionFieldDef = model.fieldDef(stackProperties.groupbyChannel);\n        }\n        var stackby = getStackByFields(model);\n        var orderDef = model.encoding.order;\n        var sort;\n        if (vega_util_1.isArray(orderDef) || fielddef_1.isFieldDef(orderDef)) {\n            sort = common_1.sortParams(orderDef);\n        }\n        else {\n            // default = descending by stackFields\n            // FIXME is the default here correct for binned fields?\n            sort = stackby.reduce(function (s, field) {\n                s.field.push(field);\n                s.order.push('descending');\n                return s;\n            }, { field: [], order: [] });\n        }\n        // Refactored to add \"as\" in the make phase so that we can get producedFields\n        // from the as property\n        var field = model.vgField(stackProperties.fieldChannel);\n        return new StackNode(parent, {\n            dimensionFieldDef: dimensionFieldDef,\n            stackField: field,\n            facetby: [],\n            stackby: stackby,\n            sort: sort,\n            offset: stackProperties.offset,\n            impute: stackProperties.impute,\n            as: [field + '_start', field + '_end']\n        });\n    };\n    Object.defineProperty(StackNode.prototype, \"stack\", {\n        get: function () {\n            return this._stack;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StackNode.prototype.addDimensions = function (fields) {\n        this._stack.facetby = this._stack.facetby.concat(fields);\n    };\n    StackNode.prototype.dependentFields = function () {\n        var out = {};\n        out[this._stack.stackField] = true;\n        this.getGroupbyFields().forEach(function (f) { return out[f] = true; });\n        this._stack.facetby.forEach(function (f) { return out[f] = true; });\n        var field = this._stack.sort.field;\n        vega_util_1.isArray(field) ? field.forEach(function (f) { return out[f] = true; }) : out[field] = true;\n        return out;\n    };\n    StackNode.prototype.producedFields = function () {\n        return this._stack.as.reduce(function (result, item) {\n            result[item] = true;\n            return result;\n        }, {});\n    };\n    StackNode.prototype.getGroupbyFields = function () {\n        var _a = this._stack, dimensionFieldDef = _a.dimensionFieldDef, impute = _a.impute, groupby = _a.groupby;\n        if (dimensionFieldDef) {\n            if (dimensionFieldDef.bin) {\n                if (impute) {\n                    // For binned group by field with impute, we calculate bin_mid\n                    // as we cannot impute two fields simultaneously\n                    return [fielddef_1.vgField(dimensionFieldDef, { binSuffix: 'mid' })];\n                }\n                return [\n                    // For binned group by field without impute, we need both bin (start) and bin_end\n                    fielddef_1.vgField(dimensionFieldDef, {}),\n                    fielddef_1.vgField(dimensionFieldDef, { binSuffix: 'end' })\n                ];\n            }\n            return [fielddef_1.vgField(dimensionFieldDef)];\n        }\n        return groupby || [];\n    };\n    StackNode.prototype.assemble = function () {\n        var transform = [];\n        var _a = this._stack, facetby = _a.facetby, dimensionFieldDef = _a.dimensionFieldDef, field = _a.stackField, stackby = _a.stackby, sort = _a.sort, offset = _a.offset, impute = _a.impute, as = _a.as;\n        // Impute\n        if (impute && dimensionFieldDef) {\n            var dimensionField = dimensionFieldDef ? fielddef_1.vgField(dimensionFieldDef, { binSuffix: 'mid' }) : undefined;\n            if (dimensionFieldDef.bin) {\n                // As we can only impute one field at a time, we need to calculate\n                // mid point for a binned field\n                transform.push({\n                    type: 'formula',\n                    expr: '(' +\n                        fielddef_1.vgField(dimensionFieldDef, { expr: 'datum' }) +\n                        '+' +\n                        fielddef_1.vgField(dimensionFieldDef, { expr: 'datum', binSuffix: 'end' }) +\n                        ')/2',\n                    as: dimensionField\n                });\n            }\n            transform.push({\n                type: 'impute',\n                field: field,\n                groupby: stackby,\n                key: dimensionField,\n                method: 'value',\n                value: 0\n            });\n        }\n        // Stack\n        transform.push({\n            type: 'stack',\n            groupby: this.getGroupbyFields().concat(facetby),\n            field: field,\n            sort: sort,\n            as: as,\n            offset: offset\n        });\n        return transform;\n    };\n    return StackNode;\n}(dataflow_1.DataFlowNode));\nexports.StackNode = StackNode;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/stack.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}}],"sources":{"node_modules/vega-lite/build/src/compile/data/stack.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar vega_util_1 = require(\"vega-util\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar util_1 = require(\"../../util\");\nvar common_1 = require(\"../common\");\nvar dataflow_1 = require(\"./dataflow\");\nfunction getStackByFields(model) {\n    return model.stack.stackBy.reduce(function (fields, by) {\n        var fieldDef = by.fieldDef;\n        var _field = fielddef_1.vgField(fieldDef);\n        if (_field) {\n            fields.push(_field);\n        }\n        return fields;\n    }, []);\n}\nfunction isValidAsArray(as) {\n    return vega_util_1.isArray(as) && as.every(function (s) { return vega_util_1.isString(s); }) && as.length > 1;\n}\nvar StackNode = /** @class */ (function (_super) {\n    tslib_1.__extends(StackNode, _super);\n    function StackNode(parent, stack) {\n        var _this = _super.call(this, parent) || this;\n        _this._stack = stack;\n        return _this;\n    }\n    StackNode.prototype.clone = function () {\n        return new StackNode(null, util_1.duplicate(this._stack));\n    };\n    StackNode.makeFromTransform = function (parent, stackTransform) {\n        var stack = stackTransform.stack, groupby = stackTransform.groupby, as = stackTransform.as, _a = stackTransform.offset, offset = _a === void 0 ? 'zero' : _a;\n        var sortFields = [];\n        var sortOrder = [];\n        if (stackTransform.sort !== undefined) {\n            for (var _i = 0, _b = stackTransform.sort; _i < _b.length; _i++) {\n                var sortField = _b[_i];\n                sortFields.push(sortField.field);\n                sortOrder.push(sortField.order === undefined ? 'ascending' : sortField.order);\n            }\n        }\n        var sort = {\n            field: sortFields,\n            order: sortOrder,\n        };\n        var normalizedAs;\n        if (isValidAsArray(as)) {\n            normalizedAs = as;\n        }\n        else if (vega_util_1.isString(as)) {\n            normalizedAs = [as, as + '_end'];\n        }\n        else {\n            normalizedAs = [stackTransform.stack + '_start', stackTransform.stack + '_end'];\n        }\n        return new StackNode(parent, {\n            stackField: stack,\n            groupby: groupby,\n            offset: offset,\n            sort: sort,\n            facetby: [],\n            as: normalizedAs\n        });\n    };\n    StackNode.makeFromEncoding = function (parent, model) {\n        var stackProperties = model.stack;\n        if (!stackProperties) {\n            return null;\n        }\n        var dimensionFieldDef;\n        if (stackProperties.groupbyChannel) {\n            dimensionFieldDef = model.fieldDef(stackProperties.groupbyChannel);\n        }\n        var stackby = getStackByFields(model);\n        var orderDef = model.encoding.order;\n        var sort;\n        if (vega_util_1.isArray(orderDef) || fielddef_1.isFieldDef(orderDef)) {\n            sort = common_1.sortParams(orderDef);\n        }\n        else {\n            // default = descending by stackFields\n            // FIXME is the default here correct for binned fields?\n            sort = stackby.reduce(function (s, field) {\n                s.field.push(field);\n                s.order.push('descending');\n                return s;\n            }, { field: [], order: [] });\n        }\n        // Refactored to add \"as\" in the make phase so that we can get producedFields\n        // from the as property\n        var field = model.vgField(stackProperties.fieldChannel);\n        return new StackNode(parent, {\n            dimensionFieldDef: dimensionFieldDef,\n            stackField: field,\n            facetby: [],\n            stackby: stackby,\n            sort: sort,\n            offset: stackProperties.offset,\n            impute: stackProperties.impute,\n            as: [field + '_start', field + '_end']\n        });\n    };\n    Object.defineProperty(StackNode.prototype, \"stack\", {\n        get: function () {\n            return this._stack;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StackNode.prototype.addDimensions = function (fields) {\n        this._stack.facetby = this._stack.facetby.concat(fields);\n    };\n    StackNode.prototype.dependentFields = function () {\n        var out = {};\n        out[this._stack.stackField] = true;\n        this.getGroupbyFields().forEach(function (f) { return out[f] = true; });\n        this._stack.facetby.forEach(function (f) { return out[f] = true; });\n        var field = this._stack.sort.field;\n        vega_util_1.isArray(field) ? field.forEach(function (f) { return out[f] = true; }) : out[field] = true;\n        return out;\n    };\n    StackNode.prototype.producedFields = function () {\n        return this._stack.as.reduce(function (result, item) {\n            result[item] = true;\n            return result;\n        }, {});\n    };\n    StackNode.prototype.getGroupbyFields = function () {\n        var _a = this._stack, dimensionFieldDef = _a.dimensionFieldDef, impute = _a.impute, groupby = _a.groupby;\n        if (dimensionFieldDef) {\n            if (dimensionFieldDef.bin) {\n                if (impute) {\n                    // For binned group by field with impute, we calculate bin_mid\n                    // as we cannot impute two fields simultaneously\n                    return [fielddef_1.vgField(dimensionFieldDef, { binSuffix: 'mid' })];\n                }\n                return [\n                    // For binned group by field without impute, we need both bin (start) and bin_end\n                    fielddef_1.vgField(dimensionFieldDef, {}),\n                    fielddef_1.vgField(dimensionFieldDef, { binSuffix: 'end' })\n                ];\n            }\n            return [fielddef_1.vgField(dimensionFieldDef)];\n        }\n        return groupby || [];\n    };\n    StackNode.prototype.assemble = function () {\n        var transform = [];\n        var _a = this._stack, facetby = _a.facetby, dimensionFieldDef = _a.dimensionFieldDef, field = _a.stackField, stackby = _a.stackby, sort = _a.sort, offset = _a.offset, impute = _a.impute, as = _a.as;\n        // Impute\n        if (impute && dimensionFieldDef) {\n            var dimensionField = dimensionFieldDef ? fielddef_1.vgField(dimensionFieldDef, { binSuffix: 'mid' }) : undefined;\n            if (dimensionFieldDef.bin) {\n                // As we can only impute one field at a time, we need to calculate\n                // mid point for a binned field\n                transform.push({\n                    type: 'formula',\n                    expr: '(' +\n                        fielddef_1.vgField(dimensionFieldDef, { expr: 'datum' }) +\n                        '+' +\n                        fielddef_1.vgField(dimensionFieldDef, { expr: 'datum', binSuffix: 'end' }) +\n                        ')/2',\n                    as: dimensionField\n                });\n            }\n            transform.push({\n                type: 'impute',\n                field: field,\n                groupby: stackby,\n                key: dimensionField,\n                method: 'value',\n                value: 0\n            });\n        }\n        // Stack\n        transform.push({\n            type: 'stack',\n            groupby: this.getGroupbyFields().concat(facetby),\n            field: field,\n            sort: sort,\n            as: as,\n            offset: offset\n        });\n        return transform;\n    };\n    return StackNode;\n}(dataflow_1.DataFlowNode));\nexports.StackNode = StackNode;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcGlsZS9kYXRhL3N0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHVDQUE0QztBQUM1QywyQ0FBNkQ7QUFHN0QsbUNBQXFDO0FBRXJDLG9DQUFxQztBQUVyQyx1Q0FBd0M7QUFFeEMsMEJBQTBCLEtBQWdCO0lBQ3hDLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFVBQUMsTUFBTSxFQUFFLEVBQUU7UUFDM0MsSUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQztRQUU3QixJQUFNLE1BQU0sR0FBRyxrQkFBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2pDLElBQUksTUFBTSxFQUFFO1lBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNyQjtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUMsRUFBRSxFQUFjLENBQUMsQ0FBQztBQUNyQixDQUFDO0FBZ0RELHdCQUF3QixFQUFxQjtJQUMzQyxPQUFPLG1CQUFPLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLG9CQUFRLENBQUMsQ0FBQyxDQUFDLEVBQVgsQ0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sR0FBRSxDQUFDLENBQUM7QUFDbkUsQ0FBQztBQUVEO0lBQStCLHFDQUFZO0lBT3pDLG1CQUFZLE1BQW9CLEVBQUUsS0FBcUI7UUFBdkQsWUFDRSxrQkFBTSxNQUFNLENBQUMsU0FHZDtRQURDLEtBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDOztJQUN0QixDQUFDO0lBUk0seUJBQUssR0FBWjtRQUNFLE9BQU8sSUFBSSxTQUFTLENBQUMsSUFBSSxFQUFFLGdCQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDckQsQ0FB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LENBQUM7WUFDYixJQUFJLEVBQUUsT0FBTztZQUNiLE9BQU8sRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO1lBQ2hELEtBQUssT0FBQTtZQUNMLElBQUksTUFBQTtZQUNKLEVBQUUsSUFBQTtZQUNGLE1BQU0sUUFBQTtTQUNQLENBQUMsQ0FBQztRQUVILE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFDSCxnQkFBQztBQUFELENBQUMsQUF4TEQsQ0FBK0IsdUJBQVksR0F3TDFDO0FBeExZLDhCQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtpc0FycmF5LCBpc1N0cmluZ30gZnJvbSAndmVnYS11dGlsJztcbmltcG9ydCB7RmllbGREZWYsIGlzRmllbGREZWYsIHZnRmllbGR9IGZyb20gJy4uLy4uL2ZpZWxkZGVmJztcbmltcG9ydCB7U3RhY2tPZmZzZXR9IGZyb20gJy4uLy4uL3N0YWNrJztcbmltcG9ydCB7U3RhY2tUcmFuc2Zvcm19IGZyb20gJy4uLy4uL3RyYW5zZm9ybSc7XG5pbXBvcnQge2R1cGxpY2F0ZX0gZnJvbSAnLi4vLi4vdXRpbCc7XG5pbXBvcnQge1ZnQ29tcGFyYXRvck9yZGVyLCBWZ1NvcnQsIFZnVHJhbnNmb3JtfSBmcm9tICcuLi8uLi92ZWdhLnNjaGVtYSc7XG5pbXBvcnQge3NvcnRQYXJhbXN9IGZyb20gJy4uL2NvbW1vbic7XG5pbXBvcnQge1VuaXRNb2RlbH0gZnJvbSAnLi8uLi91bml0JztcbmltcG9ydCB7RGF0YUZsb3dOb2RlfSBmcm9tICcuL2RhdGFmbG93JztcblxuZnVuY3Rpb24gZ2V0U3RhY2tCeUZpZWxkcyhtb2RlbDogVW5pdE1vZGVsKTogc3RyaW5nW10ge1xuICByZXR1cm4gbW9kZWwuc3RhY2suc3RhY2tCeS5yZWR1Y2UoKGZpZWxkcywgYnkpID0+IHtcbiAgICBjb25zdCBmaWVsZERlZiA9IGJ5LmZpZWxkRGVmO1xuXG4gICAgY29uc3QgX2ZpZWxkID0gdmdGaWVsZChmaWVsZERlZik7XG4gICAgaWYgKF9maWVsZCkge1xuICAgICAgZmllbGRzLnB1c2goX2ZpZWxkKTtcbiAgICB9XG4gICAgcmV0dXJuIGZpZWxkcztcbiAgfSwgW10gYXMgc3RyaW5nW10pO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0YWNrQ29tcG9uZW50IHtcblxuICAvKipcbiAgICogRmFjZXRlZCBmaWVsZC5cbiAgICovXG4gIGZhY2V0Ynk6IHN0cmluZ1tdO1xuXG4gIGRpbWVuc2lvbkZpZWxkRGVmPzogRmllbGREZWY8c3RyaW5nPjtcblxuICAvKipcbiAgICogU3RhY2sgbWVhc3VyZSdzIGZpZWxkLiBVc2VkIGluIG1ha2VGcm9tRW5jb2RpbmcuXG4gICAqL1xuICBzdGFja0ZpZWxkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIExldmVsIG9mIGRldGFpbCBmaWVsZHMgZm9yIGVhY2ggbGV2ZWwgaW4gdGhlIHN0YWNrZWQgY2hhcnRzIHN1Y2ggYXMgY29sb3Igb3IgZGV0YWlsLlxuICAgKiBVc2VkIGluIG1ha2VGcm9tRW5jb2RpbmcuXG4gICAqL1xuICBzdGFja2J5Pzogc3RyaW5nW107XG5cbiAgLyoqXG4gICAqIEZpZWxkIHRoYXQgZGV0ZXJtaW5lcyBvcmRlciBvZiBsZXZlbHMgaW4gdGhlIHN0YWNrZWQgY2hhcnRzLlxuICAgKiBVc2VkIGluIGJvdGggYnV0IG9wdGlvbmFsIGluIHRyYW5zZm9ybS5cbiAgICovXG4gIHNvcnQ6IFZnU29ydDtcblxuICAvKiogTW9kZSBmb3Igc3RhY2tpbmcgbWFya3MuXG4gICAqL1xuICBvZmZzZXQ6IFN0YWNrT2Zmc2V0O1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIGltcHV0ZSB0aGUgZGF0YSBiZWZvcmUgc3RhY2tpbmcuIFVzZWQgb25seSBpbiBtYWtlRnJvbUVuY29kaW5nLlxuICAgKi9cbiAgaW1wdXRlPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogVGhlIGRhdGEgZmllbGRzIHRvIGdyb3VwIGJ5LlxuICAgKi9cbiAgZ3JvdXBieT86IHN0cmluZ1tdO1xuICAvKipcbiAgICogT3V0cHV0IGZpZWxkIG5hbWVzIG9mIGVhY2ggc3RhY2sgZmllbGQuXG4gICAqL1xuICBhczogc3RyaW5nW107XG5cbn1cblxuZnVuY3Rpb24gaXNWYWxpZEFzQXJyYXkoYXM6IHN0cmluZ1tdIHwgc3RyaW5nKTogYXMgaXMgc3RyaW5nW10ge1xuICByZXR1cm4gaXNBcnJheShhcykgJiYgYXMuZXZlcnkocyA9PiBpc1N0cmluZyhzKSkgJiYgYXMubGVuZ3RoID4xO1xufVxuXG5leHBvcnQgY2xhc3MgU3RhY2tOb2RlIGV4dGVuZHMgRGF0YUZsb3dOb2RlIHtcbiAgcHJpdmF0ZSBfc3RhY2s6IFN0YWNrQ29tcG9uZW50O1xuXG4gIHB1YmxpYyBjbG9uZSgpIHtcbiAgICByZXR1cm4gbmV3IFN0YWNrTm9kZShudWxsLCBkdXBsaWNhdGUodGhpcy5fc3RhY2spKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHBhcmVudDogRGF0YUZsb3dOb2RlLCBzdGFjazogU3RhY2tDb21wb25lbnQpIHtcbiAgICBzdXBlcihwYXJlbnQpO1xuXG4gICAgdGhpcy5fc3RhY2sgPSBzdGFjaztcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgbWFrZUZyb21UcmFuc2Zvcm0ocGFyZW50OiBEYXRhRmxvd05vZGUsIHN0YWNrVHJhbnNmb3JtOiBTdGFja1RyYW5zZm9ybSkge1xuXG4gICAgY29uc3Qge3N0YWNrLCBncm91cGJ5LCBhcywgb2Zmc2V0PSd6ZXJvJ30gPSBzdGFja1RyYW5zZm9ybTtcblxuICAgIGNvbnN0IHNvcnRGaWVsZHM6IHN0cmluZ1tdID0gW107XG4gICAgY29uc3Qgc29ydE9yZGVyOiBWZ0NvbXBhcmF0b3JPcmRlcltdID0gW107XG4gICAgaWYgKHN0YWNrVHJhbnNmb3JtLnNvcnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgZm9yIChjb25zdCBzb3J0RmllbGQgb2Ygc3RhY2tUcmFuc2Zvcm0uc29ydCkge1xuICAgICAgICBzb3J0RmllbGRzLnB1c2goc29ydEZpZWxkLmZpZWxkKTtcbiAgICAgICAgc29ydE9yZGVyLnB1c2goc29ydEZpZWxkLm9yZGVyID09PSB1bmRlZmluZWQgPyAnYXNjZW5kaW5nJyA6IHNvcnRGaWVsZC5vcmRlciBhcyBWZ0NvbXBhcmF0b3JPcmRlcik7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHNvcnQ6IFZnU29ydCA9IHtcbiAgICAgIGZpZWxkOiBzb3J0RmllbGRzLFxuICAgICAgb3JkZXI6IHNvcnRPcmRlcixcbiAgICB9O1xuICAgIGxldCBub3JtYWxpemVkQXM6IEFycmF5PHN0cmluZz47XG4gICAgaWYgKGlzVmFsaWRBc0FycmF5KGFzKSkge1xuICAgICAgbm9ybWFsaXplZEFzID0gYXM7XG4gICAgfSBlbHNlIGlmKGlzU3RyaW5nKGFzKSkge1xuICAgICAgbm9ybWFsaXplZEFzID0gW2FzLCBhcyArICdfZW5kJ107XG4gICAgfSBlbHNlIHtcbiAgICAgIG5vcm1hbGl6ZWRBcyA9IFtzdGFja1RyYW5zZm9ybS5zdGFjayArICdfc3RhcnQnLCBzdGFja1RyYW5zZm9ybS5zdGFjayArICdfZW5kJ107XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBTdGFja05vZGUgKHBhcmVudCwge1xuICAgICAgc3RhY2tGaWVsZDogc3RhY2ssXG4gICAgICBncm91cGJ5LFxuICAgICAgb2Zmc2V0LFxuICAgICAgc29ydCxcbiAgICAgIGZhY2V0Ynk6IFtdLFxuICAgICAgYXM6IG5vcm1hbGl6ZWRBc1xuICAgIH0pO1xuXG4gIH1cbiAgcHVibGljIHN0YXRpYyBtYWtlRnJvbUVuY29kaW5nKHBhcmVudDogRGF0YUZsb3dOb2RlLCBtb2RlbDogVW5pdE1vZGVsKSB7XG5cbiAgICBjb25zdCBzdGFja1Byb3BlcnRpZXMgPSBtb2RlbC5zdGFjaztcblxuICAgIGlmICghc3RhY2tQcm9wZXJ0aWVzKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBsZXQgZGltZW5zaW9uRmllbGREZWY6IEZpZWxkRGVmPHN0cmluZz47XG4gICAgaWYgKHN0YWNrUHJvcGVydGllcy5ncm91cGJ5Q2hhbm5lbCkge1xuICAgICAgZGltZW5zaW9uRmllbGREZWYgPSBtb2RlbC5maWVsZERlZihzdGFja1Byb3BlcnRpZXMuZ3JvdXBieUNoYW5uZWwpO1xuICAgIH1cblxuICAgIGNvbnN0IHN0YWNrYnkgPSBnZXRTdGFja0J5RmllbGRzKG1vZGVsKTtcbiAgICBjb25zdCBvcmRlckRlZiA9IG1vZGVsLmVuY29kaW5nLm9yZGVyO1xuXG4gICAgbGV0IHNvcnQ6IFZnU29ydDtcbiAgICBpZiAoaXNBcnJheShvcmRlckRlZikgfHwgaXNGaWVsZERlZihvcmRlckRlZikpIHtcbiAgICAgIHNvcnQgPSBzb3J0UGFyYW1zKG9yZGVyRGVmKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZGVmYXVsdCA9IGRlc2NlbmRpbmcgYnkgc3RhY2tGaWVsZHNcbiAgICAgIC8vIEZJWE1FIGlzIHRoZSBkZWZhdWx0IGhlcmUgY29ycmVjdCBmb3IgYmlubmVkIGZpZWxkcz9cbiAgICAgIHNvcnQgPSBzdGFja2J5LnJlZHVjZSgocywgZmllbGQpID0+IHtcbiAgICAgICAgcy5maWVsZC5wdXNoKGZpZWxkKTtcbiAgICAgICAgcy5vcmRlci5wdXNoKCdkZXNjZW5kaW5nJyk7XG4gICAgICAgIHJldHVybiBzO1xuICAgICAgfSwge2ZpZWxkOltdLCBvcmRlcjogW119KTtcbiAgICB9XG4gICAgLy8gUmVmYWN0b3JlZCB0byBhZGQgXCJhc1wiIGluIHRoZSBtYWtlIHBoYXNlIHNvIHRoYXQgd2UgY2FuIGdldCBwcm9kdWNlZEZpZWxkc1xuICAgIC8vIGZyb20gdGhlIGFzIHByb3BlcnR5XG4gICAgY29uc3QgZmllbGQgPSBtb2RlbC52Z0ZpZWxkKHN0YWNrUHJvcGVydGllcy5maWVsZENoYW5uZWwpO1xuXG4gICAgcmV0dXJuIG5ldyBTdGFja05vZGUocGFyZW50LCB7XG4gICAgICBkaW1lbnNpb25GaWVsZERlZixcbiAgICAgIHN0YWNrRmllbGQ6ZmllbGQsXG4gICAgICBmYWNldGJ5OiBbXSxcbiAgICAgIHN0YWNrYnksXG4gICAgICBzb3J0LFxuICAgICAgb2Zmc2V0OiBzdGFja1Byb3BlcnRpZXMub2Zmc2V0LFxuICAgICAgaW1wdXRlOiBzdGFja1Byb3BlcnRpZXMuaW1wdXRlLFxuICAgICAgYXM6IFtmaWVsZCArICdfc3RhcnQnLCBmaWVsZCArICdfZW5kJ11cbiAgICB9KTtcbiAgfVxuXG4gIGdldCBzdGFjaygpOiBTdGFja0NvbXBvbmVudCB7XG4gICAgcmV0dXJuIHRoaXMuX3N0YWNrO1xuICB9XG5cbiAgcHVibGljIGFkZERpbWVuc2lvbnMoZmllbGRzOiBzdHJpbmdbXSkge1xuICAgIHRoaXMuX3N0YWNrLmZhY2V0YnkgPSB0aGlzLl9zdGFjay5mYWNldGJ5LmNvbmNhdChmaWVsZHMpO1xuICB9XG5cbiAgcHVibGljIGRlcGVuZGVudEZpZWxkcygpIHtcbiAgICBjb25zdCBvdXQgPSB7fTtcblxuICAgIG91dFt0aGlzLl9zdGFjay5zdGFja0ZpZWxkXSA9IHRydWU7XG5cbiAgICB0aGlzLmdldEdyb3VwYnlGaWVsZHMoKS5mb3JFYWNoKGYgPT4gb3V0W2ZdID0gdHJ1ZSk7XG4gICAgdGhpcy5fc3RhY2suZmFjZXRieS5mb3JFYWNoKGYgPT4gb3V0W2ZdID0gdHJ1ZSk7XG4gICAgY29uc3QgZmllbGQgPSB0aGlzLl9zdGFjay5zb3J0LmZpZWxkO1xuICAgIGlzQXJyYXkoZmllbGQpID8gZmllbGQuZm9yRWFjaChmID0+IG91dFtmXSA9IHRydWUpIDogb3V0W2ZpZWxkXSA9IHRydWU7XG5cbiAgICByZXR1cm4gb3V0O1xuICB9XG5cbiAgcHVibGljIHByb2R1Y2VkRmllbGRzKCkge1xuICAgIHJldHVybiB0aGlzLl9zdGFjay5hcy5yZWR1Y2UoKHJlc3VsdCwgaXRlbSkgPT4ge1xuICAgICAgcmVzdWx0W2l0ZW1dID0gdHJ1ZTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSwge30pO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRHcm91cGJ5RmllbGRzKCkge1xuICAgIGNvbnN0IHtkaW1lbnNpb25GaWVsZERlZiwgaW1wdXRlLCBncm91cGJ5fSA9IHRoaXMuX3N0YWNrO1xuICAgIGlmIChkaW1lbnNpb25GaWVsZERlZikge1xuICAgICAgaWYgKGRpbWVuc2lvbkZpZWxkRGVmLmJpbikge1xuICAgICAgICBpZiAoaW1wdXRlKSB7XG4gICAgICAgICAgLy8gRm9yIGJpbm5lZCBncm91cCBieSBmaWVsZCB3aXRoIGltcHV0ZSwgd2UgY2FsY3VsYXRlIGJpbl9taWRcbiAgICAgICAgICAvLyBhcyB3ZSBjYW5ub3QgaW1wdXRlIHR3byBmaWVsZHMgc2ltdWx0YW5lb3VzbHlcbiAgICAgICAgICByZXR1cm4gW3ZnRmllbGQoZGltZW5zaW9uRmllbGREZWYsIHtiaW5TdWZmaXg6ICdtaWQnfSldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgLy8gRm9yIGJpbm5lZCBncm91cCBieSBmaWVsZCB3aXRob3V0IGltcHV0ZSwgd2UgbmVlZCBib3RoIGJpbiAoc3RhcnQpIGFuZCBiaW5fZW5kXG4gICAgICAgICAgdmdGaWVsZChkaW1lbnNpb25GaWVsZERlZiwge30pLFxuICAgICAgICAgIHZnRmllbGQoZGltZW5zaW9uRmllbGREZWYsIHtiaW5TdWZmaXg6ICdlbmQnfSlcbiAgICAgICAgXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBbdmdGaWVsZChkaW1lbnNpb25GaWVsZERlZildO1xuICAgIH1cbiAgICByZXR1cm4gZ3JvdXBieSB8fCBbXTtcbiAgfVxuXG4gIHB1YmxpYyBhc3NlbWJsZSgpOiBWZ1RyYW5zZm9ybVtdIHtcbiAgICBjb25zdCB0cmFuc2Zvcm06IFZnVHJhbnNmb3JtW10gPSBbXTtcbiAgICBjb25zdCB7ZmFjZXRieSwgZGltZW5zaW9uRmllbGREZWYsIHN0YWNrRmllbGQ6IGZpZWxkLCBzdGFja2J5LCBzb3J0LCBvZmZzZXQsIGltcHV0ZSwgYXN9ID0gdGhpcy5fc3RhY2s7XG5cbiAgICAgIC8vIEltcHV0ZVxuICAgIGlmIChpbXB1dGUgJiYgZGltZW5zaW9uRmllbGREZWYpIHtcbiAgICAgIGNvbnN0IGRpbWVuc2lvbkZpZWxkID0gZGltZW5zaW9uRmllbGREZWYgPyB2Z0ZpZWxkKGRpbWVuc2lvbkZpZWxkRGVmLCB7YmluU3VmZml4OiAnbWlkJ30pOiB1bmRlZmluZWQ7XG5cbiAgICAgIGlmIChkaW1lbnNpb25GaWVsZERlZi5iaW4pIHtcbiAgICAgICAgLy8gQXMgd2UgY2FuIG9ubHkgaW1wdXRlIG9uZSBmaWVsZCBhdCBhIHRpbWUsIHdlIG5lZWQgdG8gY2FsY3VsYXRlXG4gICAgICAgIC8vIG1pZCBwb2ludCBmb3IgYSBiaW5uZWQgZmllbGRcbiAgICAgICAgdHJhbnNmb3JtLnB1c2goe1xuICAgICAgICAgIHR5cGU6ICdmb3JtdWxhJyxcbiAgICAgICAgICBleHByOiAnKCcgK1xuICAgICAgICAgICAgdmdGaWVsZChkaW1lbnNpb25GaWVsZERlZiwge2V4cHI6ICdkYXR1bSd9KSArXG4gICAgICAgICAgICAnKycgK1xuICAgICAgICAgICAgdmdGaWVsZChkaW1lbnNpb25GaWVsZERlZiwge2V4cHI6ICdkYXR1bScsIGJpblN1ZmZpeDogJ2VuZCd9KSArXG4gICAgICAgICAgICAnKS8yJyxcbiAgICAgICAgICBhczogZGltZW5zaW9uRmllbGRcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHRyYW5zZm9ybS5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2ltcHV0ZScsXG4gICAgICAgIGZpZWxkLFxuICAgICAgICBncm91cGJ5OiBzdGFja2J5LFxuICAgICAgICBrZXk6IGRpbWVuc2lvbkZpZWxkLFxuICAgICAgICBtZXRob2Q6ICd2YWx1ZScsXG4gICAgICAgIHZhbHVlOiAwXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBTdGFja1xuICAgIHRyYW5zZm9ybS5wdXNoKHtcbiAgICAgIHR5cGU6ICdzdGFjaycsXG4gICAgICBncm91cGJ5OiB0aGlzLmdldEdyb3VwYnlGaWVsZHMoKS5jb25jYXQoZmFjZXRieSksXG4gICAgICBmaWVsZCxcbiAgICAgIHNvcnQsXG4gICAgICBhcyxcbiAgICAgIG9mZnNldFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRyYW5zZm9ybTtcbiAgfVxufVxuIl19"},"lineCount":190}},"hash":"fbe19e0d5bd373f5d8559e536c1d8717","cacheData":{"env":{}}}