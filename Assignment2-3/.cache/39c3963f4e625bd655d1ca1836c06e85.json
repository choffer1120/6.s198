{"dependencies":[{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/package.json","includedInParent":true,"mtime":1534047879038},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/.babelrc","includedInParent":true,"mtime":1528828036274},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/node_modules/vega-lite/build/src/package.json","includedInParent":true,"mtime":499162500000},{"name":"vega-util","loc":{"line":3,"column":26}},{"name":"./aggregate","loc":{"line":4,"column":26}},{"name":"./channel","loc":{"line":5,"column":24}},{"name":"./encoding","loc":{"line":6,"column":25}},{"name":"./fielddef","loc":{"line":7,"column":25}},{"name":"./log","loc":{"line":8,"column":18}},{"name":"./mark","loc":{"line":9,"column":21}},{"name":"./scale","loc":{"line":10,"column":22}},{"name":"./util","loc":{"line":11,"column":21}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar aggregate_1 = require(\"./aggregate\");\nvar channel_1 = require(\"./channel\");\nvar encoding_1 = require(\"./encoding\");\nvar fielddef_1 = require(\"./fielddef\");\nvar log = require(\"./log\");\nvar mark_1 = require(\"./mark\");\nvar scale_1 = require(\"./scale\");\nvar util_1 = require(\"./util\");\nvar STACK_OFFSET_INDEX = {\n    zero: 1,\n    center: 1,\n    normalize: 1\n};\nfunction isStackOffset(s) {\n    return !!STACK_OFFSET_INDEX[s];\n}\nexports.isStackOffset = isStackOffset;\nexports.STACKABLE_MARKS = [mark_1.BAR, mark_1.AREA, mark_1.RULE, mark_1.POINT, mark_1.CIRCLE, mark_1.SQUARE, mark_1.LINE, mark_1.TEXT, mark_1.TICK];\nexports.STACK_BY_DEFAULT_MARKS = [mark_1.BAR, mark_1.AREA];\nfunction potentialStackedChannel(encoding) {\n    var xDef = encoding.x;\n    var yDef = encoding.y;\n    if (fielddef_1.isFieldDef(xDef) && fielddef_1.isFieldDef(yDef)) {\n        if (xDef.type === 'quantitative' && yDef.type === 'quantitative') {\n            if (xDef.stack) {\n                return 'x';\n            }\n            else if (yDef.stack) {\n                return 'y';\n            }\n            // if there is no explicit stacking, only apply stack if there is only one aggregate for x or y\n            if ((!!xDef.aggregate) !== (!!yDef.aggregate)) {\n                return xDef.aggregate ? 'x' : 'y';\n            }\n        }\n        else if (xDef.type === 'quantitative') {\n            return 'x';\n        }\n        else if (yDef.type === 'quantitative') {\n            return 'y';\n        }\n    }\n    else if (fielddef_1.isFieldDef(xDef) && xDef.type === 'quantitative') {\n        return 'x';\n    }\n    else if (fielddef_1.isFieldDef(yDef) && yDef.type === 'quantitative') {\n        return 'y';\n    }\n    return undefined;\n}\n// Note: CompassQL uses this method and only pass in required properties of each argument object.\n// If required properties change, make sure to update CompassQL.\nfunction stack(m, encoding, stackConfig) {\n    var mark = mark_1.isMarkDef(m) ? m.type : m;\n    // Should have stackable mark\n    if (!util_1.contains(exports.STACKABLE_MARKS, mark)) {\n        return null;\n    }\n    var fieldChannel = potentialStackedChannel(encoding);\n    if (!fieldChannel) {\n        return null;\n    }\n    var stackedFieldDef = encoding[fieldChannel];\n    var stackedField = fielddef_1.isStringFieldDef(stackedFieldDef) ? fielddef_1.vgField(stackedFieldDef, {}) : undefined;\n    var dimensionChannel = fieldChannel === 'x' ? 'y' : 'x';\n    var dimensionDef = encoding[dimensionChannel];\n    var dimensionField = fielddef_1.isStringFieldDef(dimensionDef) ? fielddef_1.vgField(dimensionDef, {}) : undefined;\n    // Should have grouping level of detail that is different from the dimension field\n    var stackBy = channel_1.NONPOSITION_CHANNELS.reduce(function (sc, channel) {\n        if (encoding_1.channelHasField(encoding, channel)) {\n            var channelDef = encoding[channel];\n            (vega_util_1.isArray(channelDef) ? channelDef : [channelDef]).forEach(function (cDef) {\n                var fieldDef = fielddef_1.getFieldDef(cDef);\n                if (fieldDef.aggregate) {\n                    return;\n                }\n                // Check whether the channel's field is identical to x/y's field or if the channel is a repeat\n                var f = fielddef_1.isStringFieldDef(fieldDef) ? fielddef_1.vgField(fieldDef, {}) : undefined;\n                if (\n                // if fielddef is a repeat, just include it in the stack by\n                !f ||\n                    // otherwise, the field must be different from x and y fields.\n                    (f !== dimensionField && f !== stackedField)) {\n                    sc.push({ channel: channel, fieldDef: fieldDef });\n                }\n            });\n        }\n        return sc;\n    }, []);\n    if (stackBy.length === 0) {\n        return null;\n    }\n    // Automatically determine offset\n    var offset = undefined;\n    if (stackedFieldDef.stack !== undefined) {\n        offset = stackedFieldDef.stack;\n    }\n    else if (util_1.contains(exports.STACK_BY_DEFAULT_MARKS, mark)) {\n        // Bar and Area with sum ops are automatically stacked by default\n        offset = stackConfig === undefined ? 'zero' : stackConfig;\n    }\n    else {\n        offset = stackConfig;\n    }\n    if (!offset || !isStackOffset(offset)) {\n        return null;\n    }\n    // warn when stacking non-linear\n    if (stackedFieldDef.scale && stackedFieldDef.scale.type && stackedFieldDef.scale.type !== scale_1.ScaleType.LINEAR) {\n        log.warn(log.message.cannotStackNonLinearScale(stackedFieldDef.scale.type));\n    }\n    // Check if it is a ranged mark\n    if (encoding_1.channelHasField(encoding, fieldChannel === channel_1.X ? channel_1.X2 : channel_1.Y2)) {\n        log.warn(log.message.cannotStackRangedMark(fieldChannel));\n        return null;\n    }\n    // Warn if stacking summative aggregate\n    if (stackedFieldDef.aggregate && !util_1.contains(aggregate_1.SUM_OPS, stackedFieldDef.aggregate)) {\n        log.warn(log.message.stackNonSummativeAggregate(stackedFieldDef.aggregate));\n    }\n    return {\n        groupbyChannel: dimensionDef ? dimensionChannel : undefined,\n        fieldChannel: fieldChannel,\n        impute: mark_1.isPathMark(mark),\n        stackBy: stackBy,\n        offset: offset\n    };\n}\nexports.stack = stack;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vega-lite/build/src/stack.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}}],"sources":{"node_modules/vega-lite/build/src/stack.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar aggregate_1 = require(\"./aggregate\");\nvar channel_1 = require(\"./channel\");\nvar encoding_1 = require(\"./encoding\");\nvar fielddef_1 = require(\"./fielddef\");\nvar log = require(\"./log\");\nvar mark_1 = require(\"./mark\");\nvar scale_1 = require(\"./scale\");\nvar util_1 = require(\"./util\");\nvar STACK_OFFSET_INDEX = {\n    zero: 1,\n    center: 1,\n    normalize: 1\n};\nfunction isStackOffset(s) {\n    return !!STACK_OFFSET_INDEX[s];\n}\nexports.isStackOffset = isStackOffset;\nexports.STACKABLE_MARKS = [mark_1.BAR, mark_1.AREA, mark_1.RULE, mark_1.POINT, mark_1.CIRCLE, mark_1.SQUARE, mark_1.LINE, mark_1.TEXT, mark_1.TICK];\nexports.STACK_BY_DEFAULT_MARKS = [mark_1.BAR, mark_1.AREA];\nfunction potentialStackedChannel(encoding) {\n    var xDef = encoding.x;\n    var yDef = encoding.y;\n    if (fielddef_1.isFieldDef(xDef) && fielddef_1.isFieldDef(yDef)) {\n        if (xDef.type === 'quantitative' && yDef.type === 'quantitative') {\n            if (xDef.stack) {\n                return 'x';\n            }\n            else if (yDef.stack) {\n                return 'y';\n            }\n            // if there is no explicit stacking, only apply stack if there is only one aggregate for x or y\n            if ((!!xDef.aggregate) !== (!!yDef.aggregate)) {\n                return xDef.aggregate ? 'x' : 'y';\n            }\n        }\n        else if (xDef.type === 'quantitative') {\n            return 'x';\n        }\n        else if (yDef.type === 'quantitative') {\n            return 'y';\n        }\n    }\n    else if (fielddef_1.isFieldDef(xDef) && xDef.type === 'quantitative') {\n        return 'x';\n    }\n    else if (fielddef_1.isFieldDef(yDef) && yDef.type === 'quantitative') {\n        return 'y';\n    }\n    return undefined;\n}\n// Note: CompassQL uses this method and only pass in required properties of each argument object.\n// If required properties change, make sure to update CompassQL.\nfunction stack(m, encoding, stackConfig) {\n    var mark = mark_1.isMarkDef(m) ? m.type : m;\n    // Should have stackable mark\n    if (!util_1.contains(exports.STACKABLE_MARKS, mark)) {\n        return null;\n    }\n    var fieldChannel = potentialStackedChannel(encoding);\n    if (!fieldChannel) {\n        return null;\n    }\n    var stackedFieldDef = encoding[fieldChannel];\n    var stackedField = fielddef_1.isStringFieldDef(stackedFieldDef) ? fielddef_1.vgField(stackedFieldDef, {}) : undefined;\n    var dimensionChannel = fieldChannel === 'x' ? 'y' : 'x';\n    var dimensionDef = encoding[dimensionChannel];\n    var dimensionField = fielddef_1.isStringFieldDef(dimensionDef) ? fielddef_1.vgField(dimensionDef, {}) : undefined;\n    // Should have grouping level of detail that is different from the dimension field\n    var stackBy = channel_1.NONPOSITION_CHANNELS.reduce(function (sc, channel) {\n        if (encoding_1.channelHasField(encoding, channel)) {\n            var channelDef = encoding[channel];\n            (vega_util_1.isArray(channelDef) ? channelDef : [channelDef]).forEach(function (cDef) {\n                var fieldDef = fielddef_1.getFieldDef(cDef);\n                if (fieldDef.aggregate) {\n                    return;\n                }\n                // Check whether the channel's field is identical to x/y's field or if the channel is a repeat\n                var f = fielddef_1.isStringFieldDef(fieldDef) ? fielddef_1.vgField(fieldDef, {}) : undefined;\n                if (\n                // if fielddef is a repeat, just include it in the stack by\n                !f ||\n                    // otherwise, the field must be different from x and y fields.\n                    (f !== dimensionField && f !== stackedField)) {\n                    sc.push({ channel: channel, fieldDef: fieldDef });\n                }\n            });\n        }\n        return sc;\n    }, []);\n    if (stackBy.length === 0) {\n        return null;\n    }\n    // Automatically determine offset\n    var offset = undefined;\n    if (stackedFieldDef.stack !== undefined) {\n        offset = stackedFieldDef.stack;\n    }\n    else if (util_1.contains(exports.STACK_BY_DEFAULT_MARKS, mark)) {\n        // Bar and Area with sum ops are automatically stacked by default\n        offset = stackConfig === undefined ? 'zero' : stackConfig;\n    }\n    else {\n        offset = stackConfig;\n    }\n    if (!offset || !isStackOffset(offset)) {\n        return null;\n    }\n    // warn when stacking non-linear\n    if (stackedFieldDef.scale && stackedFieldDef.scale.type && stackedFieldDef.scale.type !== scale_1.ScaleType.LINEAR) {\n        log.warn(log.message.cannotStackNonLinearScale(stackedFieldDef.scale.type));\n    }\n    // Check if it is a ranged mark\n    if (encoding_1.channelHasField(encoding, fieldChannel === channel_1.X ? channel_1.X2 : channel_1.Y2)) {\n        log.warn(log.message.cannotStackRangedMark(fieldChannel));\n        return null;\n    }\n    // Warn if stacking summative aggregate\n    if (stackedFieldDef.aggregate && !util_1.contains(aggregate_1.SUM_OPS, stackedFieldDef.aggregate)) {\n        log.warn(log.message.stackNonSummativeAggregate(stackedFieldDef.aggregate));\n    }\n    return {\n        groupbyChannel: dimensionDef ? dimensionChannel : undefined,\n        fieldChannel: fieldChannel,\n        impute: mark_1.isPathMark(mark),\n        stackBy: stackBy,\n        offset: offset\n    };\n}\nexports.stack = stack;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":133}},"hash":"4ed0c14b4217bbb13110524b2aef5063","cacheData":{"env":{}}}