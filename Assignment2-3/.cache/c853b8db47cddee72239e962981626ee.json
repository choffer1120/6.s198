{"dependencies":[{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\package.json","includedInParent":true,"mtime":1537759548368},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\.babelrc","includedInParent":true,"mtime":1536780611616},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\node_modules\\vega-lite\\build\\src\\package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22}},{"name":"vega-util","loc":{"line":4,"column":26}},{"name":"../../channel","loc":{"line":5,"column":24}},{"name":"../../log","loc":{"line":6,"column":20}},{"name":"../../scale","loc":{"line":7,"column":22}},{"name":"../../util","loc":{"line":8,"column":21}},{"name":"./selection","loc":{"line":9,"column":26}},{"name":"./transforms/scales","loc":{"line":10,"column":23}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar vega_util_1 = require(\"vega-util\");\nvar channel_1 = require(\"../../channel\");\nvar log_1 = require(\"../../log\");\nvar scale_1 = require(\"../../scale\");\nvar util_1 = require(\"../../util\");\nvar selection_1 = require(\"./selection\");\nvar scales_1 = require(\"./transforms/scales\");\nexports.BRUSH = '_brush';\nexports.SCALE_TRIGGER = '_scale_trigger';\nvar interval = {\n    predicate: 'vlInterval',\n    scaleDomain: 'vlIntervalDomain',\n    signals: function (model, selCmpt) {\n        var name = selCmpt.name;\n        var hasScales = scales_1.default.has(selCmpt);\n        var signals = [];\n        var intervals = [];\n        var tupleTriggers = [];\n        var scaleTriggers = [];\n        if (selCmpt.translate && !hasScales) {\n            var filterExpr_1 = \"!event.item || event.item.mark.name !== \" + vega_util_1.stringValue(name + exports.BRUSH);\n            events(selCmpt, function (_, evt) {\n                var filters = evt.between[0].filter || (evt.between[0].filter = []);\n                if (filters.indexOf(filterExpr_1) < 0) {\n                    filters.push(filterExpr_1);\n                }\n            });\n        }\n        selCmpt.project.forEach(function (p) {\n            var channel = p.channel;\n            if (channel !== channel_1.X && channel !== channel_1.Y) {\n                log_1.warn('Interval selections only support x and y encoding channels.');\n                return;\n            }\n            var cs = channelSignals(model, selCmpt, channel);\n            var dname = selection_1.channelSignalName(selCmpt, channel, 'data');\n            var vname = selection_1.channelSignalName(selCmpt, channel, 'visual');\n            var scaleStr = vega_util_1.stringValue(model.scaleName(channel));\n            var scaleType = model.getScaleComponent(channel).get('type');\n            var toNum = scale_1.hasContinuousDomain(scaleType) ? '+' : '';\n            signals.push.apply(signals, cs);\n            tupleTriggers.push(dname);\n            intervals.push(\"{encoding: \" + vega_util_1.stringValue(channel) + \", \" +\n                (\"field: \" + vega_util_1.stringValue(p.field) + \", extent: \" + dname + \"}\"));\n            scaleTriggers.push({\n                scaleName: model.scaleName(channel),\n                expr: \"(!isArray(\" + dname + \") || \" +\n                    (\"(\" + toNum + \"invert(\" + scaleStr + \", \" + vname + \")[0] === \" + toNum + dname + \"[0] && \") +\n                    (toNum + \"invert(\" + scaleStr + \", \" + vname + \")[1] === \" + toNum + dname + \"[1]))\")\n            });\n        });\n        // Proxy scale reactions to ensure that an infinite loop doesn't occur\n        // when an interval selection filter touches the scale.\n        if (!hasScales) {\n            signals.push({\n                name: name + exports.SCALE_TRIGGER,\n                update: scaleTriggers.map(function (t) { return t.expr; }).join(' && ') +\n                    (\" ? \" + (name + exports.SCALE_TRIGGER) + \" : {}\")\n            });\n        }\n        // Only add an interval to the store if it has valid data extents. Data extents\n        // are set to null if pixel extents are equal to account for intervals over\n        // ordinal/nominal domains which, when inverted, will still produce a valid datum.\n        return signals.concat({\n            name: name + selection_1.TUPLE,\n            on: [{\n                    events: tupleTriggers.map(function (t) { return ({ signal: t }); }),\n                    update: tupleTriggers.join(' && ') +\n                        (\" ? {unit: \" + selection_1.unitName(model) + \", intervals: [\" + intervals.join(', ') + \"]} : null\")\n                }]\n        });\n    },\n    modifyExpr: function (model, selCmpt) {\n        var tpl = selCmpt.name + selection_1.TUPLE;\n        return tpl + ', ' +\n            (selCmpt.resolve === 'global' ? 'true' : \"{unit: \" + selection_1.unitName(model) + \"}\");\n    },\n    marks: function (model, selCmpt, marks) {\n        var name = selCmpt.name;\n        var _a = selection_1.positionalProjections(selCmpt), xi = _a.xi, yi = _a.yi;\n        var store = \"data(\" + vega_util_1.stringValue(selCmpt.name + selection_1.STORE) + \")\";\n        // Do not add a brush if we're binding to scales.\n        if (scales_1.default.has(selCmpt)) {\n            return marks;\n        }\n        var update = {\n            x: xi !== null ? { signal: name + \"_x[0]\" } : { value: 0 },\n            y: yi !== null ? { signal: name + \"_y[0]\" } : { value: 0 },\n            x2: xi !== null ? { signal: name + \"_x[1]\" } : { field: { group: 'width' } },\n            y2: yi !== null ? { signal: name + \"_y[1]\" } : { field: { group: 'height' } }\n        };\n        // If the selection is resolved to global, only a single interval is in\n        // the store. Wrap brush mark's encodings with a production rule to test\n        // this based on the `unit` property. Hide the brush mark if it corresponds\n        // to a unit different from the one in the store.\n        if (selCmpt.resolve === 'global') {\n            for (var _i = 0, _b = util_1.keys(update); _i < _b.length; _i++) {\n                var key = _b[_i];\n                update[key] = [tslib_1.__assign({ test: store + \".length && \" + store + \"[0].unit === \" + selection_1.unitName(model) }, update[key]), { value: 0 }];\n            }\n        }\n        // Two brush marks ensure that fill colors and other aesthetic choices do\n        // not interefere with the core marks, but that the brushed region can still\n        // be interacted with (e.g., dragging it around).\n        var _c = selCmpt.mark, fill = _c.fill, fillOpacity = _c.fillOpacity, stroke = tslib_1.__rest(_c, [\"fill\", \"fillOpacity\"]);\n        var vgStroke = util_1.keys(stroke).reduce(function (def, k) {\n            def[k] = [{\n                    test: [\n                        xi !== null && name + \"_x[0] !== \" + name + \"_x[1]\",\n                        yi != null && name + \"_y[0] !== \" + name + \"_y[1]\",\n                    ].filter(function (x) { return x; }).join(' && '),\n                    value: stroke[k]\n                }, { value: null }];\n            return def;\n        }, {});\n        return [{\n                name: name + exports.BRUSH + '_bg',\n                type: 'rect',\n                clip: true,\n                encode: {\n                    enter: {\n                        fill: { value: fill },\n                        fillOpacity: { value: fillOpacity }\n                    },\n                    update: update\n                }\n            }].concat(marks, {\n            name: name + exports.BRUSH,\n            type: 'rect',\n            clip: true,\n            encode: {\n                enter: {\n                    fill: { value: 'transparent' }\n                },\n                update: tslib_1.__assign({}, update, vgStroke)\n            }\n        });\n    }\n};\nexports.default = interval;\n/**\n * Returns the visual and data signals for an interval selection.\n */\nfunction channelSignals(model, selCmpt, channel) {\n    var vname = selection_1.channelSignalName(selCmpt, channel, 'visual');\n    var dname = selection_1.channelSignalName(selCmpt, channel, 'data');\n    var hasScales = scales_1.default.has(selCmpt);\n    var scaleName = model.scaleName(channel);\n    var scaleStr = vega_util_1.stringValue(scaleName);\n    var scale = model.getScaleComponent(channel);\n    var scaleType = scale ? scale.get('type') : undefined;\n    var size = model.getSizeSignalRef(channel === channel_1.X ? 'width' : 'height').signal;\n    var coord = channel + \"(unit)\";\n    var on = events(selCmpt, function (def, evt) {\n        return def.concat({ events: evt.between[0], update: \"[\" + coord + \", \" + coord + \"]\" }, // Brush Start\n        { events: evt, update: \"[\" + vname + \"[0], clamp(\" + coord + \", 0, \" + size + \")]\" } // Brush End\n        );\n    });\n    // React to pan/zooms of continuous scales. Non-continuous scales\n    // (bin-linear, band, point) cannot be pan/zoomed and any other changes\n    // to their domains (e.g., filtering) should clear the brushes.\n    on.push({\n        events: { signal: selCmpt.name + exports.SCALE_TRIGGER },\n        update: scale_1.hasContinuousDomain(scaleType) && !scale_1.isBinScale(scaleType) ?\n            \"[scale(\" + scaleStr + \", \" + dname + \"[0]), scale(\" + scaleStr + \", \" + dname + \"[1])]\" : \"[0, 0]\"\n    });\n    return hasScales ? [{ name: dname, on: [] }] : [{\n            name: vname, value: [], on: on\n        }, {\n            name: dname,\n            on: [{ events: { signal: vname }, update: vname + \"[0] === \" + vname + \"[1] ? null : invert(\" + scaleStr + \", \" + vname + \")\" }]\n        }];\n}\nfunction events(selCmpt, cb) {\n    return selCmpt.events.reduce(function (on, evt) {\n        if (!evt.between) {\n            log_1.warn(evt + \" is not an ordered event stream for interval selections\");\n            return on;\n        }\n        return cb(on, evt);\n    }, []);\n}\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}}],"sources":{"node_modules\\vega-lite\\build\\src\\compile\\selection\\interval.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar vega_util_1 = require(\"vega-util\");\nvar channel_1 = require(\"../../channel\");\nvar log_1 = require(\"../../log\");\nvar scale_1 = require(\"../../scale\");\nvar util_1 = require(\"../../util\");\nvar selection_1 = require(\"./selection\");\nvar scales_1 = require(\"./transforms/scales\");\nexports.BRUSH = '_brush';\nexports.SCALE_TRIGGER = '_scale_trigger';\nvar interval = {\n    predicate: 'vlInterval',\n    scaleDomain: 'vlIntervalDomain',\n    signals: function (model, selCmpt) {\n        var name = selCmpt.name;\n        var hasScales = scales_1.default.has(selCmpt);\n        var signals = [];\n        var intervals = [];\n        var tupleTriggers = [];\n        var scaleTriggers = [];\n        if (selCmpt.translate && !hasScales) {\n            var filterExpr_1 = \"!event.item || event.item.mark.name !== \" + vega_util_1.stringValue(name + exports.BRUSH);\n            events(selCmpt, function (_, evt) {\n                var filters = evt.between[0].filter || (evt.between[0].filter = []);\n                if (filters.indexOf(filterExpr_1) < 0) {\n                    filters.push(filterExpr_1);\n                }\n            });\n        }\n        selCmpt.project.forEach(function (p) {\n            var channel = p.channel;\n            if (channel !== channel_1.X && channel !== channel_1.Y) {\n                log_1.warn('Interval selections only support x and y encoding channels.');\n                return;\n            }\n            var cs = channelSignals(model, selCmpt, channel);\n            var dname = selection_1.channelSignalName(selCmpt, channel, 'data');\n            var vname = selection_1.channelSignalName(selCmpt, channel, 'visual');\n            var scaleStr = vega_util_1.stringValue(model.scaleName(channel));\n            var scaleType = model.getScaleComponent(channel).get('type');\n            var toNum = scale_1.hasContinuousDomain(scaleType) ? '+' : '';\n            signals.push.apply(signals, cs);\n            tupleTriggers.push(dname);\n            intervals.push(\"{encoding: \" + vega_util_1.stringValue(channel) + \", \" +\n                (\"field: \" + vega_util_1.stringValue(p.field) + \", extent: \" + dname + \"}\"));\n            scaleTriggers.push({\n                scaleName: model.scaleName(channel),\n                expr: \"(!isArray(\" + dname + \") || \" +\n                    (\"(\" + toNum + \"invert(\" + scaleStr + \", \" + vname + \")[0] === \" + toNum + dname + \"[0] && \") +\n                    (toNum + \"invert(\" + scaleStr + \", \" + vname + \")[1] === \" + toNum + dname + \"[1]))\")\n            });\n        });\n        // Proxy scale reactions to ensure that an infinite loop doesn't occur\n        // when an interval selection filter touches the scale.\n        if (!hasScales) {\n            signals.push({\n                name: name + exports.SCALE_TRIGGER,\n                update: scaleTriggers.map(function (t) { return t.expr; }).join(' && ') +\n                    (\" ? \" + (name + exports.SCALE_TRIGGER) + \" : {}\")\n            });\n        }\n        // Only add an interval to the store if it has valid data extents. Data extents\n        // are set to null if pixel extents are equal to account for intervals over\n        // ordinal/nominal domains which, when inverted, will still produce a valid datum.\n        return signals.concat({\n            name: name + selection_1.TUPLE,\n            on: [{\n                    events: tupleTriggers.map(function (t) { return ({ signal: t }); }),\n                    update: tupleTriggers.join(' && ') +\n                        (\" ? {unit: \" + selection_1.unitName(model) + \", intervals: [\" + intervals.join(', ') + \"]} : null\")\n                }]\n        });\n    },\n    modifyExpr: function (model, selCmpt) {\n        var tpl = selCmpt.name + selection_1.TUPLE;\n        return tpl + ', ' +\n            (selCmpt.resolve === 'global' ? 'true' : \"{unit: \" + selection_1.unitName(model) + \"}\");\n    },\n    marks: function (model, selCmpt, marks) {\n        var name = selCmpt.name;\n        var _a = selection_1.positionalProjections(selCmpt), xi = _a.xi, yi = _a.yi;\n        var store = \"data(\" + vega_util_1.stringValue(selCmpt.name + selection_1.STORE) + \")\";\n        // Do not add a brush if we're binding to scales.\n        if (scales_1.default.has(selCmpt)) {\n            return marks;\n        }\n        var update = {\n            x: xi !== null ? { signal: name + \"_x[0]\" } : { value: 0 },\n            y: yi !== null ? { signal: name + \"_y[0]\" } : { value: 0 },\n            x2: xi !== null ? { signal: name + \"_x[1]\" } : { field: { group: 'width' } },\n            y2: yi !== null ? { signal: name + \"_y[1]\" } : { field: { group: 'height' } }\n        };\n        // If the selection is resolved to global, only a single interval is in\n        // the store. Wrap brush mark's encodings with a production rule to test\n        // this based on the `unit` property. Hide the brush mark if it corresponds\n        // to a unit different from the one in the store.\n        if (selCmpt.resolve === 'global') {\n            for (var _i = 0, _b = util_1.keys(update); _i < _b.length; _i++) {\n                var key = _b[_i];\n                update[key] = [tslib_1.__assign({ test: store + \".length && \" + store + \"[0].unit === \" + selection_1.unitName(model) }, update[key]), { value: 0 }];\n            }\n        }\n        // Two brush marks ensure that fill colors and other aesthetic choices do\n        // not interefere with the core marks, but that the brushed region can still\n        // be interacted with (e.g., dragging it around).\n        var _c = selCmpt.mark, fill = _c.fill, fillOpacity = _c.fillOpacity, stroke = tslib_1.__rest(_c, [\"fill\", \"fillOpacity\"]);\n        var vgStroke = util_1.keys(stroke).reduce(function (def, k) {\n            def[k] = [{\n                    test: [\n                        xi !== null && name + \"_x[0] !== \" + name + \"_x[1]\",\n                        yi != null && name + \"_y[0] !== \" + name + \"_y[1]\",\n                    ].filter(function (x) { return x; }).join(' && '),\n                    value: stroke[k]\n                }, { value: null }];\n            return def;\n        }, {});\n        return [{\n                name: name + exports.BRUSH + '_bg',\n                type: 'rect',\n                clip: true,\n                encode: {\n                    enter: {\n                        fill: { value: fill },\n                        fillOpacity: { value: fillOpacity }\n                    },\n                    update: update\n                }\n            }].concat(marks, {\n            name: name + exports.BRUSH,\n            type: 'rect',\n            clip: true,\n            encode: {\n                enter: {\n                    fill: { value: 'transparent' }\n                },\n                update: tslib_1.__assign({}, update, vgStroke)\n            }\n        });\n    }\n};\nexports.default = interval;\n/**\n * Returns the visual and data signals for an interval selection.\n */\nfunction channelSignals(model, selCmpt, channel) {\n    var vname = selection_1.channelSignalName(selCmpt, channel, 'visual');\n    var dname = selection_1.channelSignalName(selCmpt, channel, 'data');\n    var hasScales = scales_1.default.has(selCmpt);\n    var scaleName = model.scaleName(channel);\n    var scaleStr = vega_util_1.stringValue(scaleName);\n    var scale = model.getScaleComponent(channel);\n    var scaleType = scale ? scale.get('type') : undefined;\n    var size = model.getSizeSignalRef(channel === channel_1.X ? 'width' : 'height').signal;\n    var coord = channel + \"(unit)\";\n    var on = events(selCmpt, function (def, evt) {\n        return def.concat({ events: evt.between[0], update: \"[\" + coord + \", \" + coord + \"]\" }, // Brush Start\n        { events: evt, update: \"[\" + vname + \"[0], clamp(\" + coord + \", 0, \" + size + \")]\" } // Brush End\n        );\n    });\n    // React to pan/zooms of continuous scales. Non-continuous scales\n    // (bin-linear, band, point) cannot be pan/zoomed and any other changes\n    // to their domains (e.g., filtering) should clear the brushes.\n    on.push({\n        events: { signal: selCmpt.name + exports.SCALE_TRIGGER },\n        update: scale_1.hasContinuousDomain(scaleType) && !scale_1.isBinScale(scaleType) ?\n            \"[scale(\" + scaleStr + \", \" + dname + \"[0]), scale(\" + scaleStr + \", \" + dname + \"[1])]\" : \"[0, 0]\"\n    });\n    return hasScales ? [{ name: dname, on: [] }] : [{\n            name: vname, value: [], on: on\n        }, {\n            name: dname,\n            on: [{ events: { signal: vname }, update: vname + \"[0] === \" + vname + \"[1] ? null : invert(\" + scaleStr + \", \" + vname + \")\" }]\n        }];\n}\nfunction events(selCmpt, cb) {\n    return selCmpt.events.reduce(function (on, evt) {\n        if (!evt.between) {\n            log_1.warn(evt + \" is not an ordered event stream for interval selections\");\n            return on;\n        }\n        return cb(on, evt);\n    }, []);\n}\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":186}},"hash":"83408613a865114bfd722c71927bd497","cacheData":{"env":{}}}