{"dependencies":[{"name":"/Users/yaakov/tfjs-examples-modified/mnist/package.json","includedInParent":true,"mtime":1532028279835},{"name":"/Users/yaakov/tfjs-examples-modified/mnist/.babelrc","includedInParent":true,"mtime":1528828036274},{"name":"/Users/yaakov/tfjs-examples-modified/mnist/node_modules/vega-lite/build/src/package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22}},{"name":"../../data","loc":{"line":4,"column":21}},{"name":"../../util","loc":{"line":5,"column":21}},{"name":"./aggregate","loc":{"line":6,"column":26}},{"name":"./bin","loc":{"line":7,"column":20}},{"name":"./calculate","loc":{"line":8,"column":26}},{"name":"./dataflow","loc":{"line":9,"column":25}},{"name":"./facet","loc":{"line":10,"column":22}},{"name":"./filter","loc":{"line":11,"column":23}},{"name":"./filterinvalid","loc":{"line":12,"column":30}},{"name":"./formatparse","loc":{"line":13,"column":28}},{"name":"./geojson","loc":{"line":14,"column":24}},{"name":"./geopoint","loc":{"line":15,"column":25}},{"name":"./indentifier","loc":{"line":16,"column":28}},{"name":"./lookup","loc":{"line":17,"column":23}},{"name":"./source","loc":{"line":18,"column":23}},{"name":"./stack","loc":{"line":19,"column":22}},{"name":"./timeunit","loc":{"line":20,"column":25}},{"name":"./window","loc":{"line":21,"column":23}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar data_1 = require(\"../../data\");\nvar util_1 = require(\"../../util\");\nvar aggregate_1 = require(\"./aggregate\");\nvar bin_1 = require(\"./bin\");\nvar calculate_1 = require(\"./calculate\");\nvar dataflow_1 = require(\"./dataflow\");\nvar facet_1 = require(\"./facet\");\nvar filter_1 = require(\"./filter\");\nvar filterinvalid_1 = require(\"./filterinvalid\");\nvar formatparse_1 = require(\"./formatparse\");\nvar geojson_1 = require(\"./geojson\");\nvar geopoint_1 = require(\"./geopoint\");\nvar indentifier_1 = require(\"./indentifier\");\nvar lookup_1 = require(\"./lookup\");\nvar source_1 = require(\"./source\");\nvar stack_1 = require(\"./stack\");\nvar timeunit_1 = require(\"./timeunit\");\nvar window_1 = require(\"./window\");\n/**\n * Print debug information for dataflow tree.\n */\n// tslint:disable-next-line\nfunction debug(node) {\n    console.log(\"\" + node.constructor.name + (node.debugName ? \" (\" + node.debugName + \")\" : '') + \" -> \" + (node.children.map(function (c) {\n        return \"\" + c.constructor.name + (c.debugName ? \" (\" + c.debugName + \")\" : '');\n    })));\n    console.log(node);\n    node.children.forEach(debug);\n}\nfunction makeWalkTree(data) {\n    // to name datasources\n    var datasetIndex = 0;\n    /**\n     * Recursively walk down the tree.\n     */\n    function walkTree(node, dataSource) {\n        if (node instanceof source_1.SourceNode) {\n            // If the source is a named data source or a data source with values, we need\n            // to put it in a different data source. Otherwise, Vega may override the data.\n            if (!data_1.isUrlData(node.data)) {\n                data.push(dataSource);\n                var newData = {\n                    name: null,\n                    source: dataSource.name,\n                    transform: []\n                };\n                dataSource = newData;\n            }\n        }\n        if (node instanceof formatparse_1.ParseNode) {\n            if (node.parent instanceof source_1.SourceNode && !dataSource.source) {\n                // If node's parent is a root source and the data source does not refer to another data source, use normal format parse\n                dataSource.format = tslib_1.__assign({}, dataSource.format || {}, { parse: node.assembleFormatParse() });\n                // add calculates for all nested fields\n                dataSource.transform = dataSource.transform.concat(node.assembleTransforms(true));\n            }\n            else {\n                // Otherwise use Vega expression to parse\n                dataSource.transform = dataSource.transform.concat(node.assembleTransforms());\n            }\n        }\n        if (node instanceof facet_1.FacetNode) {\n            if (!dataSource.name) {\n                dataSource.name = \"data_\" + datasetIndex++;\n            }\n            if (!dataSource.source || dataSource.transform.length > 0) {\n                data.push(dataSource);\n                node.data = dataSource.name;\n            }\n            else {\n                node.data = dataSource.source;\n            }\n            node.assemble().forEach(function (d) { return data.push(d); });\n            // break here because the rest of the tree has to be taken care of by the facet.\n            return;\n        }\n        if (node instanceof filter_1.FilterNode ||\n            node instanceof calculate_1.CalculateNode ||\n            node instanceof geopoint_1.GeoPointNode ||\n            node instanceof geojson_1.GeoJSONNode ||\n            node instanceof aggregate_1.AggregateNode ||\n            node instanceof lookup_1.LookupNode ||\n            node instanceof window_1.WindowTransformNode ||\n            node instanceof indentifier_1.IdentifierNode) {\n            dataSource.transform.push(node.assemble());\n        }\n        if (node instanceof filterinvalid_1.FilterInvalidNode ||\n            node instanceof bin_1.BinNode ||\n            node instanceof timeunit_1.TimeUnitNode ||\n            node instanceof stack_1.StackNode) {\n            dataSource.transform = dataSource.transform.concat(node.assemble());\n        }\n        if (node instanceof aggregate_1.AggregateNode) {\n            if (!dataSource.name) {\n                dataSource.name = \"data_\" + datasetIndex++;\n            }\n        }\n        if (node instanceof dataflow_1.OutputNode) {\n            if (dataSource.source && dataSource.transform.length === 0) {\n                node.setSource(dataSource.source);\n            }\n            else if (node.parent instanceof dataflow_1.OutputNode) {\n                // Note that an output node may be required but we still do not assemble a\n                // separate data source for it.\n                node.setSource(dataSource.name);\n            }\n            else {\n                if (!dataSource.name) {\n                    dataSource.name = \"data_\" + datasetIndex++;\n                }\n                // Here we set the name of the datasource we generated. From now on\n                // other assemblers can use it.\n                node.setSource(dataSource.name);\n                // if this node has more than one child, we will add a datasource automatically\n                if (node.numChildren() === 1) {\n                    data.push(dataSource);\n                    var newData = {\n                        name: null,\n                        source: dataSource.name,\n                        transform: []\n                    };\n                    dataSource = newData;\n                }\n            }\n        }\n        switch (node.numChildren()) {\n            case 0:\n                // done\n                if (node instanceof dataflow_1.OutputNode && (!dataSource.source || dataSource.transform.length > 0)) {\n                    // do not push empty datasources that are simply references\n                    data.push(dataSource);\n                }\n                break;\n            case 1:\n                walkTree(node.children[0], dataSource);\n                break;\n            default:\n                if (!dataSource.name) {\n                    dataSource.name = \"data_\" + datasetIndex++;\n                }\n                var source_2 = dataSource.name;\n                if (!dataSource.source || dataSource.transform.length > 0) {\n                    data.push(dataSource);\n                }\n                else {\n                    source_2 = dataSource.source;\n                }\n                node.children.forEach(function (child) {\n                    var newData = {\n                        name: null,\n                        source: source_2,\n                        transform: []\n                    };\n                    walkTree(child, newData);\n                });\n                break;\n        }\n    }\n    return walkTree;\n}\n/**\n * Assemble data sources that are derived from faceted data.\n */\nfunction assembleFacetData(root) {\n    var data = [];\n    var walkTree = makeWalkTree(data);\n    root.children.forEach(function (child) { return walkTree(child, {\n        source: root.name,\n        name: null,\n        transform: []\n    }); });\n    return data;\n}\nexports.assembleFacetData = assembleFacetData;\n/**\n * Create Vega Data array from a given compiled model and append all of them to the given array\n *\n * @param  model\n * @param  data array\n * @return modified data array\n */\nfunction assembleRootData(dataComponent, datasets) {\n    var roots = util_1.vals(dataComponent.sources);\n    var data = [];\n    // roots.forEach(debug);\n    var walkTree = makeWalkTree(data);\n    var sourceIndex = 0;\n    roots.forEach(function (root) {\n        // assign a name if the source does not have a name yet\n        if (!root.hasName()) {\n            root.dataName = \"source_\" + sourceIndex++;\n        }\n        var newData = root.assemble();\n        walkTree(root, newData);\n    });\n    // remove empty transform arrays for cleaner output\n    data.forEach(function (d) {\n        if (d.transform.length === 0) {\n            delete d.transform;\n        }\n    });\n    // move sources without transforms (the ones that are potentially used in lookups) to the beginning\n    var whereTo = 0;\n    for (var i = 0; i < data.length; i++) {\n        var d = data[i];\n        if ((d.transform || []).length === 0 && !d.source) {\n            data.splice(whereTo++, 0, data.splice(i, 1)[0]);\n        }\n    }\n    // now fix the from references in lookup transforms\n    for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n        var d = data_2[_i];\n        for (var _a = 0, _b = d.transform || []; _a < _b.length; _a++) {\n            var t = _b[_a];\n            if (t.type === 'lookup') {\n                t.from = dataComponent.outputNodes[t.from].getSource();\n            }\n        }\n    }\n    // inline values for datasets that are in the datastore\n    for (var _c = 0, data_3 = data; _c < data_3.length; _c++) {\n        var d = data_3[_c];\n        if (d.name in datasets) {\n            d.values = datasets[d.name];\n        }\n    }\n    return data;\n}\nexports.assembleRootData = assembleRootData;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/assemble.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}}],"sources":{"node_modules/vega-lite/build/src/compile/data/assemble.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar data_1 = require(\"../../data\");\nvar util_1 = require(\"../../util\");\nvar aggregate_1 = require(\"./aggregate\");\nvar bin_1 = require(\"./bin\");\nvar calculate_1 = require(\"./calculate\");\nvar dataflow_1 = require(\"./dataflow\");\nvar facet_1 = require(\"./facet\");\nvar filter_1 = require(\"./filter\");\nvar filterinvalid_1 = require(\"./filterinvalid\");\nvar formatparse_1 = require(\"./formatparse\");\nvar geojson_1 = require(\"./geojson\");\nvar geopoint_1 = require(\"./geopoint\");\nvar indentifier_1 = require(\"./indentifier\");\nvar lookup_1 = require(\"./lookup\");\nvar source_1 = require(\"./source\");\nvar stack_1 = require(\"./stack\");\nvar timeunit_1 = require(\"./timeunit\");\nvar window_1 = require(\"./window\");\n/**\n * Print debug information for dataflow tree.\n */\n// tslint:disable-next-line\nfunction debug(node) {\n    console.log(\"\" + node.constructor.name + (node.debugName ? \" (\" + node.debugName + \")\" : '') + \" -> \" + (node.children.map(function (c) {\n        return \"\" + c.constructor.name + (c.debugName ? \" (\" + c.debugName + \")\" : '');\n    })));\n    console.log(node);\n    node.children.forEach(debug);\n}\nfunction makeWalkTree(data) {\n    // to name datasources\n    var datasetIndex = 0;\n    /**\n     * Recursively walk down the tree.\n     */\n    function walkTree(node, dataSource) {\n        if (node instanceof source_1.SourceNode) {\n            // If the source is a named data source or a data source with values, we need\n            // to put it in a different data source. Otherwise, Vega may override the data.\n            if (!data_1.isUrlData(node.data)) {\n                data.push(dataSource);\n                var newData = {\n                    name: null,\n                    source: dataSource.name,\n                    transform: []\n                };\n                dataSource = newData;\n            }\n        }\n        if (node instanceof formatparse_1.ParseNode) {\n            if (node.parent instanceof source_1.SourceNode && !dataSource.source) {\n                // If node's parent is a root source and the data source does not refer to another data source, use normal format parse\n                dataSource.format = tslib_1.__assign({}, dataSource.format || {}, { parse: node.assembleFormatParse() });\n                // add calculates for all nested fields\n                dataSource.transform = dataSource.transform.concat(node.assembleTransforms(true));\n            }\n            else {\n                // Otherwise use Vega expression to parse\n                dataSource.transform = dataSource.transform.concat(node.assembleTransforms());\n            }\n        }\n        if (node instanceof facet_1.FacetNode) {\n            if (!dataSource.name) {\n                dataSource.name = \"data_\" + datasetIndex++;\n            }\n            if (!dataSource.source || dataSource.transform.length > 0) {\n                data.push(dataSource);\n                node.data = dataSource.name;\n            }\n            else {\n                node.data = dataSource.source;\n            }\n            node.assemble().forEach(function (d) { return data.push(d); });\n            // break here because the rest of the tree has to be taken care of by the facet.\n            return;\n        }\n        if (node instanceof filter_1.FilterNode ||\n            node instanceof calculate_1.CalculateNode ||\n            node instanceof geopoint_1.GeoPointNode ||\n            node instanceof geojson_1.GeoJSONNode ||\n            node instanceof aggregate_1.AggregateNode ||\n            node instanceof lookup_1.LookupNode ||\n            node instanceof window_1.WindowTransformNode ||\n            node instanceof indentifier_1.IdentifierNode) {\n            dataSource.transform.push(node.assemble());\n        }\n        if (node instanceof filterinvalid_1.FilterInvalidNode ||\n            node instanceof bin_1.BinNode ||\n            node instanceof timeunit_1.TimeUnitNode ||\n            node instanceof stack_1.StackNode) {\n            dataSource.transform = dataSource.transform.concat(node.assemble());\n        }\n        if (node instanceof aggregate_1.AggregateNode) {\n            if (!dataSource.name) {\n                dataSource.name = \"data_\" + datasetIndex++;\n            }\n        }\n        if (node instanceof dataflow_1.OutputNode) {\n            if (dataSource.source && dataSource.transform.length === 0) {\n                node.setSource(dataSource.source);\n            }\n            else if (node.parent instanceof dataflow_1.OutputNode) {\n                // Note that an output node may be required but we still do not assemble a\n                // separate data source for it.\n                node.setSource(dataSource.name);\n            }\n            else {\n                if (!dataSource.name) {\n                    dataSource.name = \"data_\" + datasetIndex++;\n                }\n                // Here we set the name of the datasource we generated. From now on\n                // other assemblers can use it.\n                node.setSource(dataSource.name);\n                // if this node has more than one child, we will add a datasource automatically\n                if (node.numChildren() === 1) {\n                    data.push(dataSource);\n                    var newData = {\n                        name: null,\n                        source: dataSource.name,\n                        transform: []\n                    };\n                    dataSource = newData;\n                }\n            }\n        }\n        switch (node.numChildren()) {\n            case 0:\n                // done\n                if (node instanceof dataflow_1.OutputNode && (!dataSource.source || dataSource.transform.length > 0)) {\n                    // do not push empty datasources that are simply references\n                    data.push(dataSource);\n                }\n                break;\n            case 1:\n                walkTree(node.children[0], dataSource);\n                break;\n            default:\n                if (!dataSource.name) {\n                    dataSource.name = \"data_\" + datasetIndex++;\n                }\n                var source_2 = dataSource.name;\n                if (!dataSource.source || dataSource.transform.length > 0) {\n                    data.push(dataSource);\n                }\n                else {\n                    source_2 = dataSource.source;\n                }\n                node.children.forEach(function (child) {\n                    var newData = {\n                        name: null,\n                        source: source_2,\n                        transform: []\n                    };\n                    walkTree(child, newData);\n                });\n                break;\n        }\n    }\n    return walkTree;\n}\n/**\n * Assemble data sources that are derived from faceted data.\n */\nfunction assembleFacetData(root) {\n    var data = [];\n    var walkTree = makeWalkTree(data);\n    root.children.forEach(function (child) { return walkTree(child, {\n        source: root.name,\n        name: null,\n        transform: []\n    }); });\n    return data;\n}\nexports.assembleFacetData = assembleFacetData;\n/**\n * Create Vega Data array from a given compiled model and append all of them to the given array\n *\n * @param  model\n * @param  data array\n * @return modified data array\n */\nfunction assembleRootData(dataComponent, datasets) {\n    var roots = util_1.vals(dataComponent.sources);\n    var data = [];\n    // roots.forEach(debug);\n    var walkTree = makeWalkTree(data);\n    var sourceIndex = 0;\n    roots.forEach(function (root) {\n        // assign a name if the source does not have a name yet\n        if (!root.hasName()) {\n            root.dataName = \"source_\" + sourceIndex++;\n        }\n        var newData = root.assemble();\n        walkTree(root, newData);\n    });\n    // remove empty transform arrays for cleaner output\n    data.forEach(function (d) {\n        if (d.transform.length === 0) {\n            delete d.transform;\n        }\n    });\n    // move sources without transforms (the ones that are potentially used in lookups) to the beginning\n    var whereTo = 0;\n    for (var i = 0; i < data.length; i++) {\n        var d = data[i];\n        if ((d.transform || []).length === 0 && !d.source) {\n            data.splice(whereTo++, 0, data.splice(i, 1)[0]);\n        }\n    }\n    // now fix the from references in lookup transforms\n    for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n        var d = data_2[_i];\n        for (var _a = 0, _b = d.transform || []; _a < _b.length; _a++) {\n            var t = _b[_a];\n            if (t.type === 'lookup') {\n                t.from = dataComponent.outputNodes[t.from].getSource();\n            }\n        }\n    }\n    // inline values for datasets that are in the datastore\n    for (var _c = 0, data_3 = data; _c < data_3.length; _c++) {\n        var d = data_3[_c];\n        if (d.name in datasets) {\n            d.values = datasets[d.name];\n        }\n    }\n    return data;\n}\nexports.assembleRootData = assembleRootData;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":233}},"hash":"e7f9966e9ba576f38a482cae12869723","cacheData":{"env":{}}}