{"dependencies":[{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\assignment2\\Assignment2-3\\package.json","includedInParent":true,"mtime":1536780765907},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\assignment2\\Assignment2-3\\.babelrc","includedInParent":true,"mtime":1536780611616},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\assignment2\\Assignment2-3\\node_modules\\vega-lite\\build\\src\\package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22}},{"name":"vega-util","loc":{"line":4,"column":26}},{"name":"../channel","loc":{"line":5,"column":24}},{"name":"../fielddef","loc":{"line":6,"column":25}},{"name":"../scale","loc":{"line":7,"column":22}},{"name":"../timeunit","loc":{"line":8,"column":25}},{"name":"../type","loc":{"line":9,"column":21}},{"name":"../util","loc":{"line":10,"column":21}},{"name":"./mark/mixins","loc":{"line":11,"column":23}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar vega_util_1 = require(\"vega-util\");\nvar channel_1 = require(\"../channel\");\nvar fielddef_1 = require(\"../fielddef\");\nvar scale_1 = require(\"../scale\");\nvar timeunit_1 = require(\"../timeunit\");\nvar type_1 = require(\"../type\");\nvar util_1 = require(\"../util\");\nvar mixins_1 = require(\"./mark/mixins\");\nfunction applyConfig(e, config, // TODO(#1842): consolidate MarkConfig | TextConfig?\npropsList) {\n    for (var _i = 0, propsList_1 = propsList; _i < propsList_1.length; _i++) {\n        var property = propsList_1[_i];\n        var value = config[property];\n        if (value !== undefined) {\n            e[property] = { value: value };\n        }\n    }\n    return e;\n}\nexports.applyConfig = applyConfig;\nfunction applyMarkConfig(e, model, propsList) {\n    for (var _i = 0, propsList_2 = propsList; _i < propsList_2.length; _i++) {\n        var property = propsList_2[_i];\n        var value = getMarkConfig(property, model.markDef, model.config);\n        if (value !== undefined) {\n            e[property] = { value: value };\n        }\n    }\n    return e;\n}\nexports.applyMarkConfig = applyMarkConfig;\nfunction getStyles(mark) {\n    return [].concat(mark.type, mark.style || []);\n}\nexports.getStyles = getStyles;\n/**\n * Return property value from style or mark specific config property if exists.\n * Otherwise, return general mark specific config.\n */\nfunction getMarkConfig(prop, mark, config) {\n    // By default, read from mark config first!\n    var value = config.mark[prop];\n    // Then read mark specific config, which has higher precedence\n    var markSpecificConfig = config[mark.type];\n    if (markSpecificConfig[prop] !== undefined) {\n        value = markSpecificConfig[prop];\n    }\n    // Then read style config, which has even higher precedence.\n    var styles = getStyles(mark);\n    for (var _i = 0, styles_1 = styles; _i < styles_1.length; _i++) {\n        var style = styles_1[_i];\n        var styleConfig = config.style[style];\n        // MarkConfig extends VgMarkConfig so a prop may not be a valid property for style\n        // However here we also check if it is defined, so it is okay to cast here\n        var p = prop;\n        if (styleConfig && styleConfig[p] !== undefined) {\n            value = styleConfig[p];\n        }\n    }\n    return value;\n}\nexports.getMarkConfig = getMarkConfig;\nfunction formatSignalRef(fieldDef, specifiedFormat, expr, config) {\n    var format = numberFormat(fieldDef, specifiedFormat, config);\n    if (fieldDef.bin) {\n        var startField = fielddef_1.vgField(fieldDef, { expr: expr });\n        var endField = fielddef_1.vgField(fieldDef, { expr: expr, binSuffix: 'end' });\n        return {\n            signal: binFormatExpression(startField, endField, format, config)\n        };\n    }\n    else if (fieldDef.type === 'quantitative') {\n        return {\n            signal: \"\" + formatExpr(fielddef_1.vgField(fieldDef, { expr: expr, binSuffix: 'range' }), format)\n        };\n    }\n    else if (fielddef_1.isTimeFieldDef(fieldDef)) {\n        var isUTCScale = fielddef_1.isScaleFieldDef(fieldDef) && fieldDef['scale'] && fieldDef['scale'].type === scale_1.ScaleType.UTC;\n        return {\n            signal: timeFormatExpression(fielddef_1.vgField(fieldDef, { expr: expr }), fieldDef.timeUnit, specifiedFormat, config.text.shortTimeLabels, config.timeFormat, isUTCScale, true)\n        };\n    }\n    else {\n        return {\n            signal: \"''+\" + fielddef_1.vgField(fieldDef, { expr: expr })\n        };\n    }\n}\nexports.formatSignalRef = formatSignalRef;\nfunction getSpecifiedOrDefaultValue(specifiedValue, defaultValue) {\n    if (specifiedValue !== undefined) {\n        return specifiedValue;\n    }\n    return defaultValue;\n}\nexports.getSpecifiedOrDefaultValue = getSpecifiedOrDefaultValue;\n/**\n * Returns number format for a fieldDef\n *\n * @param format explicitly specified format\n */\nfunction numberFormat(fieldDef, specifiedFormat, config) {\n    if (fieldDef.type === type_1.QUANTITATIVE) {\n        // add number format for quantitative type only\n        // Specified format in axis/legend has higher precedence than fieldDef.format\n        if (specifiedFormat) {\n            return specifiedFormat;\n        }\n        // TODO: need to make this work correctly for numeric ordinal / nominal type\n        return config.numberFormat;\n    }\n    return undefined;\n}\nexports.numberFormat = numberFormat;\nfunction formatExpr(field, format) {\n    return \"format(\" + field + \", \\\"\" + (format || '') + \"\\\")\";\n}\nfunction numberFormatExpr(field, specifiedFormat, config) {\n    return formatExpr(field, specifiedFormat || config.numberFormat);\n}\nexports.numberFormatExpr = numberFormatExpr;\nfunction binFormatExpression(startField, endField, format, config) {\n    return startField + \" === null || isNaN(\" + startField + \") ? \\\"null\\\" : \" + numberFormatExpr(startField, format, config) + \" + \\\" - \\\" + \" + numberFormatExpr(endField, format, config);\n}\nexports.binFormatExpression = binFormatExpression;\n/**\n * Returns the time expression used for axis/legend labels or text mark for a temporal field\n */\nfunction timeFormatExpression(field, timeUnit, format, shortTimeLabels, timeFormatConfig, isUTCScale, alwaysReturn) {\n    if (alwaysReturn === void 0) { alwaysReturn = false; }\n    if (!timeUnit || format) {\n        // If there is not time unit, or if user explicitly specify format for axis/legend/text.\n        format = format || timeFormatConfig; // only use config.timeFormat if there is no timeUnit.\n        if (format || alwaysReturn) {\n            return (isUTCScale ? 'utc' : 'time') + \"Format(\" + field + \", '\" + format + \"')\";\n        }\n        else {\n            return undefined;\n        }\n    }\n    else {\n        return timeunit_1.formatExpression(timeUnit, field, shortTimeLabels, isUTCScale);\n    }\n}\nexports.timeFormatExpression = timeFormatExpression;\n/**\n * Return Vega sort parameters (tuple of field and order).\n */\nfunction sortParams(orderDef, fieldRefOption) {\n    return (vega_util_1.isArray(orderDef) ? orderDef : [orderDef]).reduce(function (s, orderChannelDef) {\n        s.field.push(fielddef_1.vgField(orderChannelDef, fieldRefOption));\n        s.order.push(orderChannelDef.sort || 'ascending');\n        return s;\n    }, { field: [], order: [] });\n}\nexports.sortParams = sortParams;\nfunction mergeTitleFieldDefs(f1, f2) {\n    var merged = f1.slice();\n    f2.forEach(function (fdToMerge) {\n        for (var _i = 0, merged_1 = merged; _i < merged_1.length; _i++) {\n            var fieldDef1 = merged_1[_i];\n            // If already exists, no need to append to merged array\n            if (util_1.stringify(fieldDef1) === util_1.stringify(fdToMerge)) {\n                return;\n            }\n        }\n        merged.push(fdToMerge);\n    });\n    return merged;\n}\nexports.mergeTitleFieldDefs = mergeTitleFieldDefs;\nfunction mergeTitle(title1, title2) {\n    return title1 === title2 ?\n        title1 : // if title is the same just use one of them\n        title1 + ', ' + title2; // join title with comma if different\n}\nexports.mergeTitle = mergeTitle;\nfunction mergeTitleComponent(v1, v2) {\n    if (vega_util_1.isArray(v1.value) && vega_util_1.isArray(v2.value)) {\n        return {\n            explicit: v1.explicit,\n            value: mergeTitleFieldDefs(v1.value, v2.value)\n        };\n    }\n    else if (!vega_util_1.isArray(v1.value) && !vega_util_1.isArray(v2.value)) {\n        return {\n            explicit: v1.explicit,\n            value: mergeTitle(v1.value, v2.value)\n        };\n    }\n    /* istanbul ignore next: Condition should not happen -- only for warning in development. */\n    throw new Error('It should never reach here');\n}\nexports.mergeTitleComponent = mergeTitleComponent;\n/**\n * Checks whether a fieldDef for a particular channel requires a computed bin range.\n */\nfunction binRequiresRange(fieldDef, channel) {\n    if (!fieldDef.bin) {\n        console.warn('Only use this method with binned field defs');\n        return false;\n    }\n    // We need the range only when the user explicitly forces a binned field to be use discrete scale. In this case, bin range is used in axis and legend labels.\n    // We could check whether the axis or legend exists (not disabled) but that seems overkill.\n    return channel_1.isScaleChannel(channel) && util_1.contains(['ordinal', 'nominal'], fieldDef.type);\n}\nexports.binRequiresRange = binRequiresRange;\nfunction guideEncodeEntry(encoding, model) {\n    return util_1.keys(encoding).reduce(function (encode, channel) {\n        var valueDef = encoding[channel];\n        return tslib_1.__assign({}, encode, mixins_1.wrapCondition(model, valueDef, channel, function (x) { return ({ value: x.value }); }));\n    }, {});\n}\nexports.guideEncodeEntry = guideEncodeEntry;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\common.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}}],"sources":{"node_modules\\vega-lite\\build\\src\\compile\\common.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar vega_util_1 = require(\"vega-util\");\nvar channel_1 = require(\"../channel\");\nvar fielddef_1 = require(\"../fielddef\");\nvar scale_1 = require(\"../scale\");\nvar timeunit_1 = require(\"../timeunit\");\nvar type_1 = require(\"../type\");\nvar util_1 = require(\"../util\");\nvar mixins_1 = require(\"./mark/mixins\");\nfunction applyConfig(e, config, // TODO(#1842): consolidate MarkConfig | TextConfig?\npropsList) {\n    for (var _i = 0, propsList_1 = propsList; _i < propsList_1.length; _i++) {\n        var property = propsList_1[_i];\n        var value = config[property];\n        if (value !== undefined) {\n            e[property] = { value: value };\n        }\n    }\n    return e;\n}\nexports.applyConfig = applyConfig;\nfunction applyMarkConfig(e, model, propsList) {\n    for (var _i = 0, propsList_2 = propsList; _i < propsList_2.length; _i++) {\n        var property = propsList_2[_i];\n        var value = getMarkConfig(property, model.markDef, model.config);\n        if (value !== undefined) {\n            e[property] = { value: value };\n        }\n    }\n    return e;\n}\nexports.applyMarkConfig = applyMarkConfig;\nfunction getStyles(mark) {\n    return [].concat(mark.type, mark.style || []);\n}\nexports.getStyles = getStyles;\n/**\n * Return property value from style or mark specific config property if exists.\n * Otherwise, return general mark specific config.\n */\nfunction getMarkConfig(prop, mark, config) {\n    // By default, read from mark config first!\n    var value = config.mark[prop];\n    // Then read mark specific config, which has higher precedence\n    var markSpecificConfig = config[mark.type];\n    if (markSpecificConfig[prop] !== undefined) {\n        value = markSpecificConfig[prop];\n    }\n    // Then read style config, which has even higher precedence.\n    var styles = getStyles(mark);\n    for (var _i = 0, styles_1 = styles; _i < styles_1.length; _i++) {\n        var style = styles_1[_i];\n        var styleConfig = config.style[style];\n        // MarkConfig extends VgMarkConfig so a prop may not be a valid property for style\n        // However here we also check if it is defined, so it is okay to cast here\n        var p = prop;\n        if (styleConfig && styleConfig[p] !== undefined) {\n            value = styleConfig[p];\n        }\n    }\n    return value;\n}\nexports.getMarkConfig = getMarkConfig;\nfunction formatSignalRef(fieldDef, specifiedFormat, expr, config) {\n    var format = numberFormat(fieldDef, specifiedFormat, config);\n    if (fieldDef.bin) {\n        var startField = fielddef_1.vgField(fieldDef, { expr: expr });\n        var endField = fielddef_1.vgField(fieldDef, { expr: expr, binSuffix: 'end' });\n        return {\n            signal: binFormatExpression(startField, endField, format, config)\n        };\n    }\n    else if (fieldDef.type === 'quantitative') {\n        return {\n            signal: \"\" + formatExpr(fielddef_1.vgField(fieldDef, { expr: expr, binSuffix: 'range' }), format)\n        };\n    }\n    else if (fielddef_1.isTimeFieldDef(fieldDef)) {\n        var isUTCScale = fielddef_1.isScaleFieldDef(fieldDef) && fieldDef['scale'] && fieldDef['scale'].type === scale_1.ScaleType.UTC;\n        return {\n            signal: timeFormatExpression(fielddef_1.vgField(fieldDef, { expr: expr }), fieldDef.timeUnit, specifiedFormat, config.text.shortTimeLabels, config.timeFormat, isUTCScale, true)\n        };\n    }\n    else {\n        return {\n            signal: \"''+\" + fielddef_1.vgField(fieldDef, { expr: expr })\n        };\n    }\n}\nexports.formatSignalRef = formatSignalRef;\nfunction getSpecifiedOrDefaultValue(specifiedValue, defaultValue) {\n    if (specifiedValue !== undefined) {\n        return specifiedValue;\n    }\n    return defaultValue;\n}\nexports.getSpecifiedOrDefaultValue = getSpecifiedOrDefaultValue;\n/**\n * Returns number format for a fieldDef\n *\n * @param format explicitly specified format\n */\nfunction numberFormat(fieldDef, specifiedFormat, config) {\n    if (fieldDef.type === type_1.QUANTITATIVE) {\n        // add number format for quantitative type only\n        // Specified format in axis/legend has higher precedence than fieldDef.format\n        if (specifiedFormat) {\n            return specifiedFormat;\n        }\n        // TODO: need to make this work correctly for numeric ordinal / nominal type\n        return config.numberFormat;\n    }\n    return undefined;\n}\nexports.numberFormat = numberFormat;\nfunction formatExpr(field, format) {\n    return \"format(\" + field + \", \\\"\" + (format || '') + \"\\\")\";\n}\nfunction numberFormatExpr(field, specifiedFormat, config) {\n    return formatExpr(field, specifiedFormat || config.numberFormat);\n}\nexports.numberFormatExpr = numberFormatExpr;\nfunction binFormatExpression(startField, endField, format, config) {\n    return startField + \" === null || isNaN(\" + startField + \") ? \\\"null\\\" : \" + numberFormatExpr(startField, format, config) + \" + \\\" - \\\" + \" + numberFormatExpr(endField, format, config);\n}\nexports.binFormatExpression = binFormatExpression;\n/**\n * Returns the time expression used for axis/legend labels or text mark for a temporal field\n */\nfunction timeFormatExpression(field, timeUnit, format, shortTimeLabels, timeFormatConfig, isUTCScale, alwaysReturn) {\n    if (alwaysReturn === void 0) { alwaysReturn = false; }\n    if (!timeUnit || format) {\n        // If there is not time unit, or if user explicitly specify format for axis/legend/text.\n        format = format || timeFormatConfig; // only use config.timeFormat if there is no timeUnit.\n        if (format || alwaysReturn) {\n            return (isUTCScale ? 'utc' : 'time') + \"Format(\" + field + \", '\" + format + \"')\";\n        }\n        else {\n            return undefined;\n        }\n    }\n    else {\n        return timeunit_1.formatExpression(timeUnit, field, shortTimeLabels, isUTCScale);\n    }\n}\nexports.timeFormatExpression = timeFormatExpression;\n/**\n * Return Vega sort parameters (tuple of field and order).\n */\nfunction sortParams(orderDef, fieldRefOption) {\n    return (vega_util_1.isArray(orderDef) ? orderDef : [orderDef]).reduce(function (s, orderChannelDef) {\n        s.field.push(fielddef_1.vgField(orderChannelDef, fieldRefOption));\n        s.order.push(orderChannelDef.sort || 'ascending');\n        return s;\n    }, { field: [], order: [] });\n}\nexports.sortParams = sortParams;\nfunction mergeTitleFieldDefs(f1, f2) {\n    var merged = f1.slice();\n    f2.forEach(function (fdToMerge) {\n        for (var _i = 0, merged_1 = merged; _i < merged_1.length; _i++) {\n            var fieldDef1 = merged_1[_i];\n            // If already exists, no need to append to merged array\n            if (util_1.stringify(fieldDef1) === util_1.stringify(fdToMerge)) {\n                return;\n            }\n        }\n        merged.push(fdToMerge);\n    });\n    return merged;\n}\nexports.mergeTitleFieldDefs = mergeTitleFieldDefs;\nfunction mergeTitle(title1, title2) {\n    return title1 === title2 ?\n        title1 : // if title is the same just use one of them\n        title1 + ', ' + title2; // join title with comma if different\n}\nexports.mergeTitle = mergeTitle;\nfunction mergeTitleComponent(v1, v2) {\n    if (vega_util_1.isArray(v1.value) && vega_util_1.isArray(v2.value)) {\n        return {\n            explicit: v1.explicit,\n            value: mergeTitleFieldDefs(v1.value, v2.value)\n        };\n    }\n    else if (!vega_util_1.isArray(v1.value) && !vega_util_1.isArray(v2.value)) {\n        return {\n            explicit: v1.explicit,\n            value: mergeTitle(v1.value, v2.value)\n        };\n    }\n    /* istanbul ignore next: Condition should not happen -- only for warning in development. */\n    throw new Error('It should never reach here');\n}\nexports.mergeTitleComponent = mergeTitleComponent;\n/**\n * Checks whether a fieldDef for a particular channel requires a computed bin range.\n */\nfunction binRequiresRange(fieldDef, channel) {\n    if (!fieldDef.bin) {\n        console.warn('Only use this method with binned field defs');\n        return false;\n    }\n    // We need the range only when the user explicitly forces a binned field to be use discrete scale. In this case, bin range is used in axis and legend labels.\n    // We could check whether the axis or legend exists (not disabled) but that seems overkill.\n    return channel_1.isScaleChannel(channel) && util_1.contains(['ordinal', 'nominal'], fieldDef.type);\n}\nexports.binRequiresRange = binRequiresRange;\nfunction guideEncodeEntry(encoding, model) {\n    return util_1.keys(encoding).reduce(function (encode, channel) {\n        var valueDef = encoding[channel];\n        return tslib_1.__assign({}, encode, mixins_1.wrapCondition(model, valueDef, channel, function (x) { return ({ value: x.value }); }));\n    }, {});\n}\nexports.guideEncodeEntry = guideEncodeEntry;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":218}},"hash":"f38dc61113debce58a1752531d528896","cacheData":{"env":{}}}