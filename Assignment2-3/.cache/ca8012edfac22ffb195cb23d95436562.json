{"dependencies":[{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/package.json","includedInParent":true,"mtime":1534047879038},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/.babelrc","includedInParent":true,"mtime":1528828036274},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/node_modules/vega-lite/build/src/package.json","includedInParent":true,"mtime":499162500000},{"name":"../channel","loc":{"line":3,"column":24}},{"name":"../log","loc":{"line":4,"column":18}},{"name":"../util","loc":{"line":5,"column":21}},{"name":"./model","loc":{"line":6,"column":22}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_1 = require(\"../channel\");\nvar log = require(\"../log\");\nvar util_1 = require(\"../util\");\nvar model_1 = require(\"./model\");\nfunction defaultScaleResolve(channel, model) {\n    if (model_1.isLayerModel(model) || model_1.isFacetModel(model)) {\n        return 'shared';\n    }\n    else if (model_1.isConcatModel(model) || model_1.isRepeatModel(model)) {\n        return util_1.contains(channel_1.POSITION_SCALE_CHANNELS, channel) ? 'independent' : 'shared';\n    }\n    /* istanbul ignore next: should never reach here. */\n    throw new Error('invalid model type for resolve');\n}\nexports.defaultScaleResolve = defaultScaleResolve;\nfunction parseGuideResolve(resolve, channel) {\n    var channelScaleResolve = resolve.scale[channel];\n    var guide = util_1.contains(channel_1.POSITION_SCALE_CHANNELS, channel) ? 'axis' : 'legend';\n    if (channelScaleResolve === 'independent') {\n        if (resolve[guide][channel] === 'shared') {\n            log.warn(log.message.independentScaleMeansIndependentGuide(channel));\n        }\n        return 'independent';\n    }\n    return resolve[guide][channel] || 'shared';\n}\nexports.parseGuideResolve = parseGuideResolve;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21waWxlL3Jlc29sdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBaUU7QUFDakUsNEJBQThCO0FBRTlCLGdDQUFpQztBQUNqQyxpQ0FBd0Y7QUFFeEYsNkJBQW9DLE9BQXFCLEVBQUUsS0FBWTtJQUNyRSxJQUFJLG9CQUFZLENBQUMsS0FBSyxDQUFDLElBQUksb0JBQVksQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUM5QyxPQUFPLFFBQVEsQ0FBQztLQUNqQjtTQUFNLElBQUkscUJBQWEsQ0FBQyxLQUFLLENBQUMsSUFBSSxxQkFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3ZELE9BQU8sZUFBUSxDQUFDLGlDQUF1QixFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztLQUM5RTtJQUNELG9EQUFvRDtJQUNwRCxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7QUFDcEQsQ0FBQztBQVJELGtEQVFDO0FBRUQsMkJBQWtDLE9BQWdCLEVBQUUsT0FBcUI7SUFDdkUsSUFBTSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELElBQU0sS0FBSyxHQUFHLGVBQVEsQ0FBQyxpQ0FBdUIsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7SUFFN0UsSUFBSSxtQkFBbUIsS0FBSyxhQUFhLEVBQUU7UUFDekMsSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUSxFQUFFO1lBQ3hDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxxQ0FBcUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1NBQ3RFO1FBQ0QsT0FBTyxhQUFhLENBQUM7S0FDdEI7SUFFRCxPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxRQUFRLENBQUM7QUFDN0MsQ0FBQztBQVpELDhDQVlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQT1NJVElPTl9TQ0FMRV9DSEFOTkVMUywgU2NhbGVDaGFubmVsfSBmcm9tICcuLi9jaGFubmVsJztcbmltcG9ydCAqIGFzIGxvZyBmcm9tICcuLi9sb2cnO1xuaW1wb3J0IHtSZXNvbHZlLCBSZXNvbHZlTW9kZX0gZnJvbSAnLi4vcmVzb2x2ZSc7XG5pbXBvcnQge2NvbnRhaW5zfSBmcm9tICcuLi91dGlsJztcbmltcG9ydCB7aXNDb25jYXRNb2RlbCwgaXNGYWNldE1vZGVsLCBpc0xheWVyTW9kZWwsIGlzUmVwZWF0TW9kZWwsIE1vZGVsfSBmcm9tICcuL21vZGVsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRTY2FsZVJlc29sdmUoY2hhbm5lbDogU2NhbGVDaGFubmVsLCBtb2RlbDogTW9kZWwpOiBSZXNvbHZlTW9kZSB7XG4gIGlmIChpc0xheWVyTW9kZWwobW9kZWwpIHx8IGlzRmFjZXRNb2RlbChtb2RlbCkpIHtcbiAgICByZXR1cm4gJ3NoYXJlZCc7XG4gIH0gZWxzZSBpZiAoaXNDb25jYXRNb2RlbChtb2RlbCkgfHwgaXNSZXBlYXRNb2RlbChtb2RlbCkpIHtcbiAgICByZXR1cm4gY29udGFpbnMoUE9TSVRJT05fU0NBTEVfQ0hBTk5FTFMsIGNoYW5uZWwpID8gJ2luZGVwZW5kZW50JyA6ICdzaGFyZWQnO1xuICB9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBzaG91bGQgbmV2ZXIgcmVhY2ggaGVyZS4gKi9cbiAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIG1vZGVsIHR5cGUgZm9yIHJlc29sdmUnKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlR3VpZGVSZXNvbHZlKHJlc29sdmU6IFJlc29sdmUsIGNoYW5uZWw6IFNjYWxlQ2hhbm5lbCk6IFJlc29sdmVNb2RlIHtcbiAgY29uc3QgY2hhbm5lbFNjYWxlUmVzb2x2ZSA9IHJlc29sdmUuc2NhbGVbY2hhbm5lbF07XG4gIGNvbnN0IGd1aWRlID0gY29udGFpbnMoUE9TSVRJT05fU0NBTEVfQ0hBTk5FTFMsIGNoYW5uZWwpID8gJ2F4aXMnIDogJ2xlZ2VuZCc7XG5cbiAgaWYgKGNoYW5uZWxTY2FsZVJlc29sdmUgPT09ICdpbmRlcGVuZGVudCcpIHtcbiAgICBpZiAocmVzb2x2ZVtndWlkZV1bY2hhbm5lbF0gPT09ICdzaGFyZWQnKSB7XG4gICAgICBsb2cud2Fybihsb2cubWVzc2FnZS5pbmRlcGVuZGVudFNjYWxlTWVhbnNJbmRlcGVuZGVudEd1aWRlKGNoYW5uZWwpKTtcbiAgICB9XG4gICAgcmV0dXJuICdpbmRlcGVuZGVudCc7XG4gIH1cblxuICByZXR1cm4gcmVzb2x2ZVtndWlkZV1bY2hhbm5lbF0gfHwgJ3NoYXJlZCc7XG59XG4iXX0=","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/resolve.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"node_modules/vega-lite/build/src/compile/resolve.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_1 = require(\"../channel\");\nvar log = require(\"../log\");\nvar util_1 = require(\"../util\");\nvar model_1 = require(\"./model\");\nfunction defaultScaleResolve(channel, model) {\n    if (model_1.isLayerModel(model) || model_1.isFacetModel(model)) {\n        return 'shared';\n    }\n    else if (model_1.isConcatModel(model) || model_1.isRepeatModel(model)) {\n        return util_1.contains(channel_1.POSITION_SCALE_CHANNELS, channel) ? 'independent' : 'shared';\n    }\n    /* istanbul ignore next: should never reach here. */\n    throw new Error('invalid model type for resolve');\n}\nexports.defaultScaleResolve = defaultScaleResolve;\nfunction parseGuideResolve(resolve, channel) {\n    var channelScaleResolve = resolve.scale[channel];\n    var guide = util_1.contains(channel_1.POSITION_SCALE_CHANNELS, channel) ? 'axis' : 'legend';\n    if (channelScaleResolve === 'independent') {\n        if (resolve[guide][channel] === 'shared') {\n            log.warn(log.message.independentScaleMeansIndependentGuide(channel));\n        }\n        return 'independent';\n    }\n    return resolve[guide][channel] || 'shared';\n}\nexports.parseGuideResolve = parseGuideResolve;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21waWxlL3Jlc29sdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBaUU7QUFDakUsNEJBQThCO0FBRTlCLGdDQUFpQztBQUNqQyxpQ0FBd0Y7QUFFeEYsNkJBQW9DLE9BQXFCLEVBQUUsS0FBWTtJQUNyRSxJQUFJLG9CQUFZLENBQUMsS0FBSyxDQUFDLElBQUksb0JBQVksQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUM5QyxPQUFPLFFBQVEsQ0FBQztLQUNqQjtTQUFNLElBQUkscUJBQWEsQ0FBQyxLQUFLLENBQUMsSUFBSSxxQkFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3ZELE9BQU8sZUFBUSxDQUFDLGlDQUF1QixFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztLQUM5RTtJQUNELG9EQUFvRDtJQUNwRCxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7QUFDcEQsQ0FBQztBQVJELGtEQVFDO0FBRUQsMkJBQWtDLE9BQWdCLEVBQUUsT0FBcUI7SUFDdkUsSUFBTSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELElBQU0sS0FBSyxHQUFHLGVBQVEsQ0FBQyxpQ0FBdUIsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7SUFFN0UsSUFBSSxtQkFBbUIsS0FBSyxhQUFhLEVBQUU7UUFDekMsSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUSxFQUFFO1lBQ3hDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxxQ0FBcUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1NBQ3RFO1FBQ0QsT0FBTyxhQUFhLENBQUM7S0FDdEI7SUFFRCxPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxRQUFRLENBQUM7QUFDN0MsQ0FBQztBQVpELDhDQVlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQT1NJVElPTl9TQ0FMRV9DSEFOTkVMUywgU2NhbGVDaGFubmVsfSBmcm9tICcuLi9jaGFubmVsJztcbmltcG9ydCAqIGFzIGxvZyBmcm9tICcuLi9sb2cnO1xuaW1wb3J0IHtSZXNvbHZlLCBSZXNvbHZlTW9kZX0gZnJvbSAnLi4vcmVzb2x2ZSc7XG5pbXBvcnQge2NvbnRhaW5zfSBmcm9tICcuLi91dGlsJztcbmltcG9ydCB7aXNDb25jYXRNb2RlbCwgaXNGYWNldE1vZGVsLCBpc0xheWVyTW9kZWwsIGlzUmVwZWF0TW9kZWwsIE1vZGVsfSBmcm9tICcuL21vZGVsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRTY2FsZVJlc29sdmUoY2hhbm5lbDogU2NhbGVDaGFubmVsLCBtb2RlbDogTW9kZWwpOiBSZXNvbHZlTW9kZSB7XG4gIGlmIChpc0xheWVyTW9kZWwobW9kZWwpIHx8IGlzRmFjZXRNb2RlbChtb2RlbCkpIHtcbiAgICByZXR1cm4gJ3NoYXJlZCc7XG4gIH0gZWxzZSBpZiAoaXNDb25jYXRNb2RlbChtb2RlbCkgfHwgaXNSZXBlYXRNb2RlbChtb2RlbCkpIHtcbiAgICByZXR1cm4gY29udGFpbnMoUE9TSVRJT05fU0NBTEVfQ0hBTk5FTFMsIGNoYW5uZWwpID8gJ2luZGVwZW5kZW50JyA6ICdzaGFyZWQnO1xuICB9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBzaG91bGQgbmV2ZXIgcmVhY2ggaGVyZS4gKi9cbiAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIG1vZGVsIHR5cGUgZm9yIHJlc29sdmUnKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlR3VpZGVSZXNvbHZlKHJlc29sdmU6IFJlc29sdmUsIGNoYW5uZWw6IFNjYWxlQ2hhbm5lbCk6IFJlc29sdmVNb2RlIHtcbiAgY29uc3QgY2hhbm5lbFNjYWxlUmVzb2x2ZSA9IHJlc29sdmUuc2NhbGVbY2hhbm5lbF07XG4gIGNvbnN0IGd1aWRlID0gY29udGFpbnMoUE9TSVRJT05fU0NBTEVfQ0hBTk5FTFMsIGNoYW5uZWwpID8gJ2F4aXMnIDogJ2xlZ2VuZCc7XG5cbiAgaWYgKGNoYW5uZWxTY2FsZVJlc29sdmUgPT09ICdpbmRlcGVuZGVudCcpIHtcbiAgICBpZiAocmVzb2x2ZVtndWlkZV1bY2hhbm5lbF0gPT09ICdzaGFyZWQnKSB7XG4gICAgICBsb2cud2Fybihsb2cubWVzc2FnZS5pbmRlcGVuZGVudFNjYWxlTWVhbnNJbmRlcGVuZGVudEd1aWRlKGNoYW5uZWwpKTtcbiAgICB9XG4gICAgcmV0dXJuICdpbmRlcGVuZGVudCc7XG4gIH1cblxuICByZXR1cm4gcmVzb2x2ZVtndWlkZV1bY2hhbm5lbF0gfHwgJ3NoYXJlZCc7XG59XG4iXX0="},"lineCount":30}},"hash":"dfcde5db00a623457a340f978bab88a3","cacheData":{"env":{}}}