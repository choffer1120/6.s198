{"dependencies":[{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\package.json","includedInParent":true,"mtime":1537759548368},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\.babelrc","includedInParent":true,"mtime":1536780611616},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\node_modules\\vega-lite\\build\\src\\package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22}},{"name":"../../channel","loc":{"line":4,"column":24}},{"name":"../../data","loc":{"line":5,"column":21}},{"name":"../../projection","loc":{"line":6,"column":27}},{"name":"../../type","loc":{"line":7,"column":21}},{"name":"../../util","loc":{"line":8,"column":21}},{"name":"../model","loc":{"line":9,"column":22}},{"name":"./component","loc":{"line":10,"column":26}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar channel_1 = require(\"../../channel\");\nvar data_1 = require(\"../../data\");\nvar projection_1 = require(\"../../projection\");\nvar type_1 = require(\"../../type\");\nvar util_1 = require(\"../../util\");\nvar model_1 = require(\"../model\");\nvar component_1 = require(\"./component\");\nfunction parseProjection(model) {\n    if (model_1.isUnitModel(model)) {\n        model.component.projection = parseUnitProjection(model);\n    }\n    else {\n        // because parse happens from leaves up (unit specs before layer spec),\n        // we can be sure that the above if statement has already occurred\n        // and therefore we have access to child.component.projection\n        // for each of model's children\n        model.component.projection = parseNonUnitProjections(model);\n    }\n}\nexports.parseProjection = parseProjection;\nfunction parseUnitProjection(model) {\n    var specifiedProjection = model.specifiedProjection, config = model.config, hasProjection = model.hasProjection;\n    if (hasProjection) {\n        var data_2 = [];\n        [[channel_1.LONGITUDE, channel_1.LATITUDE], [channel_1.LONGITUDE2, channel_1.LATITUDE2]].forEach(function (posssiblePair) {\n            if (model.channelHasField(posssiblePair[0]) || model.channelHasField(posssiblePair[1])) {\n                data_2.push({\n                    signal: model.getName(\"geojson_\" + data_2.length)\n                });\n            }\n        });\n        if (model.channelHasField(channel_1.SHAPE) && model.fieldDef(channel_1.SHAPE).type === type_1.GEOJSON) {\n            data_2.push({\n                signal: model.getName(\"geojson_\" + data_2.length)\n            });\n        }\n        if (data_2.length === 0) {\n            // main source is geojson, so we can just use that\n            data_2.push(model.requestDataName(data_1.MAIN));\n        }\n        return new component_1.ProjectionComponent(model.projectionName(true), tslib_1.__assign({}, (config.projection || {}), (specifiedProjection || {})), [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')], data_2);\n    }\n    return undefined;\n}\nfunction mergeIfNoConflict(first, second) {\n    var allPropertiesShared = util_1.every(projection_1.PROJECTION_PROPERTIES, function (prop) {\n        // neither has the poperty\n        if (!first.explicit.hasOwnProperty(prop) &&\n            !second.explicit.hasOwnProperty(prop)) {\n            return true;\n        }\n        // both have property and an equal value for property\n        if (first.explicit.hasOwnProperty(prop) &&\n            second.explicit.hasOwnProperty(prop) &&\n            // some properties might be signals or objects and require hashing for comparison\n            util_1.stringify(first.get(prop)) === util_1.stringify(second.get(prop))) {\n            return true;\n        }\n        return false;\n    });\n    var size = util_1.stringify(first.size) === util_1.stringify(second.size);\n    if (size) {\n        if (allPropertiesShared) {\n            return first;\n        }\n        else if (util_1.stringify(first.explicit) === util_1.stringify({})) {\n            return second;\n        }\n        else if (util_1.stringify(second.explicit) === util_1.stringify({})) {\n            return first;\n        }\n    }\n    // if all properties don't match, let each unit spec have its own projection\n    return null;\n}\nfunction parseNonUnitProjections(model) {\n    if (model.children.length === 0) {\n        return undefined;\n    }\n    var nonUnitProjection;\n    var mergable = util_1.every(model.children, function (child) {\n        parseProjection(child);\n        var projection = child.component.projection;\n        if (!projection) {\n            // child layer does not use a projection\n            return true;\n        }\n        else if (!nonUnitProjection) {\n            // cached 'projection' is null, cache this one\n            nonUnitProjection = projection;\n            return true;\n        }\n        else {\n            var merge = mergeIfNoConflict(nonUnitProjection, projection);\n            if (merge) {\n                nonUnitProjection = merge;\n            }\n            return !!merge;\n        }\n    });\n    // it cached one and all other children share the same projection,\n    if (nonUnitProjection && mergable) {\n        // so we can elevate it to the layer level\n        var name_1 = model.projectionName(true);\n        var modelProjection_1 = new component_1.ProjectionComponent(name_1, nonUnitProjection.specifiedProjection, nonUnitProjection.size, util_1.duplicate(nonUnitProjection.data));\n        // rename and assign all others as merged\n        model.children.forEach(function (child) {\n            if (child.component.projection) {\n                modelProjection_1.data = modelProjection_1.data.concat(child.component.projection.data);\n                child.renameProjection(child.component.projection.get('name'), name_1);\n                child.component.projection.merged = true;\n            }\n        });\n        return modelProjection_1;\n    }\n    return undefined;\n}\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}}],"sources":{"node_modules\\vega-lite\\build\\src\\compile\\projection\\parse.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar channel_1 = require(\"../../channel\");\nvar data_1 = require(\"../../data\");\nvar projection_1 = require(\"../../projection\");\nvar type_1 = require(\"../../type\");\nvar util_1 = require(\"../../util\");\nvar model_1 = require(\"../model\");\nvar component_1 = require(\"./component\");\nfunction parseProjection(model) {\n    if (model_1.isUnitModel(model)) {\n        model.component.projection = parseUnitProjection(model);\n    }\n    else {\n        // because parse happens from leaves up (unit specs before layer spec),\n        // we can be sure that the above if statement has already occurred\n        // and therefore we have access to child.component.projection\n        // for each of model's children\n        model.component.projection = parseNonUnitProjections(model);\n    }\n}\nexports.parseProjection = parseProjection;\nfunction parseUnitProjection(model) {\n    var specifiedProjection = model.specifiedProjection, config = model.config, hasProjection = model.hasProjection;\n    if (hasProjection) {\n        var data_2 = [];\n        [[channel_1.LONGITUDE, channel_1.LATITUDE], [channel_1.LONGITUDE2, channel_1.LATITUDE2]].forEach(function (posssiblePair) {\n            if (model.channelHasField(posssiblePair[0]) || model.channelHasField(posssiblePair[1])) {\n                data_2.push({\n                    signal: model.getName(\"geojson_\" + data_2.length)\n                });\n            }\n        });\n        if (model.channelHasField(channel_1.SHAPE) && model.fieldDef(channel_1.SHAPE).type === type_1.GEOJSON) {\n            data_2.push({\n                signal: model.getName(\"geojson_\" + data_2.length)\n            });\n        }\n        if (data_2.length === 0) {\n            // main source is geojson, so we can just use that\n            data_2.push(model.requestDataName(data_1.MAIN));\n        }\n        return new component_1.ProjectionComponent(model.projectionName(true), tslib_1.__assign({}, (config.projection || {}), (specifiedProjection || {})), [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')], data_2);\n    }\n    return undefined;\n}\nfunction mergeIfNoConflict(first, second) {\n    var allPropertiesShared = util_1.every(projection_1.PROJECTION_PROPERTIES, function (prop) {\n        // neither has the poperty\n        if (!first.explicit.hasOwnProperty(prop) &&\n            !second.explicit.hasOwnProperty(prop)) {\n            return true;\n        }\n        // both have property and an equal value for property\n        if (first.explicit.hasOwnProperty(prop) &&\n            second.explicit.hasOwnProperty(prop) &&\n            // some properties might be signals or objects and require hashing for comparison\n            util_1.stringify(first.get(prop)) === util_1.stringify(second.get(prop))) {\n            return true;\n        }\n        return false;\n    });\n    var size = util_1.stringify(first.size) === util_1.stringify(second.size);\n    if (size) {\n        if (allPropertiesShared) {\n            return first;\n        }\n        else if (util_1.stringify(first.explicit) === util_1.stringify({})) {\n            return second;\n        }\n        else if (util_1.stringify(second.explicit) === util_1.stringify({})) {\n            return first;\n        }\n    }\n    // if all properties don't match, let each unit spec have its own projection\n    return null;\n}\nfunction parseNonUnitProjections(model) {\n    if (model.children.length === 0) {\n        return undefined;\n    }\n    var nonUnitProjection;\n    var mergable = util_1.every(model.children, function (child) {\n        parseProjection(child);\n        var projection = child.component.projection;\n        if (!projection) {\n            // child layer does not use a projection\n            return true;\n        }\n        else if (!nonUnitProjection) {\n            // cached 'projection' is null, cache this one\n            nonUnitProjection = projection;\n            return true;\n        }\n        else {\n            var merge = mergeIfNoConflict(nonUnitProjection, projection);\n            if (merge) {\n                nonUnitProjection = merge;\n            }\n            return !!merge;\n        }\n    });\n    // it cached one and all other children share the same projection,\n    if (nonUnitProjection && mergable) {\n        // so we can elevate it to the layer level\n        var name_1 = model.projectionName(true);\n        var modelProjection_1 = new component_1.ProjectionComponent(name_1, nonUnitProjection.specifiedProjection, nonUnitProjection.size, util_1.duplicate(nonUnitProjection.data));\n        // rename and assign all others as merged\n        model.children.forEach(function (child) {\n            if (child.component.projection) {\n                modelProjection_1.data = modelProjection_1.data.concat(child.component.projection.data);\n                child.renameProjection(child.component.projection.get('name'), name_1);\n                child.component.projection.merged = true;\n            }\n        });\n        return modelProjection_1;\n    }\n    return undefined;\n}\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":121}},"hash":"25296d3cdf655c28eb34682635724d6e","cacheData":{"env":{}}}