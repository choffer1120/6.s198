{"dependencies":[{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/package.json","includedInParent":true,"mtime":1534047879038},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/.babelrc","includedInParent":true,"mtime":1528828036274},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/node_modules/vega-lite/build/src/package.json","includedInParent":true,"mtime":499162500000},{"name":"vega-event-selector","loc":{"line":3,"column":36}},{"name":"vega-util","loc":{"line":4,"column":26}},{"name":"../../../channel","loc":{"line":5,"column":24}},{"name":"../interval","loc":{"line":6,"column":25}},{"name":"../selection","loc":{"line":7,"column":26}},{"name":"./scales","loc":{"line":8,"column":23}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_event_selector_1 = require(\"vega-event-selector\");\nvar vega_util_1 = require(\"vega-util\");\nvar channel_1 = require(\"../../../channel\");\nvar interval_1 = require(\"../interval\");\nvar selection_1 = require(\"../selection\");\nvar scales_1 = require(\"./scales\");\nvar ANCHOR = '_zoom_anchor';\nvar DELTA = '_zoom_delta';\nvar zoom = {\n    has: function (selCmpt) {\n        return selCmpt.type === 'interval' && selCmpt.zoom;\n    },\n    signals: function (model, selCmpt, signals) {\n        var name = selCmpt.name;\n        var hasScales = scales_1.default.has(selCmpt);\n        var delta = name + DELTA;\n        var _a = selection_1.positionalProjections(selCmpt), x = _a.x, y = _a.y;\n        var sx = vega_util_1.stringValue(model.scaleName(channel_1.X));\n        var sy = vega_util_1.stringValue(model.scaleName(channel_1.Y));\n        var events = vega_event_selector_1.selector(selCmpt.zoom, 'scope');\n        if (!hasScales) {\n            events = events.map(function (e) { return (e.markname = name + interval_1.BRUSH, e); });\n        }\n        signals.push({\n            name: name + ANCHOR,\n            on: [{\n                    events: events,\n                    update: !hasScales ? \"{x: x(unit), y: y(unit)}\" :\n                        '{' + [\n                            (sx ? \"x: invert(\" + sx + \", x(unit))\" : ''),\n                            (sy ? \"y: invert(\" + sy + \", y(unit))\" : '')\n                        ].filter(function (expr) { return !!expr; }).join(', ') + '}'\n                }]\n        }, {\n            name: delta,\n            on: [{\n                    events: events,\n                    force: true,\n                    update: 'pow(1.001, event.deltaY * pow(16, event.deltaMode))'\n                }]\n        });\n        if (x !== null) {\n            onDelta(model, selCmpt, 'x', 'width', signals);\n        }\n        if (y !== null) {\n            onDelta(model, selCmpt, 'y', 'height', signals);\n        }\n        return signals;\n    }\n};\nexports.default = zoom;\nfunction onDelta(model, selCmpt, channel, size, signals) {\n    var name = selCmpt.name;\n    var hasScales = scales_1.default.has(selCmpt);\n    var signal = signals.filter(function (s) {\n        return s.name === selection_1.channelSignalName(selCmpt, channel, hasScales ? 'data' : 'visual');\n    })[0];\n    var sizeSg = model.getSizeSignalRef(size).signal;\n    var scaleCmpt = model.getScaleComponent(channel);\n    var scaleType = scaleCmpt.get('type');\n    var base = hasScales ? scales_1.domain(model, channel) : signal.name;\n    var delta = name + DELTA;\n    var anchor = \"\" + name + ANCHOR + \".\" + channel;\n    var zoomFn = !hasScales ? 'zoomLinear' :\n        scaleType === 'log' ? 'zoomLog' :\n            scaleType === 'pow' ? 'zoomPow' : 'zoomLinear';\n    var update = zoomFn + \"(\" + base + \", \" + anchor + \", \" + delta +\n        (hasScales && scaleType === 'pow' ? \", \" + (scaleCmpt.get('exponent') || 1) : '') + ')';\n    signal.on.push({\n        events: { signal: delta },\n        update: hasScales ? update : \"clampRange(\" + update + \", 0, \" + sizeSg + \")\"\n    });\n}\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}}],"sources":{"node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_event_selector_1 = require(\"vega-event-selector\");\nvar vega_util_1 = require(\"vega-util\");\nvar channel_1 = require(\"../../../channel\");\nvar interval_1 = require(\"../interval\");\nvar selection_1 = require(\"../selection\");\nvar scales_1 = require(\"./scales\");\nvar ANCHOR = '_zoom_anchor';\nvar DELTA = '_zoom_delta';\nvar zoom = {\n    has: function (selCmpt) {\n        return selCmpt.type === 'interval' && selCmpt.zoom;\n    },\n    signals: function (model, selCmpt, signals) {\n        var name = selCmpt.name;\n        var hasScales = scales_1.default.has(selCmpt);\n        var delta = name + DELTA;\n        var _a = selection_1.positionalProjections(selCmpt), x = _a.x, y = _a.y;\n        var sx = vega_util_1.stringValue(model.scaleName(channel_1.X));\n        var sy = vega_util_1.stringValue(model.scaleName(channel_1.Y));\n        var events = vega_event_selector_1.selector(selCmpt.zoom, 'scope');\n        if (!hasScales) {\n            events = events.map(function (e) { return (e.markname = name + interval_1.BRUSH, e); });\n        }\n        signals.push({\n            name: name + ANCHOR,\n            on: [{\n                    events: events,\n                    update: !hasScales ? \"{x: x(unit), y: y(unit)}\" :\n                        '{' + [\n                            (sx ? \"x: invert(\" + sx + \", x(unit))\" : ''),\n                            (sy ? \"y: invert(\" + sy + \", y(unit))\" : '')\n                        ].filter(function (expr) { return !!expr; }).join(', ') + '}'\n                }]\n        }, {\n            name: delta,\n            on: [{\n                    events: events,\n                    force: true,\n                    update: 'pow(1.001, event.deltaY * pow(16, event.deltaMode))'\n                }]\n        });\n        if (x !== null) {\n            onDelta(model, selCmpt, 'x', 'width', signals);\n        }\n        if (y !== null) {\n            onDelta(model, selCmpt, 'y', 'height', signals);\n        }\n        return signals;\n    }\n};\nexports.default = zoom;\nfunction onDelta(model, selCmpt, channel, size, signals) {\n    var name = selCmpt.name;\n    var hasScales = scales_1.default.has(selCmpt);\n    var signal = signals.filter(function (s) {\n        return s.name === selection_1.channelSignalName(selCmpt, channel, hasScales ? 'data' : 'visual');\n    })[0];\n    var sizeSg = model.getSizeSignalRef(size).signal;\n    var scaleCmpt = model.getScaleComponent(channel);\n    var scaleType = scaleCmpt.get('type');\n    var base = hasScales ? scales_1.domain(model, channel) : signal.name;\n    var delta = name + DELTA;\n    var anchor = \"\" + name + ANCHOR + \".\" + channel;\n    var zoomFn = !hasScales ? 'zoomLinear' :\n        scaleType === 'log' ? 'zoomLog' :\n            scaleType === 'pow' ? 'zoomPow' : 'zoomLinear';\n    var update = zoomFn + \"(\" + base + \", \" + anchor + \", \" + delta +\n        (hasScales && scaleType === 'pow' ? \", \" + (scaleCmpt.get('exponent') || 1) : '') + ')';\n    signal.on.push({\n        events: { signal: delta },\n        update: hasScales ? update : \"clampRange(\" + update + \", 0, \" + sizeSg + \")\"\n    });\n}\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":76}},"hash":"739659b35d6f6fc7646bc388c481d406","cacheData":{"env":{}}}