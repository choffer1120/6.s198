{"dependencies":[{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\package.json","includedInParent":true,"mtime":1537759548368},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\.babelrc","includedInParent":true,"mtime":1536780611616},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\Assignment2-3\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1529543031000},{"name":"../doc","loc":{"line":9,"column":20}},{"name":"../util","loc":{"line":10,"column":19}},{"name":"./operation","loc":{"line":11,"column":26}},{"name":"./ops","loc":{"line":12,"column":18}}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar ops = require(\"./ops\");\nvar Reduction;\n(function (Reduction) {\n    Reduction[Reduction[\"NONE\"] = 0] = \"NONE\";\n    Reduction[Reduction[\"MEAN\"] = 1] = \"MEAN\";\n    Reduction[Reduction[\"SUM\"] = 2] = \"SUM\";\n    Reduction[Reduction[\"SUM_BY_NONZERO_WEIGHTS\"] = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n})(Reduction = exports.Reduction || (exports.Reduction = {}));\nvar LossOps = (function () {\n    function LossOps() {\n    }\n    LossOps.computeWeightedLoss = function (losses, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ losses: losses }, 'computeWeightedLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'computeWeightedLoss');\n        }\n        var weightedLoss = (weights == null) ? losses : losses.mul(weights);\n        if (reduction === Reduction.NONE) {\n            return weightedLoss;\n        }\n        if (reduction === Reduction.SUM) {\n            return weightedLoss.sum();\n        }\n        if (reduction === Reduction.MEAN) {\n            return (weights == null) ? weightedLoss.mean() :\n                weightedLoss.sum().div(weights.sum());\n        }\n        if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n            if (weights == null) {\n                return weightedLoss.sum().div(ops.scalar(losses.size));\n            }\n            else {\n                var numNonZeros = weights.notEqual(ops.scalar(0)).sum().toFloat();\n                return weightedLoss.sum().div(numNonZeros);\n            }\n        }\n        throw Error(\"Unknown reduction: \" + reduction);\n    };\n    LossOps.absoluteDifference = function (labels, predictions, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'absoluteDifference');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'absoluteDifference');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in absoluteDifference: ');\n        var losses = labels.sub(predictions).abs();\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.meanSquaredError = function (labels, predictions, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'meanSquaredError');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'meanSquaredError');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in meanSquaredError: ');\n        var losses = labels.squaredDifference(predictions);\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.cosineDistance = function (labels, predictions, axis, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'cosineDistance');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'cosineDistance');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in cosineDistance: ');\n        var one = ops.scalar(1);\n        var losses = one.sub(labels.mul(predictions).sum(axis, true));\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.hingeLoss = function (labels, predictions, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'hingeLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'hingeLoss');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in hingeLoss: ');\n        var one = ops.scalar(1);\n        labels = ops.scalar(2).mul(labels).sub(one);\n        var losses = one.sub(labels.mul(predictions)).relu();\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.logLoss = function (labels, predictions, weights, epsilon, reduction) {\n        if (epsilon === void 0) { epsilon = 1e-7; }\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'logLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'logLoss');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in logLoss: ');\n        var one = ops.scalar(1);\n        var epsilonScalar = ops.scalar(epsilon);\n        var losses = labels.mul(predictions.add(epsilonScalar).log())\n            .neg()\n            .sub(one.sub(labels).mul(one.sub(predictions).add(epsilonScalar).log()));\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.huberLoss = function (labels, predictions, weights, delta, reduction) {\n        if (delta === void 0) { delta = 1.0; }\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'huberLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'huberLoss');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in huberLoss: ');\n        var deltaScalar = ops.scalar(delta);\n        var error = predictions.sub(labels).abs();\n        var quadratic = ops.minimum(error, deltaScalar);\n        var linear = error.sub(quadratic);\n        var losses = ops.scalar(0.5).mul(quadratic.square()).add(deltaScalar.mul(linear));\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"computeWeightedLoss\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"absoluteDifference\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"meanSquaredError\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"cosineDistance\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"hingeLoss\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"logLoss\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"huberLoss\", null);\n    return LossOps;\n}());\nexports.LossOps = LossOps;\n//# sourceMappingURL=loss_ops.js.map","map":{"mappings":[{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}}],"sources":{"node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\loss_ops.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar ops = require(\"./ops\");\nvar Reduction;\n(function (Reduction) {\n    Reduction[Reduction[\"NONE\"] = 0] = \"NONE\";\n    Reduction[Reduction[\"MEAN\"] = 1] = \"MEAN\";\n    Reduction[Reduction[\"SUM\"] = 2] = \"SUM\";\n    Reduction[Reduction[\"SUM_BY_NONZERO_WEIGHTS\"] = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n})(Reduction = exports.Reduction || (exports.Reduction = {}));\nvar LossOps = (function () {\n    function LossOps() {\n    }\n    LossOps.computeWeightedLoss = function (losses, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ losses: losses }, 'computeWeightedLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'computeWeightedLoss');\n        }\n        var weightedLoss = (weights == null) ? losses : losses.mul(weights);\n        if (reduction === Reduction.NONE) {\n            return weightedLoss;\n        }\n        if (reduction === Reduction.SUM) {\n            return weightedLoss.sum();\n        }\n        if (reduction === Reduction.MEAN) {\n            return (weights == null) ? weightedLoss.mean() :\n                weightedLoss.sum().div(weights.sum());\n        }\n        if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n            if (weights == null) {\n                return weightedLoss.sum().div(ops.scalar(losses.size));\n            }\n            else {\n                var numNonZeros = weights.notEqual(ops.scalar(0)).sum().toFloat();\n                return weightedLoss.sum().div(numNonZeros);\n            }\n        }\n        throw Error(\"Unknown reduction: \" + reduction);\n    };\n    LossOps.absoluteDifference = function (labels, predictions, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'absoluteDifference');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'absoluteDifference');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in absoluteDifference: ');\n        var losses = labels.sub(predictions).abs();\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.meanSquaredError = function (labels, predictions, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'meanSquaredError');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'meanSquaredError');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in meanSquaredError: ');\n        var losses = labels.squaredDifference(predictions);\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.cosineDistance = function (labels, predictions, axis, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'cosineDistance');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'cosineDistance');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in cosineDistance: ');\n        var one = ops.scalar(1);\n        var losses = one.sub(labels.mul(predictions).sum(axis, true));\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.hingeLoss = function (labels, predictions, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'hingeLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'hingeLoss');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in hingeLoss: ');\n        var one = ops.scalar(1);\n        labels = ops.scalar(2).mul(labels).sub(one);\n        var losses = one.sub(labels.mul(predictions)).relu();\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.logLoss = function (labels, predictions, weights, epsilon, reduction) {\n        if (epsilon === void 0) { epsilon = 1e-7; }\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'logLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'logLoss');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in logLoss: ');\n        var one = ops.scalar(1);\n        var epsilonScalar = ops.scalar(epsilon);\n        var losses = labels.mul(predictions.add(epsilonScalar).log())\n            .neg()\n            .sub(one.sub(labels).mul(one.sub(predictions).add(epsilonScalar).log()));\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    LossOps.huberLoss = function (labels, predictions, weights, delta, reduction) {\n        if (delta === void 0) { delta = 1.0; }\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'huberLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'huberLoss');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in huberLoss: ');\n        var deltaScalar = ops.scalar(delta);\n        var error = predictions.sub(labels).abs();\n        var quadratic = ops.minimum(error, deltaScalar);\n        var linear = error.sub(quadratic);\n        var losses = ops.scalar(0.5).mul(quadratic.square()).add(deltaScalar.mul(linear));\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"computeWeightedLoss\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"absoluteDifference\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"meanSquaredError\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"cosineDistance\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"hingeLoss\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"logLoss\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"huberLoss\", null);\n    return LossOps;\n}());\nexports.LossOps = LossOps;\n//# sourceMappingURL=loss_ops.js.map"},"lineCount":155}},"hash":"79726cea56b7a7bf14af32ce838b4381","cacheData":{"env":{}}}