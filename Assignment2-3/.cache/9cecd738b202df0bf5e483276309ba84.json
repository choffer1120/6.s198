{"dependencies":[{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/package.json","includedInParent":true,"mtime":1534047879038},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/.babelrc","includedInParent":true,"mtime":1528828036274},{"name":"/Users/yaakov/tfjs-examples-modified/Assignmnet2-3/node_modules/vega-lite/build/src/package.json","includedInParent":true,"mtime":499162500000},{"name":"vega-util","loc":{"line":6,"column":26}},{"name":"./util","loc":{"line":7,"column":21}}],"generated":{"js":"\"use strict\";\n/**\n * Vega-Lite's singleton logger utility.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar util_1 = require(\"./util\");\n/**\n * Main (default) Vega Logger instance for Vega-Lite\n */\nvar main = vega_util_1.logger(vega_util_1.Warn);\nvar current = main;\n/**\n * Logger tool for checking if the code throws correct warning\n */\nvar LocalLogger = /** @class */ (function () {\n    function LocalLogger() {\n        this.warns = [];\n        this.infos = [];\n        this.debugs = [];\n    }\n    LocalLogger.prototype.level = function () {\n        return this;\n    };\n    LocalLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this.warns).push.apply(_a, args);\n        return this;\n        var _a;\n    };\n    LocalLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this.infos).push.apply(_a, args);\n        return this;\n        var _a;\n    };\n    LocalLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this.debugs).push.apply(_a, args);\n        return this;\n        var _a;\n    };\n    return LocalLogger;\n}());\nexports.LocalLogger = LocalLogger;\nfunction wrap(f) {\n    return function () {\n        current = new LocalLogger();\n        f(current);\n        reset();\n    };\n}\nexports.wrap = wrap;\n/**\n * Set the singleton logger to be a custom logger\n */\nfunction set(newLogger) {\n    current = newLogger;\n    return current;\n}\nexports.set = set;\n/**\n * Reset the main logger to use the default Vega Logger\n */\nfunction reset() {\n    current = main;\n    return current;\n}\nexports.reset = reset;\nfunction warn() {\n    var _ = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _[_i] = arguments[_i];\n    }\n    current.warn.apply(current, arguments);\n}\nexports.warn = warn;\nfunction info() {\n    var _ = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _[_i] = arguments[_i];\n    }\n    current.info.apply(current, arguments);\n}\nexports.info = info;\nfunction debug() {\n    var _ = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _[_i] = arguments[_i];\n    }\n    current.debug.apply(current, arguments);\n}\nexports.debug = debug;\n/**\n * Collection of all Vega-Lite Error Messages\n */\nvar message;\n(function (message) {\n    message.INVALID_SPEC = 'Invalid spec';\n    // FIT\n    message.FIT_NON_SINGLE = 'Autosize \"fit\" only works for single views and layered views.';\n    message.CANNOT_FIX_RANGE_STEP_WITH_FIT = 'Cannot use a fixed value of \"rangeStep\" when \"autosize\" is \"fit\".';\n    // SELECTION\n    function cannotProjectOnChannelWithoutField(channel) {\n        return \"Cannot project a selection on encoding channel \\\"\" + channel + \"\\\", which has no field.\";\n    }\n    message.cannotProjectOnChannelWithoutField = cannotProjectOnChannelWithoutField;\n    function nearestNotSupportForContinuous(mark) {\n        return \"The \\\"nearest\\\" transform is not supported for \" + mark + \" marks.\";\n    }\n    message.nearestNotSupportForContinuous = nearestNotSupportForContinuous;\n    function selectionNotFound(name) {\n        return \"Cannot find a selection named \\\"\" + name + \"\\\"\";\n    }\n    message.selectionNotFound = selectionNotFound;\n    message.SCALE_BINDINGS_CONTINUOUS = 'Scale bindings are currently only supported for scales with unbinned, continuous domains.';\n    // REPEAT\n    function noSuchRepeatedValue(field) {\n        return \"Unknown repeated value \\\"\" + field + \"\\\".\";\n    }\n    message.noSuchRepeatedValue = noSuchRepeatedValue;\n    // CONCAT\n    message.CONCAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in concatenated views.';\n    // REPEAT\n    message.REPEAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in repeated views.';\n    // TITLE\n    function cannotSetTitleAnchor(type) {\n        return \"Cannot set title \\\"anchor\\\" for a \" + type + \" spec\";\n    }\n    message.cannotSetTitleAnchor = cannotSetTitleAnchor;\n    // DATA\n    function unrecognizedParse(p) {\n        return \"Unrecognized parse \\\"\" + p + \"\\\".\";\n    }\n    message.unrecognizedParse = unrecognizedParse;\n    function differentParse(field, local, ancestor) {\n        return \"An ancestor parsed field \\\"\" + field + \"\\\" as \" + ancestor + \" but a child wants to parse the field as \" + local + \".\";\n    }\n    message.differentParse = differentParse;\n    // TRANSFORMS\n    function invalidTransformIgnored(transform) {\n        return \"Ignoring an invalid transform: \" + util_1.stringify(transform) + \".\";\n    }\n    message.invalidTransformIgnored = invalidTransformIgnored;\n    message.NO_FIELDS_NEEDS_AS = 'If \"from.fields\" is not specified, \"as\" has to be a string that specifies the key to be used for the data from the secondary source.';\n    // ENCODING & FACET\n    function encodingOverridden(channels) {\n        return \"Layer's shared \" + channels.join(',') + \" channel \" + (channels.length === 1 ? 'is' : 'are') + \" overriden\";\n    }\n    message.encodingOverridden = encodingOverridden;\n    function projectionOverridden(opt) {\n        var parentProjection = opt.parentProjection, projection = opt.projection;\n        return \"Layer's shared projection \" + util_1.stringify(parentProjection) + \" is overridden by a child projection \" + util_1.stringify(projection) + \".\";\n    }\n    message.projectionOverridden = projectionOverridden;\n    function primitiveChannelDef(channel, type, value) {\n        return \"Channel \" + channel + \" is a \" + type + \". Converted to {value: \" + util_1.stringify(value) + \"}.\";\n    }\n    message.primitiveChannelDef = primitiveChannelDef;\n    function invalidFieldType(type) {\n        return \"Invalid field type \\\"\" + type + \"\\\"\";\n    }\n    message.invalidFieldType = invalidFieldType;\n    function nonZeroScaleUsedWithLengthMark(mark, channel, opt) {\n        var scaleText = opt.scaleType ? opt.scaleType + \" scale\" :\n            opt.zeroFalse ? 'scale with zero=false' :\n                'scale with custom domain that excludes zero';\n        return \"A \" + scaleText + \" is used with \" + mark + \" mark. This can be misleading as the \" + (channel === 'x' ? 'width' : 'height') + \" of the \" + mark + \" can be arbitrary based on the scale domain. You may want to use point mark instead.\";\n    }\n    message.nonZeroScaleUsedWithLengthMark = nonZeroScaleUsedWithLengthMark;\n    function invalidFieldTypeForCountAggregate(type, aggregate) {\n        return \"Invalid field type \\\"\" + type + \"\\\" for aggregate: \\\"\" + aggregate + \"\\\", using \\\"quantitative\\\" instead.\";\n    }\n    message.invalidFieldTypeForCountAggregate = invalidFieldTypeForCountAggregate;\n    function invalidAggregate(aggregate) {\n        return \"Invalid aggregation operator \\\"\" + aggregate + \"\\\"\";\n    }\n    message.invalidAggregate = invalidAggregate;\n    function emptyOrInvalidFieldType(type, channel, newType) {\n        return \"Invalid field type \\\"\" + type + \"\\\" for channel \\\"\" + channel + \"\\\", using \\\"\" + newType + \"\\\" instead.\";\n    }\n    message.emptyOrInvalidFieldType = emptyOrInvalidFieldType;\n    function droppingColor(type, opt) {\n        var fill = opt.fill, stroke = opt.stroke;\n        return \"Dropping color \" + type + \" as the plot also has \" + (fill && stroke ? 'fill and stroke' : fill ? 'fill' : 'stroke');\n    }\n    message.droppingColor = droppingColor;\n    function emptyFieldDef(fieldDef, channel) {\n        return \"Dropping \" + util_1.stringify(fieldDef) + \" from channel \\\"\" + channel + \"\\\" since it does not contain data field or value.\";\n    }\n    message.emptyFieldDef = emptyFieldDef;\n    function latLongDeprecated(channel, type, newChannel) {\n        return channel + \"-encoding with type \" + type + \" is deprecated. Replacing with \" + newChannel + \"-encoding.\";\n    }\n    message.latLongDeprecated = latLongDeprecated;\n    message.LINE_WITH_VARYING_SIZE = 'Line marks cannot encode size with a non-groupby field. You may want to use trail marks instead.';\n    function incompatibleChannel(channel, markOrFacet, when) {\n        return channel + \" dropped as it is incompatible with \\\"\" + markOrFacet + \"\\\"\" + (when ? \" when \" + when : '') + \".\";\n    }\n    message.incompatibleChannel = incompatibleChannel;\n    function invalidEncodingChannel(channel) {\n        return channel + \"-encoding is dropped as \" + channel + \" is not a valid encoding channel.\";\n    }\n    message.invalidEncodingChannel = invalidEncodingChannel;\n    function facetChannelShouldBeDiscrete(channel) {\n        return channel + \" encoding should be discrete (ordinal / nominal / binned).\";\n    }\n    message.facetChannelShouldBeDiscrete = facetChannelShouldBeDiscrete;\n    function discreteChannelCannotEncode(channel, type) {\n        return \"Using discrete channel \\\"\" + channel + \"\\\" to encode \\\"\" + type + \"\\\" field can be misleading as it does not encode \" + (type === 'ordinal' ? 'order' : 'magnitude') + \".\";\n    }\n    message.discreteChannelCannotEncode = discreteChannelCannotEncode;\n    // Mark\n    message.BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL = 'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';\n    function lineWithRange(hasX2, hasY2) {\n        var channels = hasX2 && hasY2 ? 'x2 and y2' : hasX2 ? 'x2' : 'y2';\n        return \"Line mark is for continuous lines and thus cannot be used with \" + channels + \". We will use the rule mark (line segments) instead.\";\n    }\n    message.lineWithRange = lineWithRange;\n    function unclearOrientContinuous(mark) {\n        return \"Cannot clearly determine orientation for \\\"\" + mark + \"\\\" since both x and y channel encode continuous fields. In this case, we use vertical by default\";\n    }\n    message.unclearOrientContinuous = unclearOrientContinuous;\n    function unclearOrientDiscreteOrEmpty(mark) {\n        return \"Cannot clearly determine orientation for \\\"\" + mark + \"\\\" since both x and y channel encode discrete or empty fields.\";\n    }\n    message.unclearOrientDiscreteOrEmpty = unclearOrientDiscreteOrEmpty;\n    function orientOverridden(original, actual) {\n        return \"Specified orient \\\"\" + original + \"\\\" overridden with \\\"\" + actual + \"\\\"\";\n    }\n    message.orientOverridden = orientOverridden;\n    // SCALE\n    message.CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN = 'custom domain scale cannot be unioned with default field-based domain';\n    function cannotUseScalePropertyWithNonColor(prop) {\n        return \"Cannot use the scale property \\\"\" + prop + \"\\\" with non-color channel.\";\n    }\n    message.cannotUseScalePropertyWithNonColor = cannotUseScalePropertyWithNonColor;\n    function unaggregateDomainHasNoEffectForRawField(fieldDef) {\n        return \"Using unaggregated domain with raw field has no effect (\" + util_1.stringify(fieldDef) + \").\";\n    }\n    message.unaggregateDomainHasNoEffectForRawField = unaggregateDomainHasNoEffectForRawField;\n    function unaggregateDomainWithNonSharedDomainOp(aggregate) {\n        return \"Unaggregated domain not applicable for \\\"\" + aggregate + \"\\\" since it produces values outside the origin domain of the source data.\";\n    }\n    message.unaggregateDomainWithNonSharedDomainOp = unaggregateDomainWithNonSharedDomainOp;\n    function unaggregatedDomainWithLogScale(fieldDef) {\n        return \"Unaggregated domain is currently unsupported for log scale (\" + util_1.stringify(fieldDef) + \").\";\n    }\n    message.unaggregatedDomainWithLogScale = unaggregatedDomainWithLogScale;\n    function cannotApplySizeToNonOrientedMark(mark) {\n        return \"Cannot apply size to non-oriented mark \\\"\" + mark + \"\\\".\";\n    }\n    message.cannotApplySizeToNonOrientedMark = cannotApplySizeToNonOrientedMark;\n    function rangeStepDropped(channel) {\n        return \"rangeStep for \\\"\" + channel + \"\\\" is dropped as top-level \" + (channel === 'x' ? 'width' : 'height') + \" is provided.\";\n    }\n    message.rangeStepDropped = rangeStepDropped;\n    function scaleTypeNotWorkWithChannel(channel, scaleType, defaultScaleType) {\n        return \"Channel \\\"\" + channel + \"\\\" does not work with \\\"\" + scaleType + \"\\\" scale. We are using \\\"\" + defaultScaleType + \"\\\" scale instead.\";\n    }\n    message.scaleTypeNotWorkWithChannel = scaleTypeNotWorkWithChannel;\n    function scaleTypeNotWorkWithFieldDef(scaleType, defaultScaleType) {\n        return \"FieldDef does not work with \\\"\" + scaleType + \"\\\" scale. We are using \\\"\" + defaultScaleType + \"\\\" scale instead.\";\n    }\n    message.scaleTypeNotWorkWithFieldDef = scaleTypeNotWorkWithFieldDef;\n    function scalePropertyNotWorkWithScaleType(scaleType, propName, channel) {\n        return channel + \"-scale's \\\"\" + propName + \"\\\" is dropped as it does not work with \" + scaleType + \" scale.\";\n    }\n    message.scalePropertyNotWorkWithScaleType = scalePropertyNotWorkWithScaleType;\n    function scaleTypeNotWorkWithMark(mark, scaleType) {\n        return \"Scale type \\\"\" + scaleType + \"\\\" does not work with mark \\\"\" + mark + \"\\\".\";\n    }\n    message.scaleTypeNotWorkWithMark = scaleTypeNotWorkWithMark;\n    function mergeConflictingProperty(property, propertyOf, v1, v2) {\n        return \"Conflicting \" + propertyOf + \" property \\\"\" + property + \"\\\" (\" + util_1.stringify(v1) + \" and \" + util_1.stringify(v2) + \").  Using \" + util_1.stringify(v1) + \".\";\n    }\n    message.mergeConflictingProperty = mergeConflictingProperty;\n    function independentScaleMeansIndependentGuide(channel) {\n        return \"Setting the scale to be independent for \\\"\" + channel + \"\\\" means we also have to set the guide (axis or legend) to be independent.\";\n    }\n    message.independentScaleMeansIndependentGuide = independentScaleMeansIndependentGuide;\n    function domainSortDropped(sort) {\n        return \"Dropping sort property \" + util_1.stringify(sort) + \" as unioned domains only support boolean or op 'count'.\";\n    }\n    message.domainSortDropped = domainSortDropped;\n    message.UNABLE_TO_MERGE_DOMAINS = 'Unable to merge domains';\n    message.MORE_THAN_ONE_SORT = 'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';\n    // AXIS\n    message.INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';\n    // STACK\n    function cannotStackRangedMark(channel) {\n        return \"Cannot stack \\\"\" + channel + \"\\\" if there is already \\\"\" + channel + \"2\\\"\";\n    }\n    message.cannotStackRangedMark = cannotStackRangedMark;\n    function cannotStackNonLinearScale(scaleType) {\n        return \"Cannot stack non-linear scale (\" + scaleType + \")\";\n    }\n    message.cannotStackNonLinearScale = cannotStackNonLinearScale;\n    function stackNonSummativeAggregate(aggregate) {\n        return \"Stacking is applied even though the aggregate function is non-summative (\\\"\" + aggregate + \"\\\")\";\n    }\n    message.stackNonSummativeAggregate = stackNonSummativeAggregate;\n    // TIMEUNIT\n    function invalidTimeUnit(unitName, value) {\n        return \"Invalid \" + unitName + \": \" + util_1.stringify(value);\n    }\n    message.invalidTimeUnit = invalidTimeUnit;\n    function dayReplacedWithDate(fullTimeUnit) {\n        return \"Time unit \\\"\" + fullTimeUnit + \"\\\" is not supported. We are replacing it with \" + fullTimeUnit.replace('day', 'date') + \".\";\n    }\n    message.dayReplacedWithDate = dayReplacedWithDate;\n    function droppedDay(d) {\n        return \"Dropping day from datetime \" + util_1.stringify(d) + \" as day cannot be combined with other units.\";\n    }\n    message.droppedDay = droppedDay;\n})(message = exports.message || (exports.message = {}));\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/vega-lite/build/src/log.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}}],"sources":{"node_modules/vega-lite/build/src/log.js":"\"use strict\";\n/**\n * Vega-Lite's singleton logger utility.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar util_1 = require(\"./util\");\n/**\n * Main (default) Vega Logger instance for Vega-Lite\n */\nvar main = vega_util_1.logger(vega_util_1.Warn);\nvar current = main;\n/**\n * Logger tool for checking if the code throws correct warning\n */\nvar LocalLogger = /** @class */ (function () {\n    function LocalLogger() {\n        this.warns = [];\n        this.infos = [];\n        this.debugs = [];\n    }\n    LocalLogger.prototype.level = function () {\n        return this;\n    };\n    LocalLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this.warns).push.apply(_a, args);\n        return this;\n        var _a;\n    };\n    LocalLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this.infos).push.apply(_a, args);\n        return this;\n        var _a;\n    };\n    LocalLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this.debugs).push.apply(_a, args);\n        return this;\n        var _a;\n    };\n    return LocalLogger;\n}());\nexports.LocalLogger = LocalLogger;\nfunction wrap(f) {\n    return function () {\n        current = new LocalLogger();\n        f(current);\n        reset();\n    };\n}\nexports.wrap = wrap;\n/**\n * Set the singleton logger to be a custom logger\n */\nfunction set(newLogger) {\n    current = newLogger;\n    return current;\n}\nexports.set = set;\n/**\n * Reset the main logger to use the default Vega Logger\n */\nfunction reset() {\n    current = main;\n    return current;\n}\nexports.reset = reset;\nfunction warn() {\n    var _ = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _[_i] = arguments[_i];\n    }\n    current.warn.apply(current, arguments);\n}\nexports.warn = warn;\nfunction info() {\n    var _ = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _[_i] = arguments[_i];\n    }\n    current.info.apply(current, arguments);\n}\nexports.info = info;\nfunction debug() {\n    var _ = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _[_i] = arguments[_i];\n    }\n    current.debug.apply(current, arguments);\n}\nexports.debug = debug;\n/**\n * Collection of all Vega-Lite Error Messages\n */\nvar message;\n(function (message) {\n    message.INVALID_SPEC = 'Invalid spec';\n    // FIT\n    message.FIT_NON_SINGLE = 'Autosize \"fit\" only works for single views and layered views.';\n    message.CANNOT_FIX_RANGE_STEP_WITH_FIT = 'Cannot use a fixed value of \"rangeStep\" when \"autosize\" is \"fit\".';\n    // SELECTION\n    function cannotProjectOnChannelWithoutField(channel) {\n        return \"Cannot project a selection on encoding channel \\\"\" + channel + \"\\\", which has no field.\";\n    }\n    message.cannotProjectOnChannelWithoutField = cannotProjectOnChannelWithoutField;\n    function nearestNotSupportForContinuous(mark) {\n        return \"The \\\"nearest\\\" transform is not supported for \" + mark + \" marks.\";\n    }\n    message.nearestNotSupportForContinuous = nearestNotSupportForContinuous;\n    function selectionNotFound(name) {\n        return \"Cannot find a selection named \\\"\" + name + \"\\\"\";\n    }\n    message.selectionNotFound = selectionNotFound;\n    message.SCALE_BINDINGS_CONTINUOUS = 'Scale bindings are currently only supported for scales with unbinned, continuous domains.';\n    // REPEAT\n    function noSuchRepeatedValue(field) {\n        return \"Unknown repeated value \\\"\" + field + \"\\\".\";\n    }\n    message.noSuchRepeatedValue = noSuchRepeatedValue;\n    // CONCAT\n    message.CONCAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in concatenated views.';\n    // REPEAT\n    message.REPEAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in repeated views.';\n    // TITLE\n    function cannotSetTitleAnchor(type) {\n        return \"Cannot set title \\\"anchor\\\" for a \" + type + \" spec\";\n    }\n    message.cannotSetTitleAnchor = cannotSetTitleAnchor;\n    // DATA\n    function unrecognizedParse(p) {\n        return \"Unrecognized parse \\\"\" + p + \"\\\".\";\n    }\n    message.unrecognizedParse = unrecognizedParse;\n    function differentParse(field, local, ancestor) {\n        return \"An ancestor parsed field \\\"\" + field + \"\\\" as \" + ancestor + \" but a child wants to parse the field as \" + local + \".\";\n    }\n    message.differentParse = differentParse;\n    // TRANSFORMS\n    function invalidTransformIgnored(transform) {\n        return \"Ignoring an invalid transform: \" + util_1.stringify(transform) + \".\";\n    }\n    message.invalidTransformIgnored = invalidTransformIgnored;\n    message.NO_FIELDS_NEEDS_AS = 'If \"from.fields\" is not specified, \"as\" has to be a string that specifies the key to be used for the data from the secondary source.';\n    // ENCODING & FACET\n    function encodingOverridden(channels) {\n        return \"Layer's shared \" + channels.join(',') + \" channel \" + (channels.length === 1 ? 'is' : 'are') + \" overriden\";\n    }\n    message.encodingOverridden = encodingOverridden;\n    function projectionOverridden(opt) {\n        var parentProjection = opt.parentProjection, projection = opt.projection;\n        return \"Layer's shared projection \" + util_1.stringify(parentProjection) + \" is overridden by a child projection \" + util_1.stringify(projection) + \".\";\n    }\n    message.projectionOverridden = projectionOverridden;\n    function primitiveChannelDef(channel, type, value) {\n        return \"Channel \" + channel + \" is a \" + type + \". Converted to {value: \" + util_1.stringify(value) + \"}.\";\n    }\n    message.primitiveChannelDef = primitiveChannelDef;\n    function invalidFieldType(type) {\n        return \"Invalid field type \\\"\" + type + \"\\\"\";\n    }\n    message.invalidFieldType = invalidFieldType;\n    function nonZeroScaleUsedWithLengthMark(mark, channel, opt) {\n        var scaleText = opt.scaleType ? opt.scaleType + \" scale\" :\n            opt.zeroFalse ? 'scale with zero=false' :\n                'scale with custom domain that excludes zero';\n        return \"A \" + scaleText + \" is used with \" + mark + \" mark. This can be misleading as the \" + (channel === 'x' ? 'width' : 'height') + \" of the \" + mark + \" can be arbitrary based on the scale domain. You may want to use point mark instead.\";\n    }\n    message.nonZeroScaleUsedWithLengthMark = nonZeroScaleUsedWithLengthMark;\n    function invalidFieldTypeForCountAggregate(type, aggregate) {\n        return \"Invalid field type \\\"\" + type + \"\\\" for aggregate: \\\"\" + aggregate + \"\\\", using \\\"quantitative\\\" instead.\";\n    }\n    message.invalidFieldTypeForCountAggregate = invalidFieldTypeForCountAggregate;\n    function invalidAggregate(aggregate) {\n        return \"Invalid aggregation operator \\\"\" + aggregate + \"\\\"\";\n    }\n    message.invalidAggregate = invalidAggregate;\n    function emptyOrInvalidFieldType(type, channel, newType) {\n        return \"Invalid field type \\\"\" + type + \"\\\" for channel \\\"\" + channel + \"\\\", using \\\"\" + newType + \"\\\" instead.\";\n    }\n    message.emptyOrInvalidFieldType = emptyOrInvalidFieldType;\n    function droppingColor(type, opt) {\n        var fill = opt.fill, stroke = opt.stroke;\n        return \"Dropping color \" + type + \" as the plot also has \" + (fill && stroke ? 'fill and stroke' : fill ? 'fill' : 'stroke');\n    }\n    message.droppingColor = droppingColor;\n    function emptyFieldDef(fieldDef, channel) {\n        return \"Dropping \" + util_1.stringify(fieldDef) + \" from channel \\\"\" + channel + \"\\\" since it does not contain data field or value.\";\n    }\n    message.emptyFieldDef = emptyFieldDef;\n    function latLongDeprecated(channel, type, newChannel) {\n        return channel + \"-encoding with type \" + type + \" is deprecated. Replacing with \" + newChannel + \"-encoding.\";\n    }\n    message.latLongDeprecated = latLongDeprecated;\n    message.LINE_WITH_VARYING_SIZE = 'Line marks cannot encode size with a non-groupby field. You may want to use trail marks instead.';\n    function incompatibleChannel(channel, markOrFacet, when) {\n        return channel + \" dropped as it is incompatible with \\\"\" + markOrFacet + \"\\\"\" + (when ? \" when \" + when : '') + \".\";\n    }\n    message.incompatibleChannel = incompatibleChannel;\n    function invalidEncodingChannel(channel) {\n        return channel + \"-encoding is dropped as \" + channel + \" is not a valid encoding channel.\";\n    }\n    message.invalidEncodingChannel = invalidEncodingChannel;\n    function facetChannelShouldBeDiscrete(channel) {\n        return channel + \" encoding should be discrete (ordinal / nominal / binned).\";\n    }\n    message.facetChannelShouldBeDiscrete = facetChannelShouldBeDiscrete;\n    function discreteChannelCannotEncode(channel, type) {\n        return \"Using discrete channel \\\"\" + channel + \"\\\" to encode \\\"\" + type + \"\\\" field can be misleading as it does not encode \" + (type === 'ordinal' ? 'order' : 'magnitude') + \".\";\n    }\n    message.discreteChannelCannotEncode = discreteChannelCannotEncode;\n    // Mark\n    message.BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL = 'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';\n    function lineWithRange(hasX2, hasY2) {\n        var channels = hasX2 && hasY2 ? 'x2 and y2' : hasX2 ? 'x2' : 'y2';\n        return \"Line mark is for continuous lines and thus cannot be used with \" + channels + \". We will use the rule mark (line segments) instead.\";\n    }\n    message.lineWithRange = lineWithRange;\n    function unclearOrientContinuous(mark) {\n        return \"Cannot clearly determine orientation for \\\"\" + mark + \"\\\" since both x and y channel encode continuous fields. In this case, we use vertical by default\";\n    }\n    message.unclearOrientContinuous = unclearOrientContinuous;\n    function unclearOrientDiscreteOrEmpty(mark) {\n        return \"Cannot clearly determine orientation for \\\"\" + mark + \"\\\" since both x and y channel encode discrete or empty fields.\";\n    }\n    message.unclearOrientDiscreteOrEmpty = unclearOrientDiscreteOrEmpty;\n    function orientOverridden(original, actual) {\n        return \"Specified orient \\\"\" + original + \"\\\" overridden with \\\"\" + actual + \"\\\"\";\n    }\n    message.orientOverridden = orientOverridden;\n    // SCALE\n    message.CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN = 'custom domain scale cannot be unioned with default field-based domain';\n    function cannotUseScalePropertyWithNonColor(prop) {\n        return \"Cannot use the scale property \\\"\" + prop + \"\\\" with non-color channel.\";\n    }\n    message.cannotUseScalePropertyWithNonColor = cannotUseScalePropertyWithNonColor;\n    function unaggregateDomainHasNoEffectForRawField(fieldDef) {\n        return \"Using unaggregated domain with raw field has no effect (\" + util_1.stringify(fieldDef) + \").\";\n    }\n    message.unaggregateDomainHasNoEffectForRawField = unaggregateDomainHasNoEffectForRawField;\n    function unaggregateDomainWithNonSharedDomainOp(aggregate) {\n        return \"Unaggregated domain not applicable for \\\"\" + aggregate + \"\\\" since it produces values outside the origin domain of the source data.\";\n    }\n    message.unaggregateDomainWithNonSharedDomainOp = unaggregateDomainWithNonSharedDomainOp;\n    function unaggregatedDomainWithLogScale(fieldDef) {\n        return \"Unaggregated domain is currently unsupported for log scale (\" + util_1.stringify(fieldDef) + \").\";\n    }\n    message.unaggregatedDomainWithLogScale = unaggregatedDomainWithLogScale;\n    function cannotApplySizeToNonOrientedMark(mark) {\n        return \"Cannot apply size to non-oriented mark \\\"\" + mark + \"\\\".\";\n    }\n    message.cannotApplySizeToNonOrientedMark = cannotApplySizeToNonOrientedMark;\n    function rangeStepDropped(channel) {\n        return \"rangeStep for \\\"\" + channel + \"\\\" is dropped as top-level \" + (channel === 'x' ? 'width' : 'height') + \" is provided.\";\n    }\n    message.rangeStepDropped = rangeStepDropped;\n    function scaleTypeNotWorkWithChannel(channel, scaleType, defaultScaleType) {\n        return \"Channel \\\"\" + channel + \"\\\" does not work with \\\"\" + scaleType + \"\\\" scale. We are using \\\"\" + defaultScaleType + \"\\\" scale instead.\";\n    }\n    message.scaleTypeNotWorkWithChannel = scaleTypeNotWorkWithChannel;\n    function scaleTypeNotWorkWithFieldDef(scaleType, defaultScaleType) {\n        return \"FieldDef does not work with \\\"\" + scaleType + \"\\\" scale. We are using \\\"\" + defaultScaleType + \"\\\" scale instead.\";\n    }\n    message.scaleTypeNotWorkWithFieldDef = scaleTypeNotWorkWithFieldDef;\n    function scalePropertyNotWorkWithScaleType(scaleType, propName, channel) {\n        return channel + \"-scale's \\\"\" + propName + \"\\\" is dropped as it does not work with \" + scaleType + \" scale.\";\n    }\n    message.scalePropertyNotWorkWithScaleType = scalePropertyNotWorkWithScaleType;\n    function scaleTypeNotWorkWithMark(mark, scaleType) {\n        return \"Scale type \\\"\" + scaleType + \"\\\" does not work with mark \\\"\" + mark + \"\\\".\";\n    }\n    message.scaleTypeNotWorkWithMark = scaleTypeNotWorkWithMark;\n    function mergeConflictingProperty(property, propertyOf, v1, v2) {\n        return \"Conflicting \" + propertyOf + \" property \\\"\" + property + \"\\\" (\" + util_1.stringify(v1) + \" and \" + util_1.stringify(v2) + \").  Using \" + util_1.stringify(v1) + \".\";\n    }\n    message.mergeConflictingProperty = mergeConflictingProperty;\n    function independentScaleMeansIndependentGuide(channel) {\n        return \"Setting the scale to be independent for \\\"\" + channel + \"\\\" means we also have to set the guide (axis or legend) to be independent.\";\n    }\n    message.independentScaleMeansIndependentGuide = independentScaleMeansIndependentGuide;\n    function domainSortDropped(sort) {\n        return \"Dropping sort property \" + util_1.stringify(sort) + \" as unioned domains only support boolean or op 'count'.\";\n    }\n    message.domainSortDropped = domainSortDropped;\n    message.UNABLE_TO_MERGE_DOMAINS = 'Unable to merge domains';\n    message.MORE_THAN_ONE_SORT = 'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';\n    // AXIS\n    message.INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';\n    // STACK\n    function cannotStackRangedMark(channel) {\n        return \"Cannot stack \\\"\" + channel + \"\\\" if there is already \\\"\" + channel + \"2\\\"\";\n    }\n    message.cannotStackRangedMark = cannotStackRangedMark;\n    function cannotStackNonLinearScale(scaleType) {\n        return \"Cannot stack non-linear scale (\" + scaleType + \")\";\n    }\n    message.cannotStackNonLinearScale = cannotStackNonLinearScale;\n    function stackNonSummativeAggregate(aggregate) {\n        return \"Stacking is applied even though the aggregate function is non-summative (\\\"\" + aggregate + \"\\\")\";\n    }\n    message.stackNonSummativeAggregate = stackNonSummativeAggregate;\n    // TIMEUNIT\n    function invalidTimeUnit(unitName, value) {\n        return \"Invalid \" + unitName + \": \" + util_1.stringify(value);\n    }\n    message.invalidTimeUnit = invalidTimeUnit;\n    function dayReplacedWithDate(fullTimeUnit) {\n        return \"Time unit \\\"\" + fullTimeUnit + \"\\\" is not supported. We are replacing it with \" + fullTimeUnit.replace('day', 'date') + \".\";\n    }\n    message.dayReplacedWithDate = dayReplacedWithDate;\n    function droppedDay(d) {\n        return \"Dropping day from datetime \" + util_1.stringify(d) + \" as day cannot be combined with other units.\";\n    }\n    message.droppedDay = droppedDay;\n})(message = exports.message || (exports.message = {}));\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":326}},"hash":"b6a051ce31a941dca3206078d0bea5af","cacheData":{"env":{}}}