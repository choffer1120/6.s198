{"dependencies":[{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\assignment2\\Assignment2-3\\package.json","includedInParent":true,"mtime":1536780765907},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\assignment2\\Assignment2-3\\.babelrc","includedInParent":true,"mtime":1536780611616},{"name":"C:\\Users\\choff\\Desktop\\fall18\\6.s198\\assignment2\\Assignment2-3\\node_modules\\vega-lite\\build\\src\\package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22}},{"name":"../../util","loc":{"line":4,"column":21}},{"name":"./dataflow","loc":{"line":5,"column":25}},{"name":"./facet","loc":{"line":6,"column":22}},{"name":"./formatparse","loc":{"line":7,"column":28}},{"name":"./source","loc":{"line":8,"column":23}},{"name":"./timeunit","loc":{"line":9,"column":25}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"../../util\");\nvar dataflow_1 = require(\"./dataflow\");\nvar facet_1 = require(\"./facet\");\nvar formatparse_1 = require(\"./formatparse\");\nvar source_1 = require(\"./source\");\nvar timeunit_1 = require(\"./timeunit\");\n/**\n * Start optimization path at the leaves. Useful for merging up or removing things.\n *\n * If the callback returns true, the recursion continues.\n */\nfunction iterateFromLeaves(f) {\n    function optimizeNextFromLeaves(node) {\n        if (node instanceof source_1.SourceNode) {\n            return;\n        }\n        var next = node.parent;\n        if (f(node)) {\n            optimizeNextFromLeaves(next);\n        }\n    }\n    return optimizeNextFromLeaves;\n}\nexports.iterateFromLeaves = iterateFromLeaves;\n/**\n * Move parse nodes up to forks.\n */\nfunction moveParseUp(node) {\n    var parent = node.parent;\n    // move parse up by merging or swapping\n    if (node instanceof formatparse_1.ParseNode) {\n        if (parent instanceof source_1.SourceNode) {\n            return false;\n        }\n        if (parent.numChildren() > 1) {\n            // don't move parse further up but continue with parent.\n            return true;\n        }\n        if (parent instanceof formatparse_1.ParseNode) {\n            parent.merge(node);\n        }\n        else {\n            // don't swap with nodes that produce something that the parse node depends on (e.g. lookup)\n            if (util_1.hasIntersection(parent.producedFields(), node.dependentFields())) {\n                return true;\n            }\n            node.swapWithParent();\n        }\n    }\n    return true;\n}\nexports.moveParseUp = moveParseUp;\n/**\n * Repeatedly remove leaf nodes that are not output or facet nodes.\n * The reason is that we don't need subtrees that don't have any output nodes.\n * Facet nodes are needed for the row or column domains.\n */\nfunction removeUnusedSubtrees(node) {\n    if (node instanceof dataflow_1.OutputNode || node.numChildren() > 0 || node instanceof facet_1.FacetNode) {\n        // no need to continue with parent because it is output node or will have children (there was a fork)\n        return false;\n    }\n    else {\n        node.remove();\n    }\n    return true;\n}\nexports.removeUnusedSubtrees = removeUnusedSubtrees;\n/**\n * Removes duplicate time unit nodes (as determined by the name of the\n * output field) that may be generated due to selections projected over\n * time units.\n */\nfunction removeDuplicateTimeUnits(leaf) {\n    var fields = {};\n    return iterateFromLeaves(function (node) {\n        if (node instanceof timeunit_1.TimeUnitNode) {\n            var pfields = node.producedFields();\n            var dupe = util_1.keys(pfields).every(function (k) { return !!fields[k]; });\n            if (dupe) {\n                node.remove();\n            }\n            else {\n                fields = tslib_1.__assign({}, fields, pfields);\n            }\n        }\n        return true;\n    })(leaf);\n}\nexports.removeDuplicateTimeUnits = removeDuplicateTimeUnits;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW1pemVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21waWxlL2RhdGEvb3B0aW1pemVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxtQ0FBaUQ7QUFDakQsdUNBQW9EO0FBQ3BELGlDQUFrQztBQUNsQyw2Q0FBd0M7QUFDeEMsbUNBQW9DO0FBQ3BDLHVDQUF3QztBQUd4Qzs7OztHQUlHO0FBQ0gsMkJBQWtDLENBQWtDO0lBQ2xFLGdDQUFnQyxJQUFrQjtRQUNoRCxJQUFJLElBQUksWUFBWSxtQkFBVSxFQUFFO1lBQzlCLE9BQU87U0FDUjtRQUVELElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDekIsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDWCxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM5QjtJQUNILENBQUM7SUFFRCxPQUFPLHNCQUFzQixDQUFDO0FBQ2hDLENBQUM7QUFiRCw4Q0FhQztBQUVEOztHQUVHO0FBQ0gscUJBQTRCLElBQWtCO0lBQzVDLElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFFM0IsdUNBQXVDO0lBQ3ZDLElBQUksSUFBSSxZQUFZLHVCQUFTLEVBQUU7UUFDN0IsSUFBSSxNQUFNLFlBQVksbUJBQVUsRUFBRTtZQUNoQyxPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsSUFBSSxNQUFNLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQzVCLHdEQUF3RDtZQUN4RCxPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsSUFBSSxNQUFNLFlBQVksdUJBQVMsRUFBRTtZQUMvQixNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3BCO2FBQU07WUFDTCw0RkFBNEY7WUFDNUYsSUFBSSxzQkFBZSxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsRUFBRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUMsRUFBRTtnQkFDcEUsT0FBTyxJQUFJLENBQUM7YUFDYjtZQUVELElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUN2QjtLQUNGO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBM0JELGtDQTJCQztBQUVEOzs7O0dBSUc7QUFDSCw4QkFBcUMsSUFBa0I7SUFDckQsSUFBSSxJQUFJLFlBQVkscUJBQVUsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxJQUFJLElBQUksWUFBWSxpQkFBUyxFQUFFO1FBQ3JGLHFHQUFxRztRQUNyRyxPQUFPLEtBQUssQ0FBQztLQUNkO1NBQU07UUFDTCxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7S0FDZjtJQUNELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQVJELG9EQVFDO0FBRUQ7Ozs7R0FJRztBQUNILGtDQUF5QyxJQUFrQjtJQUN6RCxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDaEIsT0FBTyxpQkFBaUIsQ0FBQyxVQUFDLElBQWtCO1FBQzFDLElBQUksSUFBSSxZQUFZLHVCQUFZLEVBQUU7WUFDaEMsSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3RDLElBQU0sSUFBSSxHQUFHLFdBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBQyxDQUFDLElBQUssT0FBQSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFYLENBQVcsQ0FBQyxDQUFDO1lBRXJELElBQUksSUFBSSxFQUFFO2dCQUNSLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQzthQUNmO2lCQUFNO2dCQUNMLE1BQU0sd0JBQU8sTUFBTSxFQUFLLE9BQU8sQ0FBQyxDQUFDO2FBQ2xDO1NBQ0Y7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ1gsQ0FBQztBQWhCRCw0REFnQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2hhc0ludGVyc2VjdGlvbiwga2V5c30gZnJvbSAnLi4vLi4vdXRpbCc7XG5pbXBvcnQge0RhdGFGbG93Tm9kZSwgT3V0cHV0Tm9kZX0gZnJvbSAnLi9kYXRhZmxvdyc7XG5pbXBvcnQge0ZhY2V0Tm9kZX0gZnJvbSAnLi9mYWNldCc7XG5pbXBvcnQge1BhcnNlTm9kZX0gZnJvbSAnLi9mb3JtYXRwYXJzZSc7XG5pbXBvcnQge1NvdXJjZU5vZGV9IGZyb20gJy4vc291cmNlJztcbmltcG9ydCB7VGltZVVuaXROb2RlfSBmcm9tICcuL3RpbWV1bml0JztcblxuXG4vKipcbiAqIFN0YXJ0IG9wdGltaXphdGlvbiBwYXRoIGF0IHRoZSBsZWF2ZXMuIFVzZWZ1bCBmb3IgbWVyZ2luZyB1cCBvciByZW1vdmluZyB0aGluZ3MuXG4gKlxuICogSWYgdGhlIGNhbGxiYWNrIHJldHVybnMgdHJ1ZSwgdGhlIHJlY3Vyc2lvbiBjb250aW51ZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpdGVyYXRlRnJvbUxlYXZlcyhmOiAobm9kZTogRGF0YUZsb3dOb2RlKSA9PiBib29sZWFuKSB7XG4gIGZ1bmN0aW9uIG9wdGltaXplTmV4dEZyb21MZWF2ZXMobm9kZTogRGF0YUZsb3dOb2RlKSB7XG4gICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBTb3VyY2VOb2RlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgbmV4dCA9IG5vZGUucGFyZW50O1xuICAgIGlmIChmKG5vZGUpKSB7XG4gICAgICBvcHRpbWl6ZU5leHRGcm9tTGVhdmVzKG5leHQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvcHRpbWl6ZU5leHRGcm9tTGVhdmVzO1xufVxuXG4vKipcbiAqIE1vdmUgcGFyc2Ugbm9kZXMgdXAgdG8gZm9ya3MuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlUGFyc2VVcChub2RlOiBEYXRhRmxvd05vZGUpIHtcbiAgY29uc3QgcGFyZW50ID0gbm9kZS5wYXJlbnQ7XG5cbiAgLy8gbW92ZSBwYXJzZSB1cCBieSBtZXJnaW5nIG9yIHN3YXBwaW5nXG4gIGlmIChub2RlIGluc3RhbmNlb2YgUGFyc2VOb2RlKSB7XG4gICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIFNvdXJjZU5vZGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAocGFyZW50Lm51bUNoaWxkcmVuKCkgPiAxKSB7XG4gICAgICAvLyBkb24ndCBtb3ZlIHBhcnNlIGZ1cnRoZXIgdXAgYnV0IGNvbnRpbnVlIHdpdGggcGFyZW50LlxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIFBhcnNlTm9kZSkge1xuICAgICAgcGFyZW50Lm1lcmdlKG5vZGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBkb24ndCBzd2FwIHdpdGggbm9kZXMgdGhhdCBwcm9kdWNlIHNvbWV0aGluZyB0aGF0IHRoZSBwYXJzZSBub2RlIGRlcGVuZHMgb24gKGUuZy4gbG9va3VwKVxuICAgICAgaWYgKGhhc0ludGVyc2VjdGlvbihwYXJlbnQucHJvZHVjZWRGaWVsZHMoKSwgbm9kZS5kZXBlbmRlbnRGaWVsZHMoKSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIG5vZGUuc3dhcFdpdGhQYXJlbnQoKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBSZXBlYXRlZGx5IHJlbW92ZSBsZWFmIG5vZGVzIHRoYXQgYXJlIG5vdCBvdXRwdXQgb3IgZmFjZXQgbm9kZXMuXG4gKiBUaGUgcmVhc29uIGlzIHRoYXQgd2UgZG9uJ3QgbmVlZCBzdWJ0cmVlcyB0aGF0IGRvbid0IGhhdmUgYW55IG91dHB1dCBub2Rlcy5cbiAqIEZhY2V0IG5vZGVzIGFyZSBuZWVkZWQgZm9yIHRoZSByb3cgb3IgY29sdW1uIGRvbWFpbnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVVbnVzZWRTdWJ0cmVlcyhub2RlOiBEYXRhRmxvd05vZGUpIHtcbiAgaWYgKG5vZGUgaW5zdGFuY2VvZiBPdXRwdXROb2RlIHx8IG5vZGUubnVtQ2hpbGRyZW4oKSA+IDAgfHwgbm9kZSBpbnN0YW5jZW9mIEZhY2V0Tm9kZSkge1xuICAgIC8vIG5vIG5lZWQgdG8gY29udGludWUgd2l0aCBwYXJlbnQgYmVjYXVzZSBpdCBpcyBvdXRwdXQgbm9kZSBvciB3aWxsIGhhdmUgY2hpbGRyZW4gKHRoZXJlIHdhcyBhIGZvcmspXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2Uge1xuICAgIG5vZGUucmVtb3ZlKCk7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8qKlxuICogUmVtb3ZlcyBkdXBsaWNhdGUgdGltZSB1bml0IG5vZGVzIChhcyBkZXRlcm1pbmVkIGJ5IHRoZSBuYW1lIG9mIHRoZVxuICogb3V0cHV0IGZpZWxkKSB0aGF0IG1heSBiZSBnZW5lcmF0ZWQgZHVlIHRvIHNlbGVjdGlvbnMgcHJvamVjdGVkIG92ZXJcbiAqIHRpbWUgdW5pdHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVEdXBsaWNhdGVUaW1lVW5pdHMobGVhZjogRGF0YUZsb3dOb2RlKSB7XG4gIGxldCBmaWVsZHMgPSB7fTtcbiAgcmV0dXJuIGl0ZXJhdGVGcm9tTGVhdmVzKChub2RlOiBEYXRhRmxvd05vZGUpID0+IHtcbiAgICBpZiAobm9kZSBpbnN0YW5jZW9mIFRpbWVVbml0Tm9kZSkge1xuICAgICAgY29uc3QgcGZpZWxkcyA9IG5vZGUucHJvZHVjZWRGaWVsZHMoKTtcbiAgICAgIGNvbnN0IGR1cGUgPSBrZXlzKHBmaWVsZHMpLmV2ZXJ5KChrKSA9PiAhIWZpZWxkc1trXSk7XG5cbiAgICAgIGlmIChkdXBlKSB7XG4gICAgICAgIG5vZGUucmVtb3ZlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmaWVsZHMgPSB7Li4uZmllbGRzLCAuLi5wZmllbGRzfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSkobGVhZik7XG59XG4iXX0=","map":{"mappings":[{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}}],"sources":{"node_modules\\vega-lite\\build\\src\\compile\\data\\optimizers.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"../../util\");\nvar dataflow_1 = require(\"./dataflow\");\nvar facet_1 = require(\"./facet\");\nvar formatparse_1 = require(\"./formatparse\");\nvar source_1 = require(\"./source\");\nvar timeunit_1 = require(\"./timeunit\");\n/**\n * Start optimization path at the leaves. Useful for merging up or removing things.\n *\n * If the callback returns true, the recursion continues.\n */\nfunction iterateFromLeaves(f) {\n    function optimizeNextFromLeaves(node) {\n        if (node instanceof source_1.SourceNode) {\n            return;\n        }\n        var next = node.parent;\n        if (f(node)) {\n            optimizeNextFromLeaves(next);\n        }\n    }\n    return optimizeNextFromLeaves;\n}\nexports.iterateFromLeaves = iterateFromLeaves;\n/**\n * Move parse nodes up to forks.\n */\nfunction moveParseUp(node) {\n    var parent = node.parent;\n    // move parse up by merging or swapping\n    if (node instanceof formatparse_1.ParseNode) {\n        if (parent instanceof source_1.SourceNode) {\n            return false;\n        }\n        if (parent.numChildren() > 1) {\n            // don't move parse further up but continue with parent.\n            return true;\n        }\n        if (parent instanceof formatparse_1.ParseNode) {\n            parent.merge(node);\n        }\n        else {\n            // don't swap with nodes that produce something that the parse node depends on (e.g. lookup)\n            if (util_1.hasIntersection(parent.producedFields(), node.dependentFields())) {\n                return true;\n            }\n            node.swapWithParent();\n        }\n    }\n    return true;\n}\nexports.moveParseUp = moveParseUp;\n/**\n * Repeatedly remove leaf nodes that are not output or facet nodes.\n * The reason is that we don't need subtrees that don't have any output nodes.\n * Facet nodes are needed for the row or column domains.\n */\nfunction removeUnusedSubtrees(node) {\n    if (node instanceof dataflow_1.OutputNode || node.numChildren() > 0 || node instanceof facet_1.FacetNode) {\n        // no need to continue with parent because it is output node or will have children (there was a fork)\n        return false;\n    }\n    else {\n        node.remove();\n    }\n    return true;\n}\nexports.removeUnusedSubtrees = removeUnusedSubtrees;\n/**\n * Removes duplicate time unit nodes (as determined by the name of the\n * output field) that may be generated due to selections projected over\n * time units.\n */\nfunction removeDuplicateTimeUnits(leaf) {\n    var fields = {};\n    return iterateFromLeaves(function (node) {\n        if (node instanceof timeunit_1.TimeUnitNode) {\n            var pfields = node.producedFields();\n            var dupe = util_1.keys(pfields).every(function (k) { return !!fields[k]; });\n            if (dupe) {\n                node.remove();\n            }\n            else {\n                fields = tslib_1.__assign({}, fields, pfields);\n            }\n        }\n        return true;\n    })(leaf);\n}\nexports.removeDuplicateTimeUnits = removeDuplicateTimeUnits;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW1pemVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21waWxlL2RhdGEvb3B0aW1pemVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxtQ0FBaUQ7QUFDakQsdUNBQW9EO0FBQ3BELGlDQUFrQztBQUNsQyw2Q0FBd0M7QUFDeEMsbUNBQW9DO0FBQ3BDLHVDQUF3QztBQUd4Qzs7OztHQUlHO0FBQ0gsMkJBQWtDLENBQWtDO0lBQ2xFLGdDQUFnQyxJQUFrQjtRQUNoRCxJQUFJLElBQUksWUFBWSxtQkFBVSxFQUFFO1lBQzlCLE9BQU87U0FDUjtRQUVELElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDekIsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDWCxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM5QjtJQUNILENBQUM7SUFFRCxPQUFPLHNCQUFzQixDQUFDO0FBQ2hDLENBQUM7QUFiRCw4Q0FhQztBQUVEOztHQUVHO0FBQ0gscUJBQTRCLElBQWtCO0lBQzVDLElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFFM0IsdUNBQXVDO0lBQ3ZDLElBQUksSUFBSSxZQUFZLHVCQUFTLEVBQUU7UUFDN0IsSUFBSSxNQUFNLFlBQVksbUJBQVUsRUFBRTtZQUNoQyxPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsSUFBSSxNQUFNLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQzVCLHdEQUF3RDtZQUN4RCxPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsSUFBSSxNQUFNLFlBQVksdUJBQVMsRUFBRTtZQUMvQixNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3BCO2FBQU07WUFDTCw0RkFBNEY7WUFDNUYsSUFBSSxzQkFBZSxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsRUFBRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUMsRUFBRTtnQkFDcEUsT0FBTyxJQUFJLENBQUM7YUFDYjtZQUVELElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUN2QjtLQUNGO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBM0JELGtDQTJCQztBQUVEOzs7O0dBSUc7QUFDSCw4QkFBcUMsSUFBa0I7SUFDckQsSUFBSSxJQUFJLFlBQVkscUJBQVUsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxJQUFJLElBQUksWUFBWSxpQkFBUyxFQUFFO1FBQ3JGLHFHQUFxRztRQUNyRyxPQUFPLEtBQUssQ0FBQztLQUNkO1NBQU07UUFDTCxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7S0FDZjtJQUNELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQVJELG9EQVFDO0FBRUQ7Ozs7R0FJRztBQUNILGtDQUF5QyxJQUFrQjtJQUN6RCxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDaEIsT0FBTyxpQkFBaUIsQ0FBQyxVQUFDLElBQWtCO1FBQzFDLElBQUksSUFBSSxZQUFZLHVCQUFZLEVBQUU7WUFDaEMsSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3RDLElBQU0sSUFBSSxHQUFHLFdBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBQyxDQUFDLElBQUssT0FBQSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFYLENBQVcsQ0FBQyxDQUFDO1lBRXJELElBQUksSUFBSSxFQUFFO2dCQUNSLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQzthQUNmO2lCQUFNO2dCQUNMLE1BQU0sd0JBQU8sTUFBTSxFQUFLLE9BQU8sQ0FBQyxDQUFDO2FBQ2xDO1NBQ0Y7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ1gsQ0FBQztBQWhCRCw0REFnQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2hhc0ludGVyc2VjdGlvbiwga2V5c30gZnJvbSAnLi4vLi4vdXRpbCc7XG5pbXBvcnQge0RhdGFGbG93Tm9kZSwgT3V0cHV0Tm9kZX0gZnJvbSAnLi9kYXRhZmxvdyc7XG5pbXBvcnQge0ZhY2V0Tm9kZX0gZnJvbSAnLi9mYWNldCc7XG5pbXBvcnQge1BhcnNlTm9kZX0gZnJvbSAnLi9mb3JtYXRwYXJzZSc7XG5pbXBvcnQge1NvdXJjZU5vZGV9IGZyb20gJy4vc291cmNlJztcbmltcG9ydCB7VGltZVVuaXROb2RlfSBmcm9tICcuL3RpbWV1bml0JztcblxuXG4vKipcbiAqIFN0YXJ0IG9wdGltaXphdGlvbiBwYXRoIGF0IHRoZSBsZWF2ZXMuIFVzZWZ1bCBmb3IgbWVyZ2luZyB1cCBvciByZW1vdmluZyB0aGluZ3MuXG4gKlxuICogSWYgdGhlIGNhbGxiYWNrIHJldHVybnMgdHJ1ZSwgdGhlIHJlY3Vyc2lvbiBjb250aW51ZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpdGVyYXRlRnJvbUxlYXZlcyhmOiAobm9kZTogRGF0YUZsb3dOb2RlKSA9PiBib29sZWFuKSB7XG4gIGZ1bmN0aW9uIG9wdGltaXplTmV4dEZyb21MZWF2ZXMobm9kZTogRGF0YUZsb3dOb2RlKSB7XG4gICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBTb3VyY2VOb2RlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgbmV4dCA9IG5vZGUucGFyZW50O1xuICAgIGlmIChmKG5vZGUpKSB7XG4gICAgICBvcHRpbWl6ZU5leHRGcm9tTGVhdmVzKG5leHQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvcHRpbWl6ZU5leHRGcm9tTGVhdmVzO1xufVxuXG4vKipcbiAqIE1vdmUgcGFyc2Ugbm9kZXMgdXAgdG8gZm9ya3MuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlUGFyc2VVcChub2RlOiBEYXRhRmxvd05vZGUpIHtcbiAgY29uc3QgcGFyZW50ID0gbm9kZS5wYXJlbnQ7XG5cbiAgLy8gbW92ZSBwYXJzZSB1cCBieSBtZXJnaW5nIG9yIHN3YXBwaW5nXG4gIGlmIChub2RlIGluc3RhbmNlb2YgUGFyc2VOb2RlKSB7XG4gICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIFNvdXJjZU5vZGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAocGFyZW50Lm51bUNoaWxkcmVuKCkgPiAxKSB7XG4gICAgICAvLyBkb24ndCBtb3ZlIHBhcnNlIGZ1cnRoZXIgdXAgYnV0IGNvbnRpbnVlIHdpdGggcGFyZW50LlxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIFBhcnNlTm9kZSkge1xuICAgICAgcGFyZW50Lm1lcmdlKG5vZGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBkb24ndCBzd2FwIHdpdGggbm9kZXMgdGhhdCBwcm9kdWNlIHNvbWV0aGluZyB0aGF0IHRoZSBwYXJzZSBub2RlIGRlcGVuZHMgb24gKGUuZy4gbG9va3VwKVxuICAgICAgaWYgKGhhc0ludGVyc2VjdGlvbihwYXJlbnQucHJvZHVjZWRGaWVsZHMoKSwgbm9kZS5kZXBlbmRlbnRGaWVsZHMoKSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIG5vZGUuc3dhcFdpdGhQYXJlbnQoKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBSZXBlYXRlZGx5IHJlbW92ZSBsZWFmIG5vZGVzIHRoYXQgYXJlIG5vdCBvdXRwdXQgb3IgZmFjZXQgbm9kZXMuXG4gKiBUaGUgcmVhc29uIGlzIHRoYXQgd2UgZG9uJ3QgbmVlZCBzdWJ0cmVlcyB0aGF0IGRvbid0IGhhdmUgYW55IG91dHB1dCBub2Rlcy5cbiAqIEZhY2V0IG5vZGVzIGFyZSBuZWVkZWQgZm9yIHRoZSByb3cgb3IgY29sdW1uIGRvbWFpbnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVVbnVzZWRTdWJ0cmVlcyhub2RlOiBEYXRhRmxvd05vZGUpIHtcbiAgaWYgKG5vZGUgaW5zdGFuY2VvZiBPdXRwdXROb2RlIHx8IG5vZGUubnVtQ2hpbGRyZW4oKSA+IDAgfHwgbm9kZSBpbnN0YW5jZW9mIEZhY2V0Tm9kZSkge1xuICAgIC8vIG5vIG5lZWQgdG8gY29udGludWUgd2l0aCBwYXJlbnQgYmVjYXVzZSBpdCBpcyBvdXRwdXQgbm9kZSBvciB3aWxsIGhhdmUgY2hpbGRyZW4gKHRoZXJlIHdhcyBhIGZvcmspXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2Uge1xuICAgIG5vZGUucmVtb3ZlKCk7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8qKlxuICogUmVtb3ZlcyBkdXBsaWNhdGUgdGltZSB1bml0IG5vZGVzIChhcyBkZXRlcm1pbmVkIGJ5IHRoZSBuYW1lIG9mIHRoZVxuICogb3V0cHV0IGZpZWxkKSB0aGF0IG1heSBiZSBnZW5lcmF0ZWQgZHVlIHRvIHNlbGVjdGlvbnMgcHJvamVjdGVkIG92ZXJcbiAqIHRpbWUgdW5pdHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVEdXBsaWNhdGVUaW1lVW5pdHMobGVhZjogRGF0YUZsb3dOb2RlKSB7XG4gIGxldCBmaWVsZHMgPSB7fTtcbiAgcmV0dXJuIGl0ZXJhdGVGcm9tTGVhdmVzKChub2RlOiBEYXRhRmxvd05vZGUpID0+IHtcbiAgICBpZiAobm9kZSBpbnN0YW5jZW9mIFRpbWVVbml0Tm9kZSkge1xuICAgICAgY29uc3QgcGZpZWxkcyA9IG5vZGUucHJvZHVjZWRGaWVsZHMoKTtcbiAgICAgIGNvbnN0IGR1cGUgPSBrZXlzKHBmaWVsZHMpLmV2ZXJ5KChrKSA9PiAhIWZpZWxkc1trXSk7XG5cbiAgICAgIGlmIChkdXBlKSB7XG4gICAgICAgIG5vZGUucmVtb3ZlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmaWVsZHMgPSB7Li4uZmllbGRzLCAuLi5wZmllbGRzfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSkobGVhZik7XG59XG4iXX0="},"lineCount":94}},"hash":"e875a5545febe502fd7fcff2bb3f8a03","cacheData":{"env":{}}}